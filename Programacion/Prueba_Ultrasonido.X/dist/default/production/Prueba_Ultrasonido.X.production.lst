

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Jun 16 16:15:36 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 1.44
    53                           ; Generated 14/09/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F47K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	smallconst
    88  000F00                     __psmallconst:
    89                           	opt stack 0
    90  000F00  00                 	db	0
    91  000F01                     _dpowers:
    92                           	opt stack 0
    93  000F01  0001               	dw	1
    94  000F03  000A               	dw	10
    95  000F05  0064               	dw	100
    96  000F07  03E8               	dw	1000
    97  000F09  2710               	dw	10000
    98  000F0B                     __end_of_dpowers:
    99                           	opt stack 0
   100  000F0B                     STR_1:
   101                           
   102                           ; BSR set to: 0
   103  000F0B  25                 	db	37
   104  000F0C  69                 	db	105	;'i'
   105  000F0D  20                 	db	32
   106  000F0E  25                 	db	37
   107  000F0F  69                 	db	105	;'i'
   108  000F10  20                 	db	32
   109  000F11  0A                 	db	10
   110  000F12  00                 	db	0
   111                           
   112                           ; #config settings
   113  000F13  00                 	db	0	; dummy byte at the end
   114  0000                     
   115                           	psect	nvCOMRAM
   116  000051                     __pnvCOMRAM:
   117                           	opt stack 0
   118  000051                     _EUSART1_RxDefaultInterruptHandler:
   119                           	opt stack 0
   120  000051                     	ds	3
   121  000054                     _EUSART1_TxDefaultInterruptHandler:
   122                           	opt stack 0
   123  000054                     	ds	3
   124  000057                     _INT0_InterruptHandler:
   125                           	opt stack 0
   126  000057                     	ds	3
   127  00005A                     _timer5ReloadVal:
   128                           	opt stack 0
   129  00005A                     	ds	2
   130                           
   131                           	psect	nvBANK0
   132  0000CD                     __pnvBANK0:
   133                           	opt stack 0
   134  0000CD                     _eusart1TxBufferRemaining:
   135                           	opt stack 0
   136  0000CD                     	ds	1
   137  0000                     _RC6PPS	set	3837
   138  0000                     _RX1PPSbits	set	3765
   139  0000                     _INT0PPSbits	set	3745
   140  0000                     _PMD5	set	3814
   141  0000                     _PMD4	set	3813
   142  0000                     _PMD3	set	3812
   143  0000                     _PMD2	set	3811
   144  0000                     _PMD1	set	3810
   145  0000                     _PMD0	set	3809
   146  0000                     _OSCTUNE	set	3805
   147  0000                     _OSCFRQ	set	3806
   148  0000                     _OSCEN	set	3804
   149  0000                     _OSCCON3	set	3802
   150  0000                     _OSCCON1	set	3800
   151  0000                     _PIR3bits	set	3789
   152  0000                     _PIE3bits	set	3781
   153  0000                     _PIR4bits	set	3790
   154  0000                     _PIE0bits	set	3778
   155  0000                     _PIR0bits	set	3786
   156  0000                     _ODCOND	set	3876
   157  0000                     _ODCONC	set	3871
   158  0000                     _ODCONB	set	3863
   159  0000                     _ODCONA	set	3855
   160  0000                     _ODCONE	set	3884
   161  0000                     _WPUC	set	3872
   162  0000                     _WPUA	set	3856
   163  0000                     _WPUB	set	3864
   164  0000                     _WPUE	set	3885
   165  0000                     _WPUD	set	3877
   166  0000                     _ANSELA	set	3857
   167  0000                     _ANSELE	set	3886
   168  0000                     _ANSELB	set	3865
   169  0000                     _ANSELC	set	3873
   170  0000                     _ANSELD	set	3878
   171  0000                     _PORTBbits	set	3982
   172  0000                     _RC1REG	set	3993
   173  0000                     _RC1STAbits	set	3997
   174  0000                     _TX1REG	set	3994
   175  0000                     _TX1STAbits	set	3998
   176  0000                     _SP1BRGH	set	3996
   177  0000                     _SP1BRGL	set	3995
   178  0000                     _TX1STA	set	3998
   179  0000                     _RC1STA	set	3997
   180  0000                     _BAUD1CON	set	3999
   181  0000                     _TRISD	set	3979
   182  0000                     _TRISC	set	3978
   183  0000                     _TRISB	set	3977
   184  0000                     _TRISA	set	3976
   185  0000                     _TRISE	set	3980
   186  0000                     _LATC	set	3973
   187  0000                     _LATB	set	3972
   188  0000                     _LATA	set	3971
   189  0000                     _LATD	set	3974
   190  0000                     _LATE	set	3975
   191  0000                     _T5GCONbits	set	4036
   192  0000                     _T5CONbits	set	4035
   193  0000                     _T5CON	set	4035
   194  0000                     _TMR5L	set	4033
   195  0000                     _TMR5H	set	4034
   196  0000                     _T5CLK	set	4038
   197  0000                     _T5GATE	set	4037
   198  0000                     _T5GCON	set	4036
   199  0000                     _INTCONbits	set	4082
   200                           
   201                           	psect	cinit
   202  001756                     __pcinit:
   203                           	opt stack 0
   204  001756                     start_initialization:
   205                           	opt stack 0
   206  001756                     __initialization:
   207                           	opt stack 0
   208                           
   209                           ; Clear objects allocated to BANK0 (79 bytes)
   210  001756  EE00  F060         	lfsr	0,__pbssBANK0
   211  00175A  0E4F               	movlw	79
   212  00175C                     clear_0:
   213  00175C  6AEE               	clrf	postinc0,c
   214  00175E  06E8               	decf	wreg,f,c
   215  001760  E1FD               	bnz	clear_0
   216                           
   217                           ; Clear objects allocated to COMRAM (21 bytes)
   218  001762  EE00  F03C         	lfsr	0,__pbssCOMRAM
   219  001766  0E15               	movlw	21
   220  001768                     clear_1:
   221  001768  6AEE               	clrf	postinc0,c
   222  00176A  06E8               	decf	wreg,f,c
   223  00176C  E1FD               	bnz	clear_1
   224  00176E                     end_of_initialization:
   225                           	opt stack 0
   226  00176E                     __end_of__initialization:
   227                           	opt stack 0
   228  00176E  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229  001770  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230  001772  0100               	movlb	0
   231  001774  EFEF  F009         	goto	_main	;jump to C main() function
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	bssCOMRAM
   236  00003C                     __pbssCOMRAM:
   237                           	opt stack 0
   238  00003C                     _eusart1RxBuffer:
   239                           	opt stack 0
   240  00003C                     	ds	8
   241  000044                     _eusart1TxBuffer:
   242                           	opt stack 0
   243  000044                     	ds	8
   244  00004C                     _promedio:
   245                           	opt stack 0
   246  00004C                     	ds	2
   247  00004E                     _numMedicion:
   248                           	opt stack 0
   249  00004E                     	ds	1
   250  00004F                     _eusart1RxCount:
   251                           	opt stack 0
   252  00004F                     	ds	1
   253  000050                     _eusart1RxTail:
   254                           	opt stack 0
   255  000050                     	ds	1
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           
   259                           	psect	bssBANK0
   260  000060                     __pbssBANK0:
   261                           	opt stack 0
   262  000060                     _mediciones:
   263                           	opt stack 0
   264  000060                     	ds	40
   265  000088                     _distancia:
   266                           	opt stack 0
   267  000088                     	ds	2
   268  00008A                     _eusart1RxHead:
   269                           	opt stack 0
   270  00008A                     	ds	1
   271  00008B                     _eusart1TxTail:
   272                           	opt stack 0
   273  00008B                     	ds	1
   274  00008C                     _eusart1TxHead:
   275                           	opt stack 0
   276  00008C                     	ds	1
   277  00008D                     _vectorString:
   278                           	opt stack 0
   279  00008D                     	ds	32
   280  0000AD                     _timerCount:
   281                           	opt stack 0
   282  0000AD                     	ds	2
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	cstackBANK0
   287  0000AF                     __pcstackBANK0:
   288                           	opt stack 0
   289  0000AF                     ??_TMR5_Initialize:
   290  0000AF                     ?___lwdiv:
   291                           	opt stack 0
   292  0000AF                     EUSART1_Write@txData:
   293                           	opt stack 0
   294  0000AF                     ___lwdiv@dividend:
   295                           	opt stack 0
   296  0000AF                     INT0_SetInterruptHandler@InterruptHandler:
   297                           	opt stack 0
   298  0000AF                     EUSART1_SetTxInterruptHandler@interruptHandler:
   299                           	opt stack 0
   300  0000AF                     EUSART1_SetRxInterruptHandler@interruptHandler:
   301                           	opt stack 0
   302                           
   303                           ; 3 bytes @ 0x0
   304  0000AF                     	ds	1
   305  0000B0                     serial_print@cadena:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x1
   309  0000B0                     	ds	1
   310  0000B1                     ___lwdiv@divisor:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x2
   314  0000B1                     	ds	1
   315  0000B2                     serial_print@i:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x3
   319  0000B2                     	ds	1
   320  0000B3                     ___lwdiv@quotient:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x4
   324  0000B3                     	ds	2
   325  0000B5                     ___lwdiv@counter:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x6
   329  0000B5                     	ds	1
   330  0000B6                     ?___lwmod:
   331                           	opt stack 0
   332  0000B6                     ___lwmod@dividend:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x7
   336  0000B6                     	ds	2
   337  0000B8                     ___lwmod@divisor:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x9
   341  0000B8                     	ds	2
   342  0000BA                     ___lwmod@counter:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0xB
   346  0000BA                     	ds	1
   347  0000BB                     ?_sprintf:
   348                           	opt stack 0
   349  0000BB                     sprintf@sp:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0xC
   353  0000BB                     	ds	2
   354  0000BD                     sprintf@f:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0xE
   358  0000BD                     	ds	6
   359  0000C3                     ??_sprintf:
   360                           
   361                           ; 1 bytes @ 0x14
   362  0000C3                     	ds	1
   363  0000C4                     sprintf@ap:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x15
   367  0000C4                     	ds	2
   368  0000C6                     sprintf@flag:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x17
   372  0000C6                     	ds	1
   373  0000C7                     sprintf@prec:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x18
   377  0000C7                     	ds	1
   378  0000C8                     sprintf@val:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x19
   382  0000C8                     	ds	2
   383  0000CA                     sprintf@c:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x1B
   387  0000CA                     	ds	1
   388  0000CB                     ??_main:
   389                           
   390                           ; 1 bytes @ 0x1C
   391  0000CB                     	ds	2
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           
   395                           	psect	cstackCOMRAM
   396  000001                     __pcstackCOMRAM:
   397                           	opt stack 0
   398  000001                     ?_TMR5_ReadTimer:
   399                           	opt stack 0
   400  000001                     ?i2___lwdiv:
   401                           	opt stack 0
   402  000001                     ?___ftpack:
   403                           	opt stack 0
   404  000001                     TMR5_WriteTimer@timerVal:
   405                           	opt stack 0
   406  000001                     i2___lwdiv@dividend:
   407                           	opt stack 0
   408  000001                     ___ftpack@arg:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x0
   412  000001                     	ds	2
   413  000003                     ??_TMR5_ReadTimer:
   414  000003                     i2___lwdiv@divisor:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x2
   418  000003                     	ds	1
   419  000004                     ___ftpack@exp:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x3
   423  000004                     	ds	1
   424  000005                     ___ftpack@sign:
   425                           	opt stack 0
   426  000005                     TMR5_ReadTimer@readVal:
   427                           	opt stack 0
   428  000005                     i2___lwdiv@quotient:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x4
   432  000005                     	ds	1
   433  000006                     ??___ftpack:
   434                           
   435                           ; 1 bytes @ 0x5
   436  000006                     	ds	1
   437  000007                     TMR5_ReadTimer@readValHigh:
   438                           	opt stack 0
   439  000007                     i2___lwdiv@counter:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x6
   443  000007                     	ds	1
   444  000008                     TMR5_ReadTimer@readValLow:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x7
   448  000008                     	ds	1
   449  000009                     ?___lwtoft:
   450                           	opt stack 0
   451  000009                     ___lwtoft@c:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x8
   455  000009                     	ds	3
   456  00000C                     ?___ftmul:
   457                           	opt stack 0
   458  00000C                     ___ftmul@f1:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0xB
   462  00000C                     	ds	3
   463  00000F                     ___ftmul@f2:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0xE
   467  00000F                     	ds	3
   468  000012                     ??___ftmul:
   469                           
   470                           ; 1 bytes @ 0x11
   471  000012                     	ds	3
   472  000015                     ___ftmul@exp:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x14
   476  000015                     	ds	1
   477  000016                     ___ftmul@f3_as_product:
   478                           	opt stack 0
   479                           
   480                           ; 3 bytes @ 0x15
   481  000016                     	ds	3
   482  000019                     ___ftmul@cntr:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x18
   486  000019                     	ds	1
   487  00001A                     ___ftmul@sign:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x19
   491  00001A                     	ds	1
   492  00001B                     ?___fttol:
   493                           	opt stack 0
   494  00001B                     ___fttol@f1:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x1A
   498  00001B                     	ds	4
   499  00001F                     ??___fttol:
   500                           
   501                           ; 1 bytes @ 0x1E
   502  00001F                     	ds	5
   503  000024                     ___fttol@sign1:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x23
   507  000024                     	ds	1
   508  000025                     ___fttol@lval:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0x24
   512  000025                     	ds	4
   513  000029                     ___fttol@exp1:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x28
   517  000029                     	ds	1
   518  00002A                     ??_INTERRUPT_InterruptManager:
   519                           
   520                           ; 1 bytes @ 0x29
   521  00002A                     	ds	18
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 62 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   546 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   547 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   548 ;;Total ram usage:        2 bytes
   549 ;; Hardware stack levels required when called:    9
   550 ;; This function calls:
   551 ;;		_INT0_SetInterruptHandler
   552 ;;		_SYSTEM_Initialize
   553 ;;		_TMR5_StopTimer
   554 ;;		_serial_print
   555 ;;		_sprintf
   556 ;; This function is called by:
   557 ;;		Startup code after reset
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text0
   562  0013DE                     __ptext0:
   563                           	opt stack 0
   564  0013DE                     _main:
   565                           	opt stack 22
   566                           
   567                           ;main.c: 65: SYSTEM_Initialize();
   568                           
   569                           ;incstack = 0
   570  0013DE  ECDD  F00B         	call	_SYSTEM_Initialize	;wreg free
   571                           
   572                           ;main.c: 66: INT0_SetInterruptHandler(echoChanged);
   573  0013E2  0E5E               	movlw	low _echoChanged
   574  0013E4  0100               	movlb	0	; () banked
   575  0013E6  6FAF               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
   576  0013E8  0E12               	movlw	high _echoChanged
   577  0013EA  6FB0               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
   578  0013EC  0E00               	movlw	low (_echoChanged shr (0+16))
   579  0013EE  6FB1               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
   580  0013F0  EC23  F00C         	call	_INT0_SetInterruptHandler	;wreg free
   581                           
   582                           ;main.c: 67: (INTCONbits.INT0EDG = 1);
   583  0013F4  80F2               	bsf	intcon,0,c	;volatile
   584                           
   585                           ;main.c: 74: (INTCONbits.GIE = 1);
   586  0013F6  8EF2               	bsf	intcon,7,c	;volatile
   587                           
   588                           ;main.c: 80: (INTCONbits.PEIE = 1);
   589  0013F8  8CF2               	bsf	intcon,6,c	;volatile
   590                           
   591                           ;main.c: 85: TMR5_StopTimer();
   592  0013FA  EC3D  F00C         	call	_TMR5_StopTimer	;wreg free
   593                           
   594                           ;main.c: 86: PORTBbits.RB1 = 1;
   595  0013FE  828E               	bsf	3982,1,c	;volatile
   596                           
   597                           ;main.c: 87: _delay((unsigned long)((10)*(32000000/4000000.0)));
   598  001400  0E1A               	movlw	26
   599  001402                     u1257:
   600  001402  2EE8               	decfsz	wreg,f,c
   601  001404  D7FE               	bra	u1257
   602  001406  D000               	nop2	
   603                           
   604                           ;main.c: 88: PORTBbits.RB1 = 0;
   605  001408  928E               	bcf	3982,1,c	;volatile
   606  00140A                     
   607                           ;main.c: 91: {
   608                           ;main.c: 92: _delay((unsigned long)((200)*(32000000/4000.0)));
   609  00140A  0E09               	movlw	9
   610  00140C  0100               	movlb	0	; () banked
   611  00140E  6FCC               	movwf	(??_main+1)& (0+255),b
   612  001410  0E1E               	movlw	30
   613  001412  6FCB               	movwf	??_main& (0+255),b
   614  001414  0EE4               	movlw	228
   615  001416                     u1267:
   616  001416  2EE8               	decfsz	wreg,f,c
   617  001418  D7FE               	bra	u1267
   618  00141A  2FCB               	decfsz	??_main& (0+255),f,b
   619  00141C  D7FC               	bra	u1267
   620  00141E  2FCC               	decfsz	(??_main+1)& (0+255),f,b
   621  001420  D7FA               	bra	u1267
   622  001422  F000               	nop	
   623                           
   624                           ;main.c: 93: sprintf(vectorString, "%i %i \n", timerCount, distancia);
   625  001424  0E8D               	movlw	low _vectorString
   626  001426  0100               	movlb	0	; () banked
   627  001428  6FBB               	movwf	sprintf@sp& (0+255),b
   628  00142A  0E00               	movlw	high _vectorString
   629  00142C  6FBC               	movwf	(sprintf@sp+1)& (0+255),b
   630  00142E  0E0B               	movlw	low STR_1
   631  001430  6FBD               	movwf	sprintf@f& (0+255),b
   632  001432  0E0F               	movlw	high STR_1
   633  001434  6FBE               	movwf	(sprintf@f+1)& (0+255),b
   634  001436  C0AD  F0BF         	movff	_timerCount,?_sprintf+4
   635  00143A  C0AE  F0C0         	movff	_timerCount+1,?_sprintf+5
   636  00143E  C088  F0C1         	movff	_distancia,?_sprintf+6
   637  001442  C089  F0C2         	movff	_distancia+1,?_sprintf+7
   638  001446  EC8A  F007         	call	_sprintf	;wreg free
   639                           
   640                           ;main.c: 94: serial_print(vectorString);
   641  00144A  0E8D               	movlw	low _vectorString
   642  00144C  0100               	movlb	0	; () banked
   643  00144E  6FB0               	movwf	serial_print@cadena& (0+255),b
   644  001450  0E00               	movlw	high _vectorString
   645  001452  6FB1               	movwf	(serial_print@cadena+1)& (0+255),b
   646  001454  EC31  F00B         	call	_serial_print	;wreg free
   647  001458  D7D8               	goto	l358
   648  00145A                     __end_of_main:
   649                           	opt stack 0
   650                           intcon	equ	0xFF2
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           
   654 ;; *************** function _sprintf *****************
   655 ;; Defined at:
   656 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  sp              2   12[BANK0 ] PTR unsigned char 
   659 ;;		 -> vectorString(32), 
   660 ;;  f               2   14[BANK0 ] PTR const unsigned char 
   661 ;;		 -> STR_1(8), 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  tmpval          4    0        struct .
   664 ;;  cp              3    0        PTR const unsigned char 
   665 ;;  val             2   25[BANK0 ] unsigned int 
   666 ;;  ap              2   21[BANK0 ] PTR void [1]
   667 ;;		 -> ?_sprintf(2), 
   668 ;;  len             2    0        unsigned int 
   669 ;;  c               1   27[BANK0 ] char 
   670 ;;  prec            1   24[BANK0 ] char 
   671 ;;  flag            1   23[BANK0 ] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  2   12[BANK0 ] int 
   674 ;; Registers used:
   675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   681 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   682 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   683 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   684 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   685 ;;Total ram usage:       16 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    7
   688 ;; This function calls:
   689 ;;		___lwdiv
   690 ;;		___lwmod
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text1
   697  000F14                     __ptext1:
   698                           	opt stack 0
   699  000F14                     _sprintf:
   700                           	opt stack 23
   701                           
   702                           ;doprnt.c: 494: va_list ap;
   703                           ;doprnt.c: 499: signed char c;
   704                           ;doprnt.c: 506: signed char prec;
   705                           ;doprnt.c: 508: unsigned char flag;
   706                           ;doprnt.c: 523: union {
   707                           ;doprnt.c: 524: unsigned long vd;
   708                           ;doprnt.c: 525: double integ;
   709                           ;doprnt.c: 526: } tmpval;
   710                           ;doprnt.c: 528: unsigned int val;
   711                           ;doprnt.c: 529: unsigned len;
   712                           ;doprnt.c: 530: const char * cp;
   713                           ;doprnt.c: 533: *ap = __va_start();
   714                           
   715                           ;incstack = 0
   716  000F14  0EBF               	movlw	low (?_sprintf+4)
   717  000F16  0100               	movlb	0	; () banked
   718  000F18  6FC4               	movwf	sprintf@ap& (0+255),b
   719  000F1A  0E00               	movlw	high (?_sprintf+4)
   720  000F1C  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
   721                           
   722                           ;doprnt.c: 536: while(c = *f++) {
   723  000F1E  D096               	goto	u1130
   724  000F20                     
   725                           ; BSR set to: 0
   726                           ;doprnt.c: 538: if(c != '%')
   727                           
   728                           ; BSR set to: 0
   729  000F20  0E25               	movlw	37
   730  000F22  19CA               	xorwf	sprintf@c& (0+255),w,b
   731  000F24  B4D8               	btfsc	status,2,c
   732  000F26  D009               	goto	l384
   733                           
   734                           ; BSR set to: 0
   735                           ;doprnt.c: 540: {
   736                           ;doprnt.c: 541: ((*sp++ = (c)));
   737  000F28  C0BB  FFD9         	movff	sprintf@sp,fsr2l
   738  000F2C  C0BC  FFDA         	movff	sprintf@sp+1,fsr2h
   739  000F30  C0CA  FFDF         	movff	sprintf@c,indf2
   740                           
   741                           ; BSR set to: 0
   742  000F34  4BBB               	infsnz	sprintf@sp& (0+255),f,b
   743  000F36  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
   744                           
   745                           ;doprnt.c: 542: continue;
   746  000F38  D089               	goto	u1130
   747  000F3A                     l384:
   748                           
   749                           ; BSR set to: 0
   750                           ;doprnt.c: 543: }
   751                           ;doprnt.c: 548: flag = 0;
   752                           
   753                           ; BSR set to: 0
   754  000F3A  0E00               	movlw	0
   755  000F3C  6FC6               	movwf	sprintf@flag& (0+255),b
   756                           
   757                           ; BSR set to: 0
   758                           
   759                           ; BSR set to: 0
   760                           
   761                           ; BSR set to: 0
   762                           ;doprnt.c: 822: }
   763                           
   764                           ; BSR set to: 0
   765                           ;doprnt.c: 813: continue;
   766                           
   767                           ;doprnt.c: 802: default:
   768                           
   769                           ; BSR set to: 0
   770                           ;doprnt.c: 698: case 'i':
   771                           ;doprnt.c: 699: break;
   772                           
   773                           ; BSR set to: 0
   774                           
   775                           ;doprnt.c: 697: case 'd':
   776                           
   777                           ; BSR set to: 0
   778                           ;doprnt.c: 638: goto alldone;
   779                           
   780                           ;doprnt.c: 637: case 0:
   781                           
   782                           ;doprnt.c: 635: switch(c = *f++) {
   783  000F3E  C0BD  FFF6         	movff	sprintf@f,tblptrl
   784  000F42  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
   785  000F46  4BBD               	infsnz	sprintf@f& (0+255),f,b
   786  000F48  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
   787  000F4A                     	if	0	;tblptru may be non-zero
   788  000F4A                     	endif
   789  000F4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   790  000F4A  0E00               	movlw	low (__mediumconst shr (0+16))
   791  000F4C  6EF8               	movwf	tblptru,c
   792  000F4E                     	endif
   793  000F4E  0008               	tblrd		*
   794  000F50  CFF5 F0CA          	movff	tablat,sprintf@c
   795  000F54  51CA               	movf	sprintf@c& (0+255),w,b
   796                           
   797                           ; Switch size 1, requested type "space"
   798                           ; Number of cases is 3, Range of values is 0 to 105
   799                           ; switch strategies available:
   800                           ; Name         Instructions Cycles
   801                           ; simple_byte           10     6 (average)
   802                           ;	Chosen strategy is simple_byte
   803  000F56  0A00               	xorlw	0	; case 0
   804  000F58  B4D8               	btfsc	status,2,c
   805  000F5A  D086               	goto	u1140
   806  000F5C  0A64               	xorlw	100	; case 100
   807  000F5E  B4D8               	btfsc	status,2,c
   808  000F60  D003               	goto	l390
   809  000F62  0A0D               	xorlw	13	; case 105
   810  000F64  A4D8               	btfss	status,2,c
   811  000F66  D072               	goto	u1130
   812  000F68                     l390:
   813                           
   814                           ; BSR set to: 0
   815                           ;doprnt.c: 1253: {
   816                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   817                           
   818                           ; BSR set to: 0
   819  000F68  C0C4  FFD9         	movff	sprintf@ap,fsr2l
   820  000F6C  C0C5  FFDA         	movff	sprintf@ap+1,fsr2h
   821  000F70  CFDE F0C8          	movff	postinc2,sprintf@val
   822  000F74  CFDD F0C9          	movff	postdec2,sprintf@val+1
   823                           
   824                           ; BSR set to: 0
   825  000F78  0E02               	movlw	2
   826  000F7A  27C4               	addwf	sprintf@ap& (0+255),f,b
   827  000F7C  0E00               	movlw	0
   828  000F7E  23C5               	addwfc	(sprintf@ap+1)& (0+255),f,b
   829                           
   830                           ; BSR set to: 0
   831                           ;doprnt.c: 1261: if((int)val < 0) {
   832  000F80  AFC9               	btfss	(sprintf@val+1)& (0+255),7,b
   833  000F82  D006               	goto	l392
   834                           
   835                           ; BSR set to: 0
   836                           ;doprnt.c: 1262: flag |= 0x03;
   837  000F84  0E03               	movlw	3
   838  000F86  13C6               	iorwf	sprintf@flag& (0+255),f,b
   839                           
   840                           ; BSR set to: 0
   841                           ;doprnt.c: 1263: val = -val;
   842  000F88  6DC8               	negf	sprintf@val& (0+255),b
   843  000F8A  1FC9               	comf	(sprintf@val+1)& (0+255),f,b
   844  000F8C  B0D8               	btfsc	status,0,c
   845  000F8E  2BC9               	incf	(sprintf@val+1)& (0+255),f,b
   846  000F90                     l392:
   847                           
   848                           ; BSR set to: 0
   849                           ;doprnt.c: 1264: }
   850                           ;doprnt.c: 1266: }
   851                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   852                           
   853                           ; BSR set to: 0
   854  000F90  0E01               	movlw	1
   855  000F92  6FCA               	movwf	sprintf@c& (0+255),b
   856  000F94                     l1975:
   857                           
   858                           ; BSR set to: 0
   859  000F94  0E05               	movlw	5
   860  000F96  19CA               	xorwf	sprintf@c& (0+255),w,b
   861  000F98  B4D8               	btfsc	status,2,c
   862  000F9A  D015               	goto	u1110
   863                           
   864                           ; BSR set to: 0
   865                           ;doprnt.c: 1306: if(val < dpowers[c])
   866                           
   867                           ; BSR set to: 0
   868                           
   869                           ; BSR set to: 0
   870  000F9C  51CA               	movf	sprintf@c& (0+255),w,b
   871  000F9E  0D02               	mullw	2
   872  000FA0  0E01               	movlw	low _dpowers
   873  000FA2  24F3               	addwf	prodl,w,c
   874  000FA4  6EF6               	movwf	tblptrl,c
   875  000FA6  0E0F               	movlw	high _dpowers
   876  000FA8  20F4               	addwfc	prodh,w,c
   877  000FAA  6EF7               	movwf	tblptrh,c
   878  000FAC                     	if	1	;There are 3 active tblptr bytes
   879  000FAC  6AF8               	clrf	tblptru,c
   880  000FAE  0E00               	movlw	low (__mediumconst shr (0+16))
   881  000FB0  22F8               	addwfc	tblptru,f,c
   882  000FB2                     	endif
   883  000FB2  0009               	tblrd		*+
   884  000FB4  50F5               	movf	tablat,w,c
   885  000FB6  5DC8               	subwf	sprintf@val& (0+255),w,b
   886  000FB8  0009               	tblrd		*+
   887  000FBA  50F5               	movf	tablat,w,c
   888  000FBC  59C9               	subwfb	(sprintf@val+1)& (0+255),w,b
   889  000FBE  A0D8               	btfss	status,0,c
   890  000FC0  D002               	goto	u1110
   891                           
   892                           ; BSR set to: 0
   893                           
   894                           ; BSR set to: 0
   895                           
   896                           ; BSR set to: 0
   897                           ;doprnt.c: 1307: break;
   898  000FC2  2BCA               	incf	sprintf@c& (0+255),f,b
   899  000FC4  D7E7               	goto	l1975
   900  000FC6                     u1110:
   901                           
   902                           ; BSR set to: 0
   903                           ;doprnt.c: 1422: {
   904                           ;doprnt.c: 1438: if(flag & 0x03)
   905                           
   906                           ; BSR set to: 0
   907  000FC6  C0C6  F0C3         	movff	sprintf@flag,??_sprintf
   908  000FCA  0E03               	movlw	3
   909  000FCC  17C3               	andwf	??_sprintf& (0+255),f,b
   910  000FCE  B4D8               	btfsc	status,2,c
   911  000FD0  D008               	goto	l396
   912                           
   913                           ; BSR set to: 0
   914                           ;doprnt.c: 1439: ((*sp++ = ('-')));
   915  000FD2  C0BB  FFD9         	movff	sprintf@sp,fsr2l
   916  000FD6  C0BC  FFDA         	movff	sprintf@sp+1,fsr2h
   917  000FDA  0E2D               	movlw	45
   918  000FDC  6EDF               	movwf	indf2,c
   919                           
   920                           ; BSR set to: 0
   921  000FDE  4BBB               	infsnz	sprintf@sp& (0+255),f,b
   922  000FE0  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
   923  000FE2                     l396:
   924                           
   925                           ; BSR set to: 0
   926                           ;doprnt.c: 1469: }
   927                           ;doprnt.c: 1472: prec = c;
   928                           
   929                           ; BSR set to: 0
   930  000FE2  C0CA  F0C7         	movff	sprintf@c,sprintf@prec
   931                           
   932                           ;doprnt.c: 1474: while(prec--) {
   933  000FE6  D02E               	goto	l397
   934  000FE8                     
   935                           ; BSR set to: 0
   936                           ;doprnt.c: 1478: {
   937                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   938                           
   939                           ; BSR set to: 0
   940  000FE8  51C7               	movf	sprintf@prec& (0+255),w,b
   941  000FEA  0D02               	mullw	2
   942  000FEC  0E01               	movlw	low _dpowers
   943  000FEE  24F3               	addwf	prodl,w,c
   944  000FF0  6EF6               	movwf	tblptrl,c
   945  000FF2  0E0F               	movlw	high _dpowers
   946  000FF4  20F4               	addwfc	prodh,w,c
   947  000FF6  6EF7               	movwf	tblptrh,c
   948  000FF8                     	if	1	;There are 3 active tblptr bytes
   949  000FF8  6AF8               	clrf	tblptru,c
   950  000FFA  0E00               	movlw	low (__mediumconst shr (0+16))
   951  000FFC  22F8               	addwfc	tblptru,f,c
   952  000FFE                     	endif
   953  000FFE  0009               	tblrd		*+
   954  001000  CFF5 F0B1          	movff	tablat,___lwdiv@divisor
   955  001004  000A               	tblrd		*-
   956  001006  CFF5 F0B2          	movff	tablat,___lwdiv@divisor+1
   957  00100A  C0C8  F0AF         	movff	sprintf@val,___lwdiv@dividend
   958  00100E  C0C9  F0B0         	movff	sprintf@val+1,___lwdiv@dividend+1
   959  001012  EC9A  F00A         	call	___lwdiv	;wreg free
   960  001016  C0AF  F0B6         	movff	?___lwdiv,___lwmod@dividend
   961  00101A  C0B0  F0B7         	movff	?___lwdiv+1,___lwmod@dividend+1
   962  00101E  0E00               	movlw	0
   963  001020  0100               	movlb	0	; () banked
   964  001022  6FB9               	movwf	(___lwmod@divisor+1)& (0+255),b
   965  001024  0E0A               	movlw	10
   966  001026  6FB8               	movwf	___lwmod@divisor& (0+255),b
   967  001028  ECED  F00A         	call	___lwmod	;wreg free
   968  00102C  0100               	movlb	0	; () banked
   969  00102E  51B6               	movf	?___lwmod& (0+255),w,b
   970  001030  0F30               	addlw	48
   971  001032  6FCA               	movwf	sprintf@c& (0+255),b
   972                           
   973                           ; BSR set to: 0
   974                           ;doprnt.c: 1523: }
   975                           ;doprnt.c: 1524: ((*sp++ = (c)));
   976  001034  C0BB  FFD9         	movff	sprintf@sp,fsr2l
   977  001038  C0BC  FFDA         	movff	sprintf@sp+1,fsr2h
   978  00103C  C0CA  FFDF         	movff	sprintf@c,indf2
   979                           
   980                           ; BSR set to: 0
   981  001040  4BBB               	infsnz	sprintf@sp& (0+255),f,b
   982  001042  2BBC               	incf	(sprintf@sp+1)& (0+255),f,b
   983  001044                     l397:
   984                           
   985                           ; BSR set to: 0
   986                           
   987                           ; BSR set to: 0
   988  001044  07C7               	decf	sprintf@prec& (0+255),f,b
   989  001046  29C7               	incf	sprintf@prec& (0+255),w,b
   990  001048  A4D8               	btfss	status,2,c
   991  00104A  D7CE               	goto	l398
   992  00104C                     u1130:
   993                           
   994                           ; BSR set to: 0
   995                           
   996                           ; BSR set to: 0
   997                           
   998                           ; BSR set to: 0
   999  00104C  C0BD  FFF6         	movff	sprintf@f,tblptrl
  1000  001050  C0BE  FFF7         	movff	sprintf@f+1,tblptrh
  1001  001054  4BBD               	infsnz	sprintf@f& (0+255),f,b
  1002  001056  2BBE               	incf	(sprintf@f+1)& (0+255),f,b
  1003  001058                     	if	0	;tblptru may be non-zero
  1004  001058                     	endif
  1005  001058                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1006  001058  0E00               	movlw	low (__mediumconst shr (0+16))
  1007  00105A  6EF8               	movwf	tblptru,c
  1008  00105C                     	endif
  1009  00105C  0008               	tblrd		*
  1010  00105E  CFF5 F0CA          	movff	tablat,sprintf@c
  1011  001062  51CA               	movf	sprintf@c& (0+255),w,b
  1012  001064  A4D8               	btfss	status,2,c
  1013  001066  D75C               	goto	l383
  1014  001068                     u1140:
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;doprnt.c: 1538: *sp = 0;
  1018                           
  1019                           ; BSR set to: 0
  1020                           
  1021                           ;doprnt.c: 1525: }
  1022                           ;doprnt.c: 1533: }
  1023                           ;doprnt.c: 1535: alldone:
  1024                           
  1025                           ; BSR set to: 0
  1026  001068  C0BB  FFD9         	movff	sprintf@sp,fsr2l
  1027  00106C  C0BC  FFDA         	movff	sprintf@sp+1,fsr2h
  1028  001070  0E00               	movlw	0
  1029  001072  6EDF               	movwf	indf2,c
  1030  001074  0012               	return	
  1031  001076                     __end_of_sprintf:
  1032                           	opt stack 0
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           prodh	equ	0xFF4
  1038                           prodl	equ	0xFF3
  1039                           intcon	equ	0xFF2
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           indf2	equ	0xFDF
  1043                           postinc2	equ	0xFDE
  1044                           postdec2	equ	0xFDD
  1045                           fsr2h	equ	0xFDA
  1046                           fsr2l	equ	0xFD9
  1047                           status	equ	0xFD8
  1048                           
  1049 ;; *************** function ___lwmod *****************
  1050 ;; Defined at:
  1051 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  dividend        2    7[BANK0 ] unsigned int 
  1054 ;;  divisor         2    9[BANK0 ] unsigned int 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  counter         1   11[BANK0 ] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  2    7[BANK0 ] unsigned int 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1069 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1070 ;;Total ram usage:        5 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    6
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_sprintf
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text2
  1081  0015DA                     __ptext2:
  1082                           	opt stack 0
  1083  0015DA                     ___lwmod:
  1084                           	opt stack 23
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;incstack = 0
  1088  0015DA  0100               	movlb	0	; () banked
  1089  0015DC  51B8               	movf	___lwmod@divisor& (0+255),w,b
  1090  0015DE  11B9               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1091  0015E0  B4D8               	btfsc	status,2,c
  1092  0015E2  D018               	goto	l820
  1093                           
  1094                           ; BSR set to: 0
  1095  0015E4  0E01               	movlw	1
  1096  0015E6  6FBA               	movwf	___lwmod@counter& (0+255),b
  1097  0015E8  D004               	goto	l815
  1098  0015EA                     
  1099                           ; BSR set to: 0
  1100                           
  1101                           ; BSR set to: 0
  1102  0015EA  90D8               	bcf	status,0,c
  1103  0015EC  37B8               	rlcf	___lwmod@divisor& (0+255),f,b
  1104  0015EE  37B9               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1105  0015F0  2BBA               	incf	___lwmod@counter& (0+255),f,b
  1106  0015F2                     l815:
  1107                           
  1108                           ; BSR set to: 0
  1109                           
  1110                           ; BSR set to: 0
  1111  0015F2  AFB9               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1112  0015F4  D7FA               	goto	l816
  1113  0015F6                     u1010:
  1114                           
  1115                           ; BSR set to: 0
  1116                           
  1117                           ; BSR set to: 0
  1118                           
  1119                           ; BSR set to: 0
  1120  0015F6  51B8               	movf	___lwmod@divisor& (0+255),w,b
  1121  0015F8  5DB6               	subwf	___lwmod@dividend& (0+255),w,b
  1122  0015FA  51B9               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1123  0015FC  59B7               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1124  0015FE  A0D8               	btfss	status,0,c
  1125  001600  D004               	goto	l819
  1126                           
  1127                           ; BSR set to: 0
  1128  001602  51B8               	movf	___lwmod@divisor& (0+255),w,b
  1129  001604  5FB6               	subwf	___lwmod@dividend& (0+255),f,b
  1130  001606  51B9               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1131  001608  5BB7               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1132  00160A                     l819:
  1133                           
  1134                           ; BSR set to: 0
  1135                           
  1136                           ; BSR set to: 0
  1137  00160A  90D8               	bcf	status,0,c
  1138  00160C  33B9               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1139  00160E  33B8               	rrcf	___lwmod@divisor& (0+255),f,b
  1140                           
  1141                           ; BSR set to: 0
  1142  001610  2FBA               	decfsz	___lwmod@counter& (0+255),f,b
  1143  001612  D7F1               	goto	u1010
  1144  001614                     l820:
  1145                           
  1146                           ; BSR set to: 0
  1147                           
  1148                           ; BSR set to: 0
  1149  001614  C0B6  F0B6         	movff	___lwmod@dividend,?___lwmod
  1150  001618  C0B7  F0B7         	movff	___lwmod@dividend+1,?___lwmod+1
  1151                           
  1152                           ; BSR set to: 0
  1153  00161C  0012               	return		;funcret
  1154  00161E                     __end_of___lwmod:
  1155                           	opt stack 0
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           prodh	equ	0xFF4
  1161                           prodl	equ	0xFF3
  1162                           intcon	equ	0xFF2
  1163                           postinc0	equ	0xFEE
  1164                           wreg	equ	0xFE8
  1165                           indf2	equ	0xFDF
  1166                           postinc2	equ	0xFDE
  1167                           postdec2	equ	0xFDD
  1168                           fsr2h	equ	0xFDA
  1169                           fsr2l	equ	0xFD9
  1170                           status	equ	0xFD8
  1171                           
  1172 ;; *************** function ___lwdiv *****************
  1173 ;; Defined at:
  1174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  dividend        2    0[BANK0 ] unsigned int 
  1177 ;;  divisor         2    2[BANK0 ] unsigned int 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  quotient        2    4[BANK0 ] unsigned int 
  1180 ;;  counter         1    6[BANK0 ] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  2    0[BANK0 ] unsigned int 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1190 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1191 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1193 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1194 ;;Total ram usage:        7 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    6
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_sprintf
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text3
  1205  001534                     __ptext3:
  1206                           	opt stack 0
  1207  001534                     ___lwdiv:
  1208                           	opt stack 23
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;incstack = 0
  1212  001534  0E00               	movlw	0
  1213  001536  0100               	movlb	0	; () banked
  1214  001538  6FB4               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1215  00153A  0E00               	movlw	0
  1216  00153C  6FB3               	movwf	___lwdiv@quotient& (0+255),b
  1217                           
  1218                           ; BSR set to: 0
  1219  00153E  51B1               	movf	___lwdiv@divisor& (0+255),w,b
  1220  001540  11B2               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1221  001542  B4D8               	btfsc	status,2,c
  1222  001544  D01C               	goto	l810
  1223                           
  1224                           ; BSR set to: 0
  1225  001546  0E01               	movlw	1
  1226  001548  6FB5               	movwf	___lwdiv@counter& (0+255),b
  1227  00154A  D004               	goto	l805
  1228  00154C                     
  1229                           ; BSR set to: 0
  1230                           
  1231                           ; BSR set to: 0
  1232  00154C  90D8               	bcf	status,0,c
  1233  00154E  37B1               	rlcf	___lwdiv@divisor& (0+255),f,b
  1234  001550  37B2               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1235  001552  2BB5               	incf	___lwdiv@counter& (0+255),f,b
  1236  001554                     l805:
  1237                           
  1238                           ; BSR set to: 0
  1239                           
  1240                           ; BSR set to: 0
  1241  001554  AFB2               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1242  001556  D7FA               	goto	l806
  1243  001558                     u980:
  1244                           
  1245                           ; BSR set to: 0
  1246                           
  1247                           ; BSR set to: 0
  1248                           
  1249                           ; BSR set to: 0
  1250  001558  90D8               	bcf	status,0,c
  1251  00155A  37B3               	rlcf	___lwdiv@quotient& (0+255),f,b
  1252  00155C  37B4               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1253                           
  1254                           ; BSR set to: 0
  1255  00155E  51B1               	movf	___lwdiv@divisor& (0+255),w,b
  1256  001560  5DAF               	subwf	___lwdiv@dividend& (0+255),w,b
  1257  001562  51B2               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1258  001564  59B0               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1259  001566  A0D8               	btfss	status,0,c
  1260  001568  D005               	goto	l809
  1261                           
  1262                           ; BSR set to: 0
  1263  00156A  51B1               	movf	___lwdiv@divisor& (0+255),w,b
  1264  00156C  5FAF               	subwf	___lwdiv@dividend& (0+255),f,b
  1265  00156E  51B2               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1266  001570  5BB0               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1267                           
  1268                           ; BSR set to: 0
  1269  001572  81B3               	bsf	___lwdiv@quotient& (0+255),0,b
  1270  001574                     l809:
  1271                           
  1272                           ; BSR set to: 0
  1273                           
  1274                           ; BSR set to: 0
  1275  001574  90D8               	bcf	status,0,c
  1276  001576  33B2               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1277  001578  33B1               	rrcf	___lwdiv@divisor& (0+255),f,b
  1278                           
  1279                           ; BSR set to: 0
  1280  00157A  2FB5               	decfsz	___lwdiv@counter& (0+255),f,b
  1281  00157C  D7ED               	goto	u980
  1282  00157E                     l810:
  1283                           
  1284                           ; BSR set to: 0
  1285                           
  1286                           ; BSR set to: 0
  1287  00157E  C0B3  F0AF         	movff	___lwdiv@quotient,?___lwdiv
  1288  001582  C0B4  F0B0         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1289                           
  1290                           ; BSR set to: 0
  1291  001586  0012               	return		;funcret
  1292  001588                     __end_of___lwdiv:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           prodh	equ	0xFF4
  1299                           prodl	equ	0xFF3
  1300                           intcon	equ	0xFF2
  1301                           postinc0	equ	0xFEE
  1302                           wreg	equ	0xFE8
  1303                           indf2	equ	0xFDF
  1304                           postinc2	equ	0xFDE
  1305                           postdec2	equ	0xFDD
  1306                           fsr2h	equ	0xFDA
  1307                           fsr2l	equ	0xFD9
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function _serial_print *****************
  1311 ;; Defined at:
  1312 ;;		line 126 in file "main.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  cadena          2    1[BANK0 ] PTR unsigned char 
  1315 ;;		 -> vectorString(32), 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  i               1    3[BANK0 ] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1327 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1330 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;Total ram usage:        3 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    7
  1334 ;; This function calls:
  1335 ;;		_EUSART1_Write
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text4
  1342  001662                     __ptext4:
  1343                           	opt stack 0
  1344  001662                     _serial_print:
  1345                           	opt stack 23
  1346                           
  1347                           ;main.c: 128: uint8_t i = 0;
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;incstack = 0
  1351  001662  0E00               	movlw	0
  1352  001664  0100               	movlb	0	; () banked
  1353  001666  6FB2               	movwf	serial_print@i& (0+255),b
  1354                           
  1355                           ;main.c: 129: while (cadena[i] != 0)
  1356  001668  D00D               	goto	l370
  1357  00166A                     
  1358                           ; BSR set to: 0
  1359                           ;main.c: 130: {
  1360                           ;main.c: 131: EUSART1_Write(cadena[i]);
  1361                           
  1362                           ; BSR set to: 0
  1363  00166A  51B2               	movf	serial_print@i& (0+255),w,b
  1364  00166C  0D01               	mullw	1
  1365  00166E  50F3               	movf	prodl,w,c
  1366  001670  25B0               	addwf	serial_print@cadena& (0+255),w,b
  1367  001672  6ED9               	movwf	fsr2l,c
  1368  001674  50F4               	movf	prodh,w,c
  1369  001676  21B1               	addwfc	(serial_print@cadena+1)& (0+255),w,b
  1370  001678  6EDA               	movwf	fsr2h,c
  1371  00167A  50DF               	movf	indf2,w,c
  1372  00167C  EC0F  F00B         	call	_EUSART1_Write
  1373                           
  1374                           ;main.c: 132: i++;
  1375  001680  0100               	movlb	0	; () banked
  1376  001682  2BB2               	incf	serial_print@i& (0+255),f,b
  1377  001684                     l370:
  1378                           
  1379                           ; BSR set to: 0
  1380                           
  1381                           ; BSR set to: 0
  1382  001684  51B2               	movf	serial_print@i& (0+255),w,b
  1383  001686  0D01               	mullw	1
  1384  001688  50F3               	movf	prodl,w,c
  1385  00168A  25B0               	addwf	serial_print@cadena& (0+255),w,b
  1386  00168C  6ED9               	movwf	fsr2l,c
  1387  00168E  50F4               	movf	prodh,w,c
  1388  001690  21B1               	addwfc	(serial_print@cadena+1)& (0+255),w,b
  1389  001692  6EDA               	movwf	fsr2h,c
  1390  001694  50DF               	movf	indf2,w,c
  1391  001696  B4D8               	btfsc	status,2,c
  1392  001698  0012               	return	
  1393  00169A  D7E7               	goto	l371
  1394  00169C                     __end_of_serial_print:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           prodh	equ	0xFF4
  1401                           prodl	equ	0xFF3
  1402                           intcon	equ	0xFF2
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           indf2	equ	0xFDF
  1406                           postinc2	equ	0xFDE
  1407                           postdec2	equ	0xFDD
  1408                           fsr2h	equ	0xFDA
  1409                           fsr2l	equ	0xFD9
  1410                           status	equ	0xFD8
  1411                           
  1412 ;; *************** function _EUSART1_Write *****************
  1413 ;; Defined at:
  1414 ;;		line 148 in file "mcc_generated_files/eusart1.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  txData          1    wreg     unsigned char 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  txData          1    0[BANK0 ] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1431 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;Total ram usage:        1 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    6
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_serial_print
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text5
  1443  00161E                     __ptext5:
  1444                           	opt stack 0
  1445  00161E                     _EUSART1_Write:
  1446                           	opt stack 23
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;incstack = 0
  1450                           ;EUSART1_Write@txData stored from wreg
  1451  00161E  0100               	movlb	0	; () banked
  1452  001620  6FAF               	movwf	EUSART1_Write@txData& (0+255),b
  1453  001622                     
  1454                           ;eusart1.c: 151: {
  1455                           
  1456                           ;eusart1.c: 150: while(0 == eusart1TxBufferRemaining)
  1457  001622  0100               	movlb	0	; () banked
  1458  001624  51CD               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  1459  001626  B4D8               	btfsc	status,2,c
  1460  001628  D7FC               	goto	l1847
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;eusart1.c: 152: }
  1464                           ;eusart1.c: 154: if(0 == PIE3bits.TX1IE)
  1465  00162A  010E               	movlb	14	; () banked
  1466  00162C  B9C5               	btfsc	197,4,b	;volatile
  1467  00162E  D003               	goto	l291
  1468                           
  1469                           ; BSR set to: 14
  1470                           ;eusart1.c: 155: {
  1471                           ;eusart1.c: 156: TX1REG = txData;
  1472  001630  C0AF  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  1473                           
  1474                           ;eusart1.c: 157: }
  1475  001634  D013               	goto	l292
  1476  001636                     l291:
  1477                           
  1478                           ; BSR set to: 14
  1479                           ;eusart1.c: 158: else
  1480                           ;eusart1.c: 159: {
  1481                           ;eusart1.c: 160: PIE3bits.TX1IE = 0;
  1482  001636  99C5               	bcf	197,4,b	;volatile
  1483                           
  1484                           ; BSR set to: 14
  1485                           ;eusart1.c: 161: eusart1TxBuffer[eusart1TxHead++] = txData;
  1486  001638  0100               	movlb	0	; () banked
  1487  00163A  518C               	movf	_eusart1TxHead& (0+255),w,b	;volatile
  1488  00163C  0D01               	mullw	1
  1489  00163E  0E44               	movlw	low _eusart1TxBuffer
  1490  001640  24F3               	addwf	prodl,w,c
  1491  001642  6ED9               	movwf	fsr2l,c
  1492  001644  0E00               	movlw	high _eusart1TxBuffer
  1493  001646  20F4               	addwfc	prodh,w,c
  1494  001648  6EDA               	movwf	fsr2h,c
  1495  00164A  C0AF  FFDF         	movff	EUSART1_Write@txData,indf2
  1496                           
  1497                           ; BSR set to: 0
  1498  00164E  2B8C               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;eusart1.c: 162: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1502  001650  0E07               	movlw	7
  1503  001652  658C               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  1504  001654  D002               	goto	l293
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;eusart1.c: 163: {
  1508                           ;eusart1.c: 164: eusart1TxHead = 0;
  1509  001656  0E00               	movlw	0
  1510  001658  6F8C               	movwf	_eusart1TxHead& (0+255),b	;volatile
  1511  00165A                     l293:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;eusart1.c: 165: }
  1515                           ;eusart1.c: 166: eusart1TxBufferRemaining--;
  1516                           
  1517                           ; BSR set to: 0
  1518  00165A  07CD               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  1519  00165C                     l292:
  1520                           
  1521                           ;eusart1.c: 167: }
  1522                           ;eusart1.c: 168: PIE3bits.TX1IE = 1;
  1523                           
  1524                           ; BSR set to: 0
  1525  00165C  010E               	movlb	14	; () banked
  1526  00165E  89C5               	bsf	197,4,b	;volatile
  1527                           
  1528                           ; BSR set to: 14
  1529  001660  0012               	return		;funcret
  1530  001662                     __end_of_EUSART1_Write:
  1531                           	opt stack 0
  1532                           tblptru	equ	0xFF8
  1533                           tblptrh	equ	0xFF7
  1534                           tblptrl	equ	0xFF6
  1535                           tablat	equ	0xFF5
  1536                           prodh	equ	0xFF4
  1537                           prodl	equ	0xFF3
  1538                           intcon	equ	0xFF2
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           indf2	equ	0xFDF
  1542                           postinc2	equ	0xFDE
  1543                           postdec2	equ	0xFDD
  1544                           fsr2h	equ	0xFDA
  1545                           fsr2l	equ	0xFD9
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _TMR5_StopTimer *****************
  1549 ;; Defined at:
  1550 ;;		line 98 in file "mcc_generated_files/tmr5.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		None
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    6
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text6
  1579  00187A                     __ptext6:
  1580                           	opt stack 0
  1581  00187A                     _TMR5_StopTimer:
  1582                           	opt stack 24
  1583                           
  1584                           ;tmr5.c: 101: T5CONbits.TMR5ON = 0;
  1585                           
  1586                           ; BSR set to: 14
  1587                           ;incstack = 0
  1588  00187A  90C3               	bcf	4035,0,c	;volatile
  1589  00187C  0012               	return		;funcret
  1590  00187E                     __end_of_TMR5_StopTimer:
  1591                           	opt stack 0
  1592                           tblptru	equ	0xFF8
  1593                           tblptrh	equ	0xFF7
  1594                           tblptrl	equ	0xFF6
  1595                           tablat	equ	0xFF5
  1596                           prodh	equ	0xFF4
  1597                           prodl	equ	0xFF3
  1598                           intcon	equ	0xFF2
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           indf2	equ	0xFDF
  1602                           postinc2	equ	0xFDE
  1603                           postdec2	equ	0xFDD
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function _SYSTEM_Initialize *****************
  1609 ;; Defined at:
  1610 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    8
  1631 ;; This function calls:
  1632 ;;		_EUSART1_Initialize
  1633 ;;		_EXT_INT_Initialize
  1634 ;;		_INTERRUPT_Initialize
  1635 ;;		_OSCILLATOR_Initialize
  1636 ;;		_PIN_MANAGER_Initialize
  1637 ;;		_PMD_Initialize
  1638 ;;		_TMR5_Initialize
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text7
  1645  0017BA                     __ptext7:
  1646                           	opt stack 0
  1647  0017BA                     _SYSTEM_Initialize:
  1648                           	opt stack 22
  1649                           
  1650                           ;mcc.c: 52: INTERRUPT_Initialize();
  1651                           
  1652                           ;incstack = 0
  1653  0017BA  EC3F  F00C         	call	_INTERRUPT_Initialize	;wreg free
  1654                           
  1655                           ;mcc.c: 53: PMD_Initialize();
  1656  0017BE  ECFB  F00B         	call	_PMD_Initialize	;wreg free
  1657                           
  1658                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1659  0017C2  EC2D  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  1660                           
  1661                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1662  0017C6  EC17  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  1663                           
  1664                           ;mcc.c: 56: TMR5_Initialize();
  1665  0017CA  EC4E  F00B         	call	_TMR5_Initialize	;wreg free
  1666                           
  1667                           ;mcc.c: 57: EXT_INT_Initialize();
  1668  0017CE  ECEC  F00B         	call	_EXT_INT_Initialize	;wreg free
  1669                           
  1670                           ;mcc.c: 58: EUSART1_Initialize();
  1671  0017D2  EC6A  F00A         	call	_EUSART1_Initialize	;wreg free
  1672  0017D6  0012               	return		;funcret
  1673  0017D8                     __end_of_SYSTEM_Initialize:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           prodh	equ	0xFF4
  1680                           prodl	equ	0xFF3
  1681                           intcon	equ	0xFF2
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           indf2	equ	0xFDF
  1685                           postinc2	equ	0xFDE
  1686                           postdec2	equ	0xFDD
  1687                           fsr2h	equ	0xFDA
  1688                           fsr2l	equ	0xFD9
  1689                           status	equ	0xFD8
  1690                           
  1691 ;; *************** function _TMR5_Initialize *****************
  1692 ;; Defined at:
  1693 ;;		line 63 in file "mcc_generated_files/tmr5.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1711 ;;Total ram usage:        2 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    6
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_SYSTEM_Initialize
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text8
  1722  00169C                     __ptext8:
  1723                           	opt stack 0
  1724  00169C                     _TMR5_Initialize:
  1725                           	opt stack 23
  1726                           
  1727                           ;tmr5.c: 68: T5GCON = 0x00;
  1728                           
  1729                           ;incstack = 0
  1730  00169C  0E00               	movlw	0
  1731  00169E  6EC4               	movwf	4036,c	;volatile
  1732                           
  1733                           ;tmr5.c: 71: T5GATE = 0x00;
  1734  0016A0  0E00               	movlw	0
  1735  0016A2  6EC5               	movwf	4037,c	;volatile
  1736                           
  1737                           ;tmr5.c: 74: T5CLK = 0x01;
  1738  0016A4  0E01               	movlw	1
  1739  0016A6  6EC6               	movwf	4038,c	;volatile
  1740                           
  1741                           ;tmr5.c: 77: TMR5H = 0x00;
  1742  0016A8  0E00               	movlw	0
  1743  0016AA  6EC2               	movwf	4034,c	;volatile
  1744                           
  1745                           ;tmr5.c: 80: TMR5L = 0x00;
  1746  0016AC  0E00               	movlw	0
  1747  0016AE  6EC1               	movwf	4033,c	;volatile
  1748                           
  1749                           ;tmr5.c: 83: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  1750  0016B0  50C1               	movf	4033,w,c	;volatile
  1751  0016B2  CFC2 F0AF          	movff	4034,??_TMR5_Initialize	;volatile
  1752  0016B6  0100               	movlb	0	; () banked
  1753  0016B8  6BB0               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  1754  0016BA  C0AF  F0B0         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  1755  0016BE  6BAF               	clrf	??_TMR5_Initialize& (0+255),b
  1756  0016C0  11AF               	iorwf	??_TMR5_Initialize& (0+255),w,b
  1757  0016C2  6E5A               	movwf	_timer5ReloadVal,c	;volatile
  1758  0016C4  51B0               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  1759  0016C6  6E5B               	movwf	_timer5ReloadVal+1,c	;volatile
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;tmr5.c: 86: PIR4bits.TMR5IF = 0;
  1763  0016C8  010E               	movlb	14	; () banked
  1764  0016CA  99CE               	bcf	206,4,b	;volatile
  1765                           
  1766                           ; BSR set to: 14
  1767                           ;tmr5.c: 89: T5CON = 0x33;
  1768  0016CC  0E33               	movlw	51
  1769  0016CE  6EC3               	movwf	4035,c	;volatile
  1770                           
  1771                           ; BSR set to: 14
  1772  0016D0  0012               	return		;funcret
  1773  0016D2                     __end_of_TMR5_Initialize:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           prodh	equ	0xFF4
  1780                           prodl	equ	0xFF3
  1781                           intcon	equ	0xFF2
  1782                           postinc0	equ	0xFEE
  1783                           wreg	equ	0xFE8
  1784                           indf2	equ	0xFDF
  1785                           postinc2	equ	0xFDE
  1786                           postdec2	equ	0xFDD
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _PMD_Initialize *****************
  1792 ;; Defined at:
  1793 ;;		line 75 in file "mcc_generated_files/mcc.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    6
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_SYSTEM_Initialize
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text9
  1822  0017F6                     __ptext9:
  1823                           	opt stack 0
  1824  0017F6                     _PMD_Initialize:
  1825                           	opt stack 23
  1826                           
  1827                           ;mcc.c: 78: PMD0 = 0x00;
  1828                           
  1829                           ; BSR set to: 14
  1830                           ;incstack = 0
  1831  0017F6  0E00               	movlw	0
  1832  0017F8  010E               	movlb	14	; () banked
  1833  0017FA  6FE1               	movwf	225,b	;volatile
  1834                           
  1835                           ;mcc.c: 80: PMD1 = 0x00;
  1836  0017FC  0E00               	movlw	0
  1837  0017FE  6FE2               	movwf	226,b	;volatile
  1838                           
  1839                           ;mcc.c: 82: PMD2 = 0x00;
  1840  001800  0E00               	movlw	0
  1841  001802  6FE3               	movwf	227,b	;volatile
  1842                           
  1843                           ;mcc.c: 84: PMD3 = 0x00;
  1844  001804  0E00               	movlw	0
  1845  001806  6FE4               	movwf	228,b	;volatile
  1846                           
  1847                           ;mcc.c: 86: PMD4 = 0x00;
  1848  001808  0E00               	movlw	0
  1849  00180A  6FE5               	movwf	229,b	;volatile
  1850                           
  1851                           ;mcc.c: 88: PMD5 = 0x00;
  1852  00180C  0E00               	movlw	0
  1853  00180E  6FE6               	movwf	230,b	;volatile
  1854                           
  1855                           ; BSR set to: 14
  1856  001810  0012               	return		;funcret
  1857  001812                     __end_of_PMD_Initialize:
  1858                           	opt stack 0
  1859                           tblptru	equ	0xFF8
  1860                           tblptrh	equ	0xFF7
  1861                           tblptrl	equ	0xFF6
  1862                           tablat	equ	0xFF5
  1863                           prodh	equ	0xFF4
  1864                           prodl	equ	0xFF3
  1865                           intcon	equ	0xFF2
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           indf2	equ	0xFDF
  1869                           postinc2	equ	0xFDE
  1870                           postdec2	equ	0xFDD
  1871                           fsr2h	equ	0xFDA
  1872                           fsr2l	equ	0xFD9
  1873                           status	equ	0xFD8
  1874                           
  1875 ;; *************** function _PIN_MANAGER_Initialize *****************
  1876 ;; Defined at:
  1877 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    6
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_SYSTEM_Initialize
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text10
  1906  00145A                     __ptext10:
  1907                           	opt stack 0
  1908  00145A                     _PIN_MANAGER_Initialize:
  1909                           	opt stack 23
  1910                           
  1911                           ;pin_manager.c: 62: LATE = 0x00;
  1912                           
  1913                           ; BSR set to: 14
  1914                           ;incstack = 0
  1915  00145A  0E00               	movlw	0
  1916  00145C  6E87               	movwf	3975,c	;volatile
  1917                           
  1918                           ;pin_manager.c: 63: LATD = 0x00;
  1919  00145E  0E00               	movlw	0
  1920  001460  6E86               	movwf	3974,c	;volatile
  1921                           
  1922                           ;pin_manager.c: 64: LATA = 0x00;
  1923  001462  0E00               	movlw	0
  1924  001464  6E83               	movwf	3971,c	;volatile
  1925                           
  1926                           ;pin_manager.c: 65: LATB = 0x00;
  1927  001466  0E00               	movlw	0
  1928  001468  6E84               	movwf	3972,c	;volatile
  1929                           
  1930                           ;pin_manager.c: 66: LATC = 0x00;
  1931  00146A  0E00               	movlw	0
  1932  00146C  6E85               	movwf	3973,c	;volatile
  1933                           
  1934                           ;pin_manager.c: 71: TRISE = 0x07;
  1935  00146E  0E07               	movlw	7
  1936  001470  6E8C               	movwf	3980,c	;volatile
  1937                           
  1938                           ;pin_manager.c: 72: TRISA = 0xFF;
  1939  001472  6888               	setf	3976,c	;volatile
  1940                           
  1941                           ;pin_manager.c: 73: TRISB = 0xFD;
  1942  001474  0EFD               	movlw	253
  1943  001476  6E89               	movwf	3977,c	;volatile
  1944                           
  1945                           ;pin_manager.c: 74: TRISC = 0xBF;
  1946  001478  0EBF               	movlw	191
  1947  00147A  6E8A               	movwf	3978,c	;volatile
  1948                           
  1949                           ;pin_manager.c: 75: TRISD = 0xFF;
  1950  00147C  688B               	setf	3979,c	;volatile
  1951                           
  1952                           ;pin_manager.c: 80: ANSELD = 0xFF;
  1953  00147E  010F               	movlb	15	; () banked
  1954  001480  6926               	setf	38,b	;volatile
  1955                           
  1956                           ;pin_manager.c: 81: ANSELC = 0x3F;
  1957  001482  0E3F               	movlw	63
  1958  001484  6F21               	movwf	33,b	;volatile
  1959                           
  1960                           ;pin_manager.c: 82: ANSELB = 0xFC;
  1961  001486  0EFC               	movlw	252
  1962  001488  6F19               	movwf	25,b	;volatile
  1963                           
  1964                           ;pin_manager.c: 83: ANSELE = 0x07;
  1965  00148A  0E07               	movlw	7
  1966  00148C  6F2E               	movwf	46,b	;volatile
  1967                           
  1968                           ; BSR set to: 15
  1969                           ;pin_manager.c: 84: ANSELA = 0xFF;
  1970  00148E  6911               	setf	17,b	;volatile
  1971                           
  1972                           ;pin_manager.c: 89: WPUD = 0x00;
  1973  001490  0E00               	movlw	0
  1974  001492  6F25               	movwf	37,b	;volatile
  1975                           
  1976                           ;pin_manager.c: 90: WPUE = 0x00;
  1977  001494  0E00               	movlw	0
  1978  001496  6F2D               	movwf	45,b	;volatile
  1979                           
  1980                           ;pin_manager.c: 91: WPUB = 0x00;
  1981  001498  0E00               	movlw	0
  1982  00149A  6F18               	movwf	24,b	;volatile
  1983                           
  1984                           ;pin_manager.c: 92: WPUA = 0x00;
  1985  00149C  0E00               	movlw	0
  1986  00149E  6F10               	movwf	16,b	;volatile
  1987                           
  1988                           ;pin_manager.c: 93: WPUC = 0x00;
  1989  0014A0  0E00               	movlw	0
  1990  0014A2  6F20               	movwf	32,b	;volatile
  1991                           
  1992                           ;pin_manager.c: 98: ODCONE = 0x00;
  1993  0014A4  0E00               	movlw	0
  1994  0014A6  6F2C               	movwf	44,b	;volatile
  1995                           
  1996                           ;pin_manager.c: 99: ODCONA = 0x00;
  1997  0014A8  0E00               	movlw	0
  1998  0014AA  6F0F               	movwf	15,b	;volatile
  1999                           
  2000                           ;pin_manager.c: 100: ODCONB = 0x00;
  2001  0014AC  0E00               	movlw	0
  2002  0014AE  6F17               	movwf	23,b	;volatile
  2003                           
  2004                           ;pin_manager.c: 101: ODCONC = 0x00;
  2005  0014B0  0E00               	movlw	0
  2006  0014B2  6F1F               	movwf	31,b	;volatile
  2007                           
  2008                           ;pin_manager.c: 102: ODCOND = 0x00;
  2009  0014B4  0E00               	movlw	0
  2010  0014B6  6F24               	movwf	36,b	;volatile
  2011                           
  2012                           ; BSR set to: 15
  2013                           ;pin_manager.c: 111: INT0PPSbits.INT0PPS = 0x08;
  2014  0014B8  010E               	movlb	14	; () banked
  2015  0014BA  91A1               	bcf	161,0,b	;volatile
  2016  0014BC  93A1               	bcf	161,1,b	;volatile
  2017  0014BE  95A1               	bcf	161,2,b	;volatile
  2018  0014C0  87A1               	bsf	161,3,b	;volatile
  2019  0014C2  99A1               	bcf	161,4,b	;volatile
  2020                           
  2021                           ; BSR set to: 14
  2022                           ;pin_manager.c: 112: RX1PPSbits.RXPPS = 0x17;
  2023  0014C4  81B5               	bsf	181,0,b	;volatile
  2024  0014C6  83B5               	bsf	181,1,b	;volatile
  2025  0014C8  85B5               	bsf	181,2,b	;volatile
  2026  0014CA  97B5               	bcf	181,3,b	;volatile
  2027  0014CC  89B5               	bsf	181,4,b	;volatile
  2028                           
  2029                           ;pin_manager.c: 113: RC6PPS = 0x09;
  2030  0014CE  0E09               	movlw	9
  2031  0014D0  6FFD               	movwf	253,b	;volatile
  2032                           
  2033                           ; BSR set to: 14
  2034  0014D2  0012               	return		;funcret
  2035  0014D4                     __end_of_PIN_MANAGER_Initialize:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           prodh	equ	0xFF4
  2042                           prodl	equ	0xFF3
  2043                           intcon	equ	0xFF2
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           indf2	equ	0xFDF
  2047                           postinc2	equ	0xFDE
  2048                           postdec2	equ	0xFDD
  2049                           fsr2h	equ	0xFDA
  2050                           fsr2l	equ	0xFD9
  2051                           status	equ	0xFD8
  2052                           
  2053 ;; *************** function _OSCILLATOR_Initialize *****************
  2054 ;; Defined at:
  2055 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2073 ;;Total ram usage:        0 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    6
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_SYSTEM_Initialize
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text11
  2084  00182E                     __ptext11:
  2085                           	opt stack 0
  2086  00182E                     _OSCILLATOR_Initialize:
  2087                           	opt stack 23
  2088                           
  2089                           ;mcc.c: 64: OSCCON1 = 0x60;
  2090                           
  2091                           ; BSR set to: 14
  2092                           ;incstack = 0
  2093  00182E  0E60               	movlw	96
  2094  001830  010E               	movlb	14	; () banked
  2095  001832  6FD8               	movwf	216,b	;volatile
  2096                           
  2097                           ;mcc.c: 66: OSCCON3 = 0x00;
  2098  001834  0E00               	movlw	0
  2099  001836  6FDA               	movwf	218,b	;volatile
  2100                           
  2101                           ;mcc.c: 68: OSCEN = 0x00;
  2102  001838  0E00               	movlw	0
  2103  00183A  6FDC               	movwf	220,b	;volatile
  2104                           
  2105                           ;mcc.c: 70: OSCFRQ = 0x06;
  2106  00183C  0E06               	movlw	6
  2107  00183E  6FDE               	movwf	222,b	;volatile
  2108                           
  2109                           ;mcc.c: 72: OSCTUNE = 0x00;
  2110  001840  0E00               	movlw	0
  2111  001842  6FDD               	movwf	221,b	;volatile
  2112                           
  2113                           ; BSR set to: 14
  2114  001844  0012               	return		;funcret
  2115  001846                     __end_of_OSCILLATOR_Initialize:
  2116                           	opt stack 0
  2117                           tblptru	equ	0xFF8
  2118                           tblptrh	equ	0xFF7
  2119                           tblptrl	equ	0xFF6
  2120                           tablat	equ	0xFF5
  2121                           prodh	equ	0xFF4
  2122                           prodl	equ	0xFF3
  2123                           intcon	equ	0xFF2
  2124                           postinc0	equ	0xFEE
  2125                           wreg	equ	0xFE8
  2126                           indf2	equ	0xFDF
  2127                           postinc2	equ	0xFDE
  2128                           postdec2	equ	0xFDD
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _INTERRUPT_Initialize *****************
  2134 ;; Defined at:
  2135 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		None
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    6
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_SYSTEM_Initialize
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text12
  2164  00187E                     __ptext12:
  2165                           	opt stack 0
  2166  00187E                     _INTERRUPT_Initialize:
  2167                           	opt stack 23
  2168                           
  2169                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 0;
  2170                           
  2171                           ; BSR set to: 14
  2172                           ;incstack = 0
  2173  00187E  9AF2               	bcf	intcon,5,c	;volatile
  2174  001880  0012               	return		;funcret
  2175  001882                     __end_of_INTERRUPT_Initialize:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodh	equ	0xFF4
  2182                           prodl	equ	0xFF3
  2183                           intcon	equ	0xFF2
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           indf2	equ	0xFDF
  2187                           postinc2	equ	0xFDE
  2188                           postdec2	equ	0xFDD
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _EXT_INT_Initialize *****************
  2194 ;; Defined at:
  2195 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2213 ;;Total ram usage:        0 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    7
  2216 ;; This function calls:
  2217 ;;		_INT0_SetInterruptHandler
  2218 ;; This function is called by:
  2219 ;;		_SYSTEM_Initialize
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text13
  2224  0017D8                     __ptext13:
  2225                           	opt stack 0
  2226  0017D8                     _EXT_INT_Initialize:
  2227                           	opt stack 22
  2228                           
  2229                           ;ext_int.c: 64: (PIR0bits.INT0IF = 0);
  2230                           
  2231                           ;incstack = 0
  2232  0017D8  010E               	movlb	14	; () banked
  2233  0017DA  91CA               	bcf	202,0,b	;volatile
  2234                           
  2235                           ;ext_int.c: 65: (INTCONbits.INT0EDG = 1);
  2236  0017DC  80F2               	bsf	intcon,0,c	;volatile
  2237                           
  2238                           ; BSR set to: 14
  2239                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  2240  0017DE  0E8A               	movlw	low _INT0_DefaultInterruptHandler
  2241  0017E0  0100               	movlb	0	; () banked
  2242  0017E2  6FAF               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  2243  0017E4  0E18               	movlw	high _INT0_DefaultInterruptHandler
  2244  0017E6  6FB0               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2245  0017E8  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
  2246  0017EA  6FB1               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  2247  0017EC  EC23  F00C         	call	_INT0_SetInterruptHandler	;wreg free
  2248                           
  2249                           ;ext_int.c: 68: (PIE0bits.INT0IE = 1);
  2250  0017F0  010E               	movlb	14	; () banked
  2251  0017F2  81C2               	bsf	194,0,b	;volatile
  2252                           
  2253                           ; BSR set to: 14
  2254  0017F4  0012               	return		;funcret
  2255  0017F6                     __end_of_EXT_INT_Initialize:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           prodh	equ	0xFF4
  2262                           prodl	equ	0xFF3
  2263                           intcon	equ	0xFF2
  2264                           postinc0	equ	0xFEE
  2265                           wreg	equ	0xFE8
  2266                           indf2	equ	0xFDF
  2267                           postinc2	equ	0xFDE
  2268                           postdec2	equ	0xFDD
  2269                           fsr2h	equ	0xFDA
  2270                           fsr2l	equ	0xFD9
  2271                           status	equ	0xFD8
  2272                           
  2273 ;; *************** function _INT0_SetInterruptHandler *****************
  2274 ;; Defined at:
  2275 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
  2278 ;;		 -> echoChanged(1), INT0_DefaultInterruptHandler(1), 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2290 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2293 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;Total ram usage:        3 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    6
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_EXT_INT_Initialize
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text14
  2306  001846                     __ptext14:
  2307                           	opt stack 0
  2308  001846                     _INT0_SetInterruptHandler:
  2309                           	opt stack 22
  2310                           
  2311                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
  2312                           
  2313                           ; BSR set to: 14
  2314                           ;incstack = 0
  2315  001846  C0AF  F057         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2316  00184A  C0B0  F058         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2317  00184E  C0B1  F059         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  2318  001852  0012               	return		;funcret
  2319  001854                     __end_of_INT0_SetInterruptHandler:
  2320                           	opt stack 0
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           prodh	equ	0xFF4
  2326                           prodl	equ	0xFF3
  2327                           intcon	equ	0xFF2
  2328                           postinc0	equ	0xFEE
  2329                           wreg	equ	0xFE8
  2330                           indf2	equ	0xFDF
  2331                           postinc2	equ	0xFDE
  2332                           postdec2	equ	0xFDD
  2333                           fsr2h	equ	0xFDA
  2334                           fsr2l	equ	0xFD9
  2335                           status	equ	0xFD8
  2336                           
  2337 ;; *************** function _EUSART1_Initialize *****************
  2338 ;; Defined at:
  2339 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2357 ;;Total ram usage:        0 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    7
  2360 ;; This function calls:
  2361 ;;		_EUSART1_SetRxInterruptHandler
  2362 ;;		_EUSART1_SetTxInterruptHandler
  2363 ;; This function is called by:
  2364 ;;		_SYSTEM_Initialize
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text15
  2369  0014D4                     __ptext15:
  2370                           	opt stack 0
  2371  0014D4                     _EUSART1_Initialize:
  2372                           	opt stack 22
  2373                           
  2374                           ;eusart1.c: 78: PIE3bits.RC1IE = 0;
  2375                           
  2376                           ;incstack = 0
  2377  0014D4  010E               	movlb	14	; () banked
  2378  0014D6  9BC5               	bcf	197,5,b	;volatile
  2379                           
  2380                           ; BSR set to: 14
  2381                           ;eusart1.c: 79: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  2382  0014D8  0E04               	movlw	low _EUSART1_Receive_ISR
  2383  0014DA  0100               	movlb	0	; () banked
  2384  0014DC  6FAF               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  2385  0014DE  0E17               	movlw	high _EUSART1_Receive_ISR
  2386  0014E0  6FB0               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  2387  0014E2  0E00               	movlw	low (_EUSART1_Receive_ISR shr (0+16))
  2388  0014E4  6FB1               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
  2389  0014E6  EC31  F00C         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2390                           
  2391                           ;eusart1.c: 80: PIE3bits.TX1IE = 0;
  2392  0014EA  010E               	movlb	14	; () banked
  2393  0014EC  99C5               	bcf	197,4,b	;volatile
  2394                           
  2395                           ;eusart1.c: 81: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  2396  0014EE  0ED2               	movlw	low _EUSART1_Transmit_ISR
  2397  0014F0  0100               	movlb	0	; () banked
  2398  0014F2  6FAF               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  2399  0014F4  0E16               	movlw	high _EUSART1_Transmit_ISR
  2400  0014F6  6FB0               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  2401  0014F8  0E00               	movlw	low (_EUSART1_Transmit_ISR shr (0+16))
  2402  0014FA  6FB1               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
  2403  0014FC  EC2A  F00C         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2404                           
  2405                           ;eusart1.c: 85: BAUD1CON = 0x08;
  2406  001500  0E08               	movlw	8
  2407  001502  6E9F               	movwf	3999,c	;volatile
  2408                           
  2409                           ;eusart1.c: 88: RC1STA = 0x90;
  2410  001504  0E90               	movlw	144
  2411  001506  6E9D               	movwf	3997,c	;volatile
  2412                           
  2413                           ;eusart1.c: 91: TX1STA = 0x24;
  2414  001508  0E24               	movlw	36
  2415  00150A  6E9E               	movwf	3998,c	;volatile
  2416                           
  2417                           ;eusart1.c: 94: SP1BRGL = 0x40;
  2418  00150C  0E40               	movlw	64
  2419  00150E  6E9B               	movwf	3995,c	;volatile
  2420                           
  2421                           ;eusart1.c: 97: SP1BRGH = 0x03;
  2422  001510  0E03               	movlw	3
  2423  001512  6E9C               	movwf	3996,c	;volatile
  2424                           
  2425                           ;eusart1.c: 101: eusart1TxHead = 0;
  2426  001514  0E00               	movlw	0
  2427  001516  0100               	movlb	0	; () banked
  2428  001518  6F8C               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;eusart1.c: 102: eusart1TxTail = 0;
  2432  00151A  0E00               	movlw	0
  2433  00151C  6F8B               	movwf	_eusart1TxTail& (0+255),b	;volatile
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2437  00151E  0E08               	movlw	8
  2438  001520  6FCD               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;eusart1.c: 105: eusart1RxHead = 0;
  2442  001522  0E00               	movlw	0
  2443  001524  6F8A               	movwf	_eusart1RxHead& (0+255),b	;volatile
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;eusart1.c: 106: eusart1RxTail = 0;
  2447  001526  0E00               	movlw	0
  2448  001528  6E50               	movwf	_eusart1RxTail,c	;volatile
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;eusart1.c: 107: eusart1RxCount = 0;
  2452  00152A  0E00               	movlw	0
  2453  00152C  6E4F               	movwf	_eusart1RxCount,c	;volatile
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;eusart1.c: 110: PIE3bits.RC1IE = 1;
  2457  00152E  010E               	movlb	14	; () banked
  2458  001530  8BC5               	bsf	197,5,b	;volatile
  2459                           
  2460                           ; BSR set to: 14
  2461  001532  0012               	return		;funcret
  2462  001534                     __end_of_EUSART1_Initialize:
  2463                           	opt stack 0
  2464                           tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           prodh	equ	0xFF4
  2469                           prodl	equ	0xFF3
  2470                           intcon	equ	0xFF2
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           indf2	equ	0xFDF
  2474                           postinc2	equ	0xFDE
  2475                           postdec2	equ	0xFDD
  2476                           fsr2h	equ	0xFDA
  2477                           fsr2l	equ	0xFD9
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2481 ;; Defined at:
  2482 ;;		line 211 in file "mcc_generated_files/eusart1.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  2485 ;;		 -> EUSART1_Transmit_ISR(1), 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2497 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2501 ;;Total ram usage:        3 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    6
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_EUSART1_Initialize
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text16
  2512  001854                     __ptext16:
  2513                           	opt stack 0
  2514  001854                     _EUSART1_SetTxInterruptHandler:
  2515                           	opt stack 22
  2516                           
  2517                           ;eusart1.c: 212: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  2518                           
  2519                           ; BSR set to: 14
  2520                           ;incstack = 0
  2521  001854  C0AF  F054         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2522  001858  C0B0  F055         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2523  00185C  C0B1  F056         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+2,_EUSART1_TxDefaultInterruptHandl
      +                          er+2
  2524  001860  0012               	return		;funcret
  2525  001862                     __end_of_EUSART1_SetTxInterruptHandler:
  2526                           	opt stack 0
  2527                           tblptru	equ	0xFF8
  2528                           tblptrh	equ	0xFF7
  2529                           tblptrl	equ	0xFF6
  2530                           tablat	equ	0xFF5
  2531                           prodh	equ	0xFF4
  2532                           prodl	equ	0xFF3
  2533                           intcon	equ	0xFF2
  2534                           postinc0	equ	0xFEE
  2535                           wreg	equ	0xFE8
  2536                           indf2	equ	0xFDF
  2537                           postinc2	equ	0xFDE
  2538                           postdec2	equ	0xFDD
  2539                           fsr2h	equ	0xFDA
  2540                           fsr2l	equ	0xFD9
  2541                           status	equ	0xFD8
  2542                           
  2543 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2544 ;; Defined at:
  2545 ;;		line 215 in file "mcc_generated_files/eusart1.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  2548 ;;		 -> EUSART1_Receive_ISR(1), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2560 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    6
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_EUSART1_Initialize
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text17
  2575  001862                     __ptext17:
  2576                           	opt stack 0
  2577  001862                     _EUSART1_SetRxInterruptHandler:
  2578                           	opt stack 22
  2579                           
  2580                           ;eusart1.c: 216: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  2581                           
  2582                           ;incstack = 0
  2583  001862  C0AF  F051         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2584  001866  C0B0  F052         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2585  00186A  C0B1  F053         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  2586  00186E  0012               	return		;funcret
  2587  001870                     __end_of_EUSART1_SetRxInterruptHandler:
  2588                           	opt stack 0
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           prodh	equ	0xFF4
  2594                           prodl	equ	0xFF3
  2595                           intcon	equ	0xFF2
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           indf2	equ	0xFDF
  2599                           postinc2	equ	0xFDE
  2600                           postdec2	equ	0xFDD
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function _INTERRUPT_InterruptManager *****************
  2606 ;; Defined at:
  2607 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;Total ram usage:       18 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    5
  2628 ;; This function calls:
  2629 ;;		Absolute function
  2630 ;;		_EUSART1_Receive_ISR
  2631 ;;		_EUSART1_Transmit_ISR
  2632 ;;		_INT0_ISR
  2633 ;; This function is called by:
  2634 ;;		Interrupt level 2
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	intcode
  2639  000008                     __pintcode:
  2640                           	opt stack 0
  2641  000008                     _INTERRUPT_InterruptManager:
  2642                           	opt stack 22
  2643                           
  2644                           ;incstack = 0
  2645  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2646  00000A  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
  2647  00000E  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2648  000012  CFE9 F02C          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2649  000016  CFEA F02D          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2650  00001A  CFE1 F02E          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2651  00001E  CFE2 F02F          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2652  000022  CFD9 F030          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2653  000026  CFDA F031          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2654  00002A  CFF3 F032          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2655  00002E  CFF4 F033          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2656  000032  CFF6 F034          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2657  000036  CFF7 F035          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2658  00003A  CFF8 F036          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2659  00003E  CFF5 F037          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2660  000042  C05C  F038         	movff	btemp,??_INTERRUPT_InterruptManager+14
  2661  000046  C05D  F039         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  2662  00004A  C05E  F03A         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  2663  00004E  C05F  F03B         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  2664                           
  2665                           ;interrupt_manager.c: 61: if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
  2666  000052  010E               	movlb	14	; () banked
  2667  000054  B1C2               	btfsc	194,0,b	;volatile
  2668                           
  2669                           ; BSR set to: 14
  2670  000056  A1CA               	btfss	202,0,b	;volatile
  2671  000058  D003               	goto	i2l99
  2672                           
  2673                           ; BSR set to: 14
  2674                           ;interrupt_manager.c: 62: {
  2675                           ;interrupt_manager.c: 63: INT0_ISR();
  2676  00005A  EC38  F00C         	call	_INT0_ISR	;wreg free
  2677                           
  2678                           ;interrupt_manager.c: 64: }
  2679  00005E  D01E               	goto	i2u124_49
  2680  000060                     i2l99:
  2681                           
  2682                           ; BSR set to: 14
  2683                           ;interrupt_manager.c: 65: else if(INTCONbits.PEIE == 1)
  2684  000060  ACF2               	btfss	intcon,6,c	;volatile
  2685  000062  D01C               	goto	i2u124_49
  2686                           
  2687                           ; BSR set to: 14
  2688                           ;interrupt_manager.c: 66: {
  2689                           ;interrupt_manager.c: 67: if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  2690  000064  B9C5               	btfsc	197,4,b	;volatile
  2691                           
  2692                           ; BSR set to: 14
  2693  000066  A9CD               	btfss	205,4,b	;volatile
  2694  000068  D00A               	goto	i2l102
  2695                           
  2696                           ; BSR set to: 14
  2697                           ;interrupt_manager.c: 68: {
  2698                           ;interrupt_manager.c: 69: EUSART1_TxDefaultInterruptHandler();
  2699  00006A  D801               	call	i2u121_48
  2700  00006C  D017               	goto	i2u124_49
  2701  00006E                     i2u121_48:
  2702  00006E  0005               	push	
  2703  000070  6EFA               	movwf	pclath,c
  2704  000072  5054               	movf	_EUSART1_TxDefaultInterruptHandler,w,c
  2705  000074  6EFD               	movwf	tosl,c
  2706  000076  5055               	movf	_EUSART1_TxDefaultInterruptHandler+1,w,c
  2707  000078  6EFE               	movwf	tosh,c
  2708  00007A  5056               	movf	_EUSART1_TxDefaultInterruptHandler+2,w,c
  2709  00007C  D00C               	goto	L1
  2710  00007E                     i2l102:
  2711                           
  2712                           ; BSR set to: 14
  2713                           ;interrupt_manager.c: 71: else if(PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1)
  2714  00007E  BBC5               	btfsc	197,5,b	;volatile
  2715                           
  2716                           ; BSR set to: 14
  2717  000080  ABCD               	btfss	205,5,b	;volatile
  2718  000082  D00C               	goto	i2u124_49
  2719                           
  2720                           ; BSR set to: 14
  2721                           ;interrupt_manager.c: 72: {
  2722                           ;interrupt_manager.c: 73: EUSART1_RxDefaultInterruptHandler();
  2723  000084  D801               	call	i2u124_48
  2724  000086  D00A               	goto	i2u124_49
  2725  000088                     i2u124_48:
  2726  000088  0005               	push	
  2727  00008A  6EFA               	movwf	pclath,c
  2728  00008C  5051               	movf	_EUSART1_RxDefaultInterruptHandler,w,c
  2729  00008E  6EFD               	movwf	tosl,c
  2730  000090  5052               	movf	_EUSART1_RxDefaultInterruptHandler+1,w,c
  2731  000092  6EFE               	movwf	tosh,c
  2732  000094  5053               	movf	_EUSART1_RxDefaultInterruptHandler+2,w,c
  2733  000096                     L1:
  2734  000096  6EFF               	movwf	tosu,c
  2735  000098  50FA               	movf	pclath,w,c
  2736  00009A  0012               	return		;indir
  2737  00009C                     i2u124_49:
  2738                           
  2739                           ;interrupt_manager.c: 80: else
  2740                           ;interrupt_manager.c: 81: {
  2741                           
  2742                           ;interrupt_manager.c: 78: }
  2743                           ;interrupt_manager.c: 79: }
  2744                           
  2745                           ;interrupt_manager.c: 75: else
  2746                           ;interrupt_manager.c: 76: {
  2747                           
  2748                           ;interrupt_manager.c: 74: }
  2749  00009C  C03B  F05F         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  2750  0000A0  C03A  F05E         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  2751  0000A4  C039  F05D         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  2752  0000A8  C038  F05C         	movff	??_INTERRUPT_InterruptManager+14,btemp
  2753  0000AC  C037  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2754  0000B0  C036  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2755  0000B4  C035  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2756  0000B8  C034  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2757  0000BC  C033  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2758  0000C0  C032  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2759  0000C4  C031  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2760  0000C8  C030  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2761  0000CC  C02F  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2762  0000D0  C02E  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2763  0000D4  C02D  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2764  0000D8  C02C  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2765  0000DC  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2766  0000E0  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2767  0000E4  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2768  0000E6  0011               	retfie		f
  2769  0000E8                     __end_of_INTERRUPT_InterruptManager:
  2770                           	opt stack 0
  2771                           tosu	equ	0xFFF
  2772                           tosh	equ	0xFFE
  2773                           tosl	equ	0xFFD
  2774                           pclatu	equ	0xFFB
  2775                           pclath	equ	0xFFA
  2776                           tblptru	equ	0xFF8
  2777                           tblptrh	equ	0xFF7
  2778                           tblptrl	equ	0xFF6
  2779                           tablat	equ	0xFF5
  2780                           prodh	equ	0xFF4
  2781                           prodl	equ	0xFF3
  2782                           intcon	equ	0xFF2
  2783                           postinc0	equ	0xFEE
  2784                           fsr0h	equ	0xFEA
  2785                           fsr0l	equ	0xFE9
  2786                           wreg	equ	0xFE8
  2787                           fsr1h	equ	0xFE2
  2788                           fsr1l	equ	0xFE1
  2789                           indf2	equ	0xFDF
  2790                           postinc2	equ	0xFDE
  2791                           postdec2	equ	0xFDD
  2792                           fsr2h	equ	0xFDA
  2793                           fsr2l	equ	0xFD9
  2794                           status	equ	0xFD8
  2795                           
  2796 ;; *************** function _INT0_ISR *****************
  2797 ;; Defined at:
  2798 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2816 ;;Total ram usage:        0 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    4
  2819 ;; This function calls:
  2820 ;;		_INT0_CallBack
  2821 ;; This function is called by:
  2822 ;;		_INTERRUPT_InterruptManager
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text19
  2827  001870                     __ptext19:
  2828                           	opt stack 0
  2829  001870                     _INT0_ISR:
  2830                           	opt stack 22
  2831                           
  2832                           ;ext_int.c: 34: (PIR0bits.INT0IF = 0);
  2833                           
  2834                           ;incstack = 0
  2835  001870  010E               	movlb	14	; () banked
  2836  001872  91CA               	bcf	202,0,b	;volatile
  2837                           
  2838                           ; BSR set to: 14
  2839                           ;ext_int.c: 37: INT0_CallBack();
  2840  001874  ECBC  F00B         	call	_INT0_CallBack	;wreg free
  2841  001878  0012               	return		;funcret
  2842  00187A                     __end_of_INT0_ISR:
  2843                           	opt stack 0
  2844                           tosu	equ	0xFFF
  2845                           tosh	equ	0xFFE
  2846                           tosl	equ	0xFFD
  2847                           pclatu	equ	0xFFB
  2848                           pclath	equ	0xFFA
  2849                           tblptru	equ	0xFF8
  2850                           tblptrh	equ	0xFF7
  2851                           tblptrl	equ	0xFF6
  2852                           tablat	equ	0xFF5
  2853                           prodh	equ	0xFF4
  2854                           prodl	equ	0xFF3
  2855                           intcon	equ	0xFF2
  2856                           postinc0	equ	0xFEE
  2857                           fsr0h	equ	0xFEA
  2858                           fsr0l	equ	0xFE9
  2859                           wreg	equ	0xFE8
  2860                           fsr1h	equ	0xFE2
  2861                           fsr1l	equ	0xFE1
  2862                           indf2	equ	0xFDF
  2863                           postinc2	equ	0xFDE
  2864                           postdec2	equ	0xFDD
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8
  2868                           
  2869 ;; *************** function _INT0_CallBack *****************
  2870 ;; Defined at:
  2871 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;Total ram usage:        0 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    3
  2892 ;; This function calls:
  2893 ;;		Absolute function
  2894 ;;		_INT0_DefaultInterruptHandler
  2895 ;;		_echoChanged
  2896 ;; This function is called by:
  2897 ;;		_INT0_ISR
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text20
  2902  001778                     __ptext20:
  2903                           	opt stack 0
  2904  001778                     _INT0_CallBack:
  2905                           	opt stack 22
  2906                           
  2907                           ;ext_int.c: 44: if(INT0_InterruptHandler)
  2908                           
  2909                           ;incstack = 0
  2910  001778  5057               	movf	_INT0_InterruptHandler,w,c
  2911  00177A  1058               	iorwf	_INT0_InterruptHandler+1,w,c
  2912  00177C  1059               	iorwf	_INT0_InterruptHandler+2,w,c
  2913  00177E  B4D8               	btfsc	status,2,c
  2914  001780  0012               	return	
  2915                           
  2916                           ;ext_int.c: 45: {
  2917                           ;ext_int.c: 46: INT0_InterruptHandler();
  2918  001782  D801               	call	i2u93_48
  2919  001784  0012               	return	
  2920  001786                     i2u93_48:
  2921  001786  0005               	push	
  2922  001788  6EFA               	movwf	pclath,c
  2923  00178A  5057               	movf	_INT0_InterruptHandler,w,c
  2924  00178C  6EFD               	movwf	tosl,c
  2925  00178E  5058               	movf	_INT0_InterruptHandler+1,w,c
  2926  001790  6EFE               	movwf	tosh,c
  2927  001792  5059               	movf	_INT0_InterruptHandler+2,w,c
  2928  001794  6EFF               	movwf	tosu,c
  2929  001796  50FA               	movf	pclath,w,c
  2930  001798  0012               	return		;indir
  2931  00179A                     __end_of_INT0_CallBack:
  2932                           	opt stack 0
  2933                           tosu	equ	0xFFF
  2934                           tosh	equ	0xFFE
  2935                           tosl	equ	0xFFD
  2936                           pclatu	equ	0xFFB
  2937                           pclath	equ	0xFFA
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodh	equ	0xFF4
  2943                           prodl	equ	0xFF3
  2944                           intcon	equ	0xFF2
  2945                           postinc0	equ	0xFEE
  2946                           fsr0h	equ	0xFEA
  2947                           fsr0l	equ	0xFE9
  2948                           wreg	equ	0xFE8
  2949                           fsr1h	equ	0xFE2
  2950                           fsr1l	equ	0xFE1
  2951                           indf2	equ	0xFDF
  2952                           postinc2	equ	0xFDE
  2953                           postdec2	equ	0xFDD
  2954                           fsr2h	equ	0xFDA
  2955                           fsr2l	equ	0xFD9
  2956                           status	equ	0xFD8
  2957                           
  2958 ;; *************** function _INT0_DefaultInterruptHandler *****************
  2959 ;; Defined at:
  2960 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		None
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2978 ;;Total ram usage:        0 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_EXT_INT_Initialize
  2984 ;;		_INT0_CallBack
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text21
  2989  00188A                     __ptext21:
  2990                           	opt stack 0
  2991  00188A                     _INT0_DefaultInterruptHandler:
  2992                           	opt stack 24
  2993                           
  2994                           ;incstack = 0
  2995  00188A  0012               	return		;funcret
  2996  00188C                     __end_of_INT0_DefaultInterruptHandler:
  2997                           	opt stack 0
  2998                           tosu	equ	0xFFF
  2999                           tosh	equ	0xFFE
  3000                           tosl	equ	0xFFD
  3001                           pclatu	equ	0xFFB
  3002                           pclath	equ	0xFFA
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           prodh	equ	0xFF4
  3008                           prodl	equ	0xFF3
  3009                           intcon	equ	0xFF2
  3010                           postinc0	equ	0xFEE
  3011                           fsr0h	equ	0xFEA
  3012                           fsr0l	equ	0xFE9
  3013                           wreg	equ	0xFE8
  3014                           fsr1h	equ	0xFE2
  3015                           fsr1l	equ	0xFE1
  3016                           indf2	equ	0xFDF
  3017                           postinc2	equ	0xFDE
  3018                           postdec2	equ	0xFDD
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _echoChanged *****************
  3024 ;; Defined at:
  3025 ;;		line 98 in file "main.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    2
  3046 ;; This function calls:
  3047 ;;		_TMR5_ReadTimer
  3048 ;;		_TMR5_StartTimer
  3049 ;;		_TMR5_WriteTimer
  3050 ;;		___ftmul
  3051 ;;		___fttol
  3052 ;;		___lwtoft
  3053 ;;		i2_TMR5_StopTimer
  3054 ;;		i2___lwdiv
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;;		_INT0_CallBack
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text22
  3062  00125E                     __ptext22:
  3063                           	opt stack 0
  3064  00125E                     _echoChanged:
  3065                           	opt stack 22
  3066                           
  3067                           ;main.c: 100: if (INTCONbits.INT0EDG)
  3068                           
  3069                           ;incstack = 0
  3070  00125E  A0F2               	btfss	intcon,0,c	;volatile
  3071  001260  D00A               	goto	i2l364
  3072                           
  3073                           ;main.c: 101: {
  3074                           ;main.c: 102: INTCONbits.INT0EDG = 0;
  3075  001262  90F2               	bcf	intcon,0,c	;volatile
  3076                           
  3077                           ;main.c: 103: TMR5_WriteTimer(0);
  3078  001264  0E00               	movlw	0
  3079  001266  6E02               	movwf	TMR5_WriteTimer@timerVal+1,c
  3080  001268  0E00               	movlw	0
  3081  00126A  6E01               	movwf	TMR5_WriteTimer@timerVal,c
  3082  00126C  EC09  F00C         	call	_TMR5_WriteTimer	;wreg free
  3083                           
  3084                           ;main.c: 104: TMR5_StartTimer();
  3085  001270  EC43  F00C         	call	_TMR5_StartTimer	;wreg free
  3086                           
  3087                           ;main.c: 105: } else
  3088  001274  0012               	return	
  3089  001276                     i2l364:
  3090                           
  3091                           ;main.c: 106: {
  3092                           ;main.c: 107: INTCONbits.INT0EDG = 1;
  3093  001276  80F2               	bsf	intcon,0,c	;volatile
  3094                           
  3095                           ;main.c: 108: TMR5_StopTimer();
  3096  001278  EC41  F00C         	call	i2_TMR5_StopTimer	;wreg free
  3097                           
  3098                           ;main.c: 109: timerCount = TMR5_ReadTimer();
  3099  00127C  ECCD  F00B         	call	_TMR5_ReadTimer	;wreg free
  3100  001280  C001  F0AD         	movff	?_TMR5_ReadTimer,_timerCount
  3101  001284  C002  F0AE         	movff	?_TMR5_ReadTimer+1,_timerCount+1
  3102                           
  3103                           ;main.c: 110: mediciones[numMedicion] = timerCount * 0.017 * 1.27;
  3104  001288  0EDE               	movlw	222
  3105  00128A  6E0F               	movwf	___ftmul@f2,c
  3106  00128C  0EB0               	movlw	176
  3107  00128E  6E10               	movwf	___ftmul@f2+1,c
  3108  001290  0E3C               	movlw	60
  3109  001292  6E11               	movwf	___ftmul@f2+2,c
  3110  001294  C0AD  F009         	movff	_timerCount,___lwtoft@c
  3111  001298  C0AE  F00A         	movff	_timerCount+1,___lwtoft@c+1
  3112  00129C  EC99  F00B         	call	___lwtoft	;wreg free
  3113  0012A0  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  3114  0012A4  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  3115  0012A8  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  3116  0012AC  ECB5  F008         	call	___ftmul	;wreg free
  3117  0012B0  C00C  F01B         	movff	?___ftmul,___fttol@f1
  3118  0012B4  C00D  F01C         	movff	?___ftmul+1,___fttol@f1+1
  3119  0012B8  C00E  F01D         	movff	?___ftmul+2,___fttol@f1+2
  3120  0012BC  EC3B  F008         	call	___fttol	;wreg free
  3121  0012C0  504E               	movf	_numMedicion,w,c
  3122  0012C2  0D02               	mullw	2
  3123  0012C4  0E60               	movlw	low _mediciones
  3124  0012C6  24F3               	addwf	prodl,w,c
  3125  0012C8  6ED9               	movwf	fsr2l,c
  3126  0012CA  0E00               	movlw	high _mediciones
  3127  0012CC  20F4               	addwfc	prodh,w,c
  3128  0012CE  6EDA               	movwf	fsr2h,c
  3129  0012D0  C01B  FFDE         	movff	?___fttol,postinc2
  3130  0012D4  C01C  FFDD         	movff	?___fttol+1,postdec2
  3131                           
  3132                           ;main.c: 111: numMedicion++;
  3133  0012D8  2A4E               	incf	_numMedicion,f,c
  3134                           
  3135                           ;main.c: 112: promedio += mediciones[numMedicion];
  3136  0012DA  504E               	movf	_numMedicion,w,c
  3137  0012DC  0D02               	mullw	2
  3138  0012DE  0E60               	movlw	low _mediciones
  3139  0012E0  24F3               	addwf	prodl,w,c
  3140  0012E2  6ED9               	movwf	fsr2l,c
  3141  0012E4  0E00               	movlw	high _mediciones
  3142  0012E6  20F4               	addwfc	prodh,w,c
  3143  0012E8  6EDA               	movwf	fsr2h,c
  3144  0012EA  50DE               	movf	postinc2,w,c
  3145  0012EC  264C               	addwf	_promedio,f,c
  3146  0012EE  50DD               	movf	postdec2,w,c
  3147  0012F0  224D               	addwfc	_promedio+1,f,c
  3148                           
  3149                           ;main.c: 113: if (numMedicion == 20 - 1)
  3150  0012F2  0E13               	movlw	19
  3151  0012F4  184E               	xorwf	_numMedicion,w,c
  3152  0012F6  A4D8               	btfss	status,2,c
  3153  0012F8  D014               	goto	i2l366
  3154                           
  3155                           ;main.c: 114: {
  3156                           ;main.c: 115: numMedicion = 0;
  3157  0012FA  0E00               	movlw	0
  3158  0012FC  6E4E               	movwf	_numMedicion,c
  3159                           
  3160                           ;main.c: 116: distancia = promedio / 20;
  3161  0012FE  C04C  F001         	movff	_promedio,i2___lwdiv@dividend
  3162  001302  C04D  F002         	movff	_promedio+1,i2___lwdiv@dividend+1
  3163  001306  0E00               	movlw	0
  3164  001308  6E04               	movwf	i2___lwdiv@divisor+1,c
  3165  00130A  0E14               	movlw	20
  3166  00130C  6E03               	movwf	i2___lwdiv@divisor,c
  3167  00130E  ECC4  F00A         	call	i2___lwdiv	;wreg free
  3168  001312  C001  F088         	movff	?i2___lwdiv,_distancia
  3169  001316  C002  F089         	movff	?i2___lwdiv+1,_distancia+1
  3170                           
  3171                           ;main.c: 117: promedio = 0;
  3172  00131A  0E00               	movlw	0
  3173  00131C  6E4D               	movwf	_promedio+1,c
  3174  00131E  0E00               	movlw	0
  3175  001320  6E4C               	movwf	_promedio,c
  3176  001322                     i2l366:
  3177                           
  3178                           ;main.c: 118: }
  3179                           ;main.c: 120: PORTBbits.RB1 = 1;
  3180  001322  828E               	bsf	3982,1,c	;volatile
  3181                           
  3182                           ;main.c: 121: _delay((unsigned long)((10)*(32000000/4000000.0)));
  3183  001324  0E1A               	movlw	26
  3184  001326                     i2u127_47:
  3185  001326  2EE8               	decfsz	wreg,f,c
  3186  001328  D7FE               	bra	i2u127_47
  3187  00132A  D000               	nop2	
  3188                           
  3189                           ;main.c: 122: PORTBbits.RB1 = 0;
  3190  00132C  928E               	bcf	3982,1,c	;volatile
  3191  00132E  0012               	return	
  3192  001330                     __end_of_echoChanged:
  3193                           	opt stack 0
  3194                           tosu	equ	0xFFF
  3195                           tosh	equ	0xFFE
  3196                           tosl	equ	0xFFD
  3197                           pclatu	equ	0xFFB
  3198                           pclath	equ	0xFFA
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           prodh	equ	0xFF4
  3204                           prodl	equ	0xFF3
  3205                           intcon	equ	0xFF2
  3206                           postinc0	equ	0xFEE
  3207                           fsr0h	equ	0xFEA
  3208                           fsr0l	equ	0xFE9
  3209                           wreg	equ	0xFE8
  3210                           fsr1h	equ	0xFE2
  3211                           fsr1l	equ	0xFE1
  3212                           indf2	equ	0xFDF
  3213                           postinc2	equ	0xFDE
  3214                           postdec2	equ	0xFDD
  3215                           fsr2h	equ	0xFDA
  3216                           fsr2l	equ	0xFD9
  3217                           status	equ	0xFD8
  3218                           
  3219 ;; *************** function i2___lwdiv *****************
  3220 ;; Defined at:
  3221 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  dividend        2    0[COMRAM] unsigned int 
  3224 ;;  divisor         2    2[COMRAM] unsigned int 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  3227 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2    0[COMRAM] unsigned int 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;Total ram usage:        7 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_echoChanged
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text23
  3251  001588                     __ptext23:
  3252                           	opt stack 0
  3253  001588                     i2___lwdiv:
  3254                           	opt stack 23
  3255                           
  3256                           ;incstack = 0
  3257  001588  0E00               	movlw	0
  3258  00158A  6E06               	movwf	i2___lwdiv@quotient+1,c
  3259  00158C  0E00               	movlw	0
  3260  00158E  6E05               	movwf	i2___lwdiv@quotient,c
  3261  001590  5003               	movf	i2___lwdiv@divisor,w,c
  3262  001592  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  3263  001594  B4D8               	btfsc	status,2,c
  3264  001596  D01C               	goto	i2l810
  3265  001598  0E01               	movlw	1
  3266  00159A  6E07               	movwf	i2___lwdiv@counter,c
  3267  00159C  D004               	goto	i2l805
  3268  00159E  90D8               	bcf	status,0,c
  3269  0015A0  3603               	rlcf	i2___lwdiv@divisor,f,c
  3270  0015A2  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  3271  0015A4  2A07               	incf	i2___lwdiv@counter,f,c
  3272  0015A6                     i2l805:
  3273  0015A6  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  3274  0015A8  D7FA               	goto	i2l806
  3275  0015AA                     i2u88_40:
  3276  0015AA  90D8               	bcf	status,0,c
  3277  0015AC  3605               	rlcf	i2___lwdiv@quotient,f,c
  3278  0015AE  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  3279  0015B0  5003               	movf	i2___lwdiv@divisor,w,c
  3280  0015B2  5C01               	subwf	i2___lwdiv@dividend,w,c
  3281  0015B4  5004               	movf	i2___lwdiv@divisor+1,w,c
  3282  0015B6  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  3283  0015B8  A0D8               	btfss	status,0,c
  3284  0015BA  D005               	goto	i2l809
  3285  0015BC  5003               	movf	i2___lwdiv@divisor,w,c
  3286  0015BE  5E01               	subwf	i2___lwdiv@dividend,f,c
  3287  0015C0  5004               	movf	i2___lwdiv@divisor+1,w,c
  3288  0015C2  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  3289  0015C4  8005               	bsf	i2___lwdiv@quotient,0,c
  3290  0015C6                     i2l809:
  3291  0015C6  90D8               	bcf	status,0,c
  3292  0015C8  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  3293  0015CA  3203               	rrcf	i2___lwdiv@divisor,f,c
  3294  0015CC  2E07               	decfsz	i2___lwdiv@counter,f,c
  3295  0015CE  D7ED               	goto	i2u88_40
  3296  0015D0                     i2l810:
  3297  0015D0  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  3298  0015D4  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  3299  0015D8  0012               	return		;funcret
  3300  0015DA                     __end_ofi2___lwdiv:
  3301                           	opt stack 0
  3302                           tosu	equ	0xFFF
  3303                           tosh	equ	0xFFE
  3304                           tosl	equ	0xFFD
  3305                           pclatu	equ	0xFFB
  3306                           pclath	equ	0xFFA
  3307                           tblptru	equ	0xFF8
  3308                           tblptrh	equ	0xFF7
  3309                           tblptrl	equ	0xFF6
  3310                           tablat	equ	0xFF5
  3311                           prodh	equ	0xFF4
  3312                           prodl	equ	0xFF3
  3313                           intcon	equ	0xFF2
  3314                           postinc0	equ	0xFEE
  3315                           fsr0h	equ	0xFEA
  3316                           fsr0l	equ	0xFE9
  3317                           wreg	equ	0xFE8
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           indf2	equ	0xFDF
  3321                           postinc2	equ	0xFDE
  3322                           postdec2	equ	0xFDD
  3323                           fsr2h	equ	0xFDA
  3324                           fsr2l	equ	0xFD9
  3325                           status	equ	0xFD8
  3326                           
  3327 ;; *************** function i2_TMR5_StopTimer *****************
  3328 ;; Defined at:
  3329 ;;		line 98 in file "mcc_generated_files/tmr5.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		None
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_echoChanged
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text24
  3357  001882                     __ptext24:
  3358                           	opt stack 0
  3359  001882                     i2_TMR5_StopTimer:
  3360                           	opt stack 23
  3361                           
  3362                           ;tmr5.c: 101: T5CONbits.TMR5ON = 0;
  3363                           
  3364                           ;incstack = 0
  3365  001882  90C3               	bcf	4035,0,c	;volatile
  3366  001884  0012               	return		;funcret
  3367  001886                     __end_ofi2_TMR5_StopTimer:
  3368                           	opt stack 0
  3369                           tosu	equ	0xFFF
  3370                           tosh	equ	0xFFE
  3371                           tosl	equ	0xFFD
  3372                           pclatu	equ	0xFFB
  3373                           pclath	equ	0xFFA
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           prodh	equ	0xFF4
  3379                           prodl	equ	0xFF3
  3380                           intcon	equ	0xFF2
  3381                           postinc0	equ	0xFEE
  3382                           fsr0h	equ	0xFEA
  3383                           fsr0l	equ	0xFE9
  3384                           wreg	equ	0xFE8
  3385                           fsr1h	equ	0xFE2
  3386                           fsr1l	equ	0xFE1
  3387                           indf2	equ	0xFDF
  3388                           postinc2	equ	0xFDE
  3389                           postdec2	equ	0xFDD
  3390                           fsr2h	equ	0xFDA
  3391                           fsr2l	equ	0xFD9
  3392                           status	equ	0xFD8
  3393                           
  3394 ;; *************** function ___lwtoft *****************
  3395 ;; Defined at:
  3396 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  c               2    8[COMRAM] unsigned int 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  3    8[COMRAM] float 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3410 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3413 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;Total ram usage:        3 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    1
  3417 ;; This function calls:
  3418 ;;		___ftpack
  3419 ;; This function is called by:
  3420 ;;		_echoChanged
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text25
  3425  001732                     __ptext25:
  3426                           	opt stack 0
  3427  001732                     ___lwtoft:
  3428                           	opt stack 22
  3429                           
  3430                           ;incstack = 0
  3431  001732  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  3432  001736  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  3433  00173A  6A03               	clrf	___ftpack@arg+2,c
  3434  00173C  0E8E               	movlw	142
  3435  00173E  6E04               	movwf	___ftpack@exp,c
  3436  001740  0E00               	movlw	0
  3437  001742  6E05               	movwf	___ftpack@sign,c
  3438  001744  EC98  F009         	call	___ftpack	;wreg free
  3439  001748  C001  F009         	movff	?___ftpack,?___lwtoft
  3440  00174C  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  3441  001750  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  3442  001754  0012               	return	
  3443  001756                     __end_of___lwtoft:
  3444                           	opt stack 0
  3445                           tosu	equ	0xFFF
  3446                           tosh	equ	0xFFE
  3447                           tosl	equ	0xFFD
  3448                           pclatu	equ	0xFFB
  3449                           pclath	equ	0xFFA
  3450                           tblptru	equ	0xFF8
  3451                           tblptrh	equ	0xFF7
  3452                           tblptrl	equ	0xFF6
  3453                           tablat	equ	0xFF5
  3454                           prodh	equ	0xFF4
  3455                           prodl	equ	0xFF3
  3456                           intcon	equ	0xFF2
  3457                           postinc0	equ	0xFEE
  3458                           fsr0h	equ	0xFEA
  3459                           fsr0l	equ	0xFE9
  3460                           wreg	equ	0xFE8
  3461                           fsr1h	equ	0xFE2
  3462                           fsr1l	equ	0xFE1
  3463                           indf2	equ	0xFDF
  3464                           postinc2	equ	0xFDE
  3465                           postdec2	equ	0xFDD
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function ___fttol *****************
  3471 ;; Defined at:
  3472 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  f1              3   26[COMRAM] float 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  lval            4   36[COMRAM] unsigned long 
  3477 ;;  exp1            1   40[COMRAM] unsigned char 
  3478 ;;  sign1           1   35[COMRAM] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  4   26[COMRAM] long 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3489 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3491 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;Total ram usage:       15 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_echoChanged
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text26
  3502  001076                     __ptext26:
  3503                           	opt stack 0
  3504  001076                     ___fttol:
  3505                           	opt stack 23
  3506                           
  3507                           ;incstack = 0
  3508  001076  C01D  F01F         	movff	___fttol@f1+2,??___fttol
  3509  00107A  6A20               	clrf	(??___fttol+1)& (0+255),c
  3510  00107C  6A21               	clrf	(??___fttol+2)& (0+255),c
  3511  00107E  341C               	rlcf	___fttol@f1+1,w,c
  3512  001080  361F               	rlcf	??___fttol& (0+255),f,c
  3513  001082  E301               	bnc	u79_41
  3514  001084  8020               	bsf	(??___fttol+1)& (0+255),0,c
  3515  001086                     u79_41:
  3516  001086  501F               	movf	??___fttol,w,c
  3517  001088  6E29               	movwf	___fttol@exp1,c
  3518  00108A  5029               	movf	___fttol@exp1,w,c
  3519  00108C  A4D8               	btfss	status,2,c
  3520  00108E  D009               	goto	i2l716
  3521  001090  0E00               	movlw	0
  3522  001092  6E1B               	movwf	?___fttol,c
  3523  001094  0E00               	movlw	0
  3524  001096  6E1C               	movwf	?___fttol+1,c
  3525  001098  0E00               	movlw	0
  3526  00109A  6E1D               	movwf	?___fttol+2,c
  3527  00109C  0E00               	movlw	0
  3528  00109E  6E1E               	movwf	?___fttol+3,c
  3529  0010A0  0012               	return	
  3530  0010A2                     i2l716:
  3531  0010A2  0E17               	movlw	23
  3532  0010A4  6E1F               	movwf	??___fttol& (0+255),c
  3533  0010A6  C01B  F020         	movff	___fttol@f1,??___fttol+1
  3534  0010AA  C01C  F021         	movff	___fttol@f1+1,??___fttol+2
  3535  0010AE  C01D  F022         	movff	___fttol@f1+2,??___fttol+3
  3536  0010B2  281F               	incf	??___fttol,w,c
  3537  0010B4  6E23               	movwf	(??___fttol+4)& (0+255),c
  3538  0010B6  D004               	goto	i2u81_40
  3539  0010B8                     i2u81_45:
  3540  0010B8  90D8               	bcf	status,0,c
  3541  0010BA  3222               	rrcf	??___fttol+3,f,c
  3542  0010BC  3221               	rrcf	??___fttol+2,f,c
  3543  0010BE  3220               	rrcf	??___fttol+1,f,c
  3544  0010C0                     i2u81_40:
  3545  0010C0  2E23               	decfsz	(??___fttol+4)& (0+255),f,c
  3546  0010C2  D7FA               	goto	i2u81_45
  3547  0010C4  5020               	movf	??___fttol+1,w,c
  3548  0010C6  6E24               	movwf	___fttol@sign1,c
  3549  0010C8  8E1C               	bsf	___fttol@f1+1,7,c
  3550  0010CA  0EFF               	movlw	255
  3551  0010CC  161B               	andwf	___fttol@f1,f,c
  3552  0010CE  0EFF               	movlw	255
  3553  0010D0  161C               	andwf	___fttol@f1+1,f,c
  3554  0010D2  0E00               	movlw	0
  3555  0010D4  161D               	andwf	___fttol@f1+2,f,c
  3556  0010D6  501B               	movf	___fttol@f1,w,c
  3557  0010D8  6E25               	movwf	___fttol@lval,c
  3558  0010DA  501C               	movf	___fttol@f1+1,w,c
  3559  0010DC  6E26               	movwf	___fttol@lval+1,c
  3560  0010DE  501D               	movf	___fttol@f1+2,w,c
  3561  0010E0  6E27               	movwf	___fttol@lval+2,c
  3562  0010E2  6A28               	clrf	___fttol@lval+3,c
  3563  0010E4  0E8E               	movlw	142
  3564  0010E6  5E29               	subwf	___fttol@exp1,f,c
  3565  0010E8  AE29               	btfss	___fttol@exp1,7,c
  3566  0010EA  D016               	goto	i2l718
  3567  0010EC  5029               	movf	___fttol@exp1,w,c
  3568  0010EE  0A80               	xorlw	128
  3569  0010F0  0F8F               	addlw	143
  3570  0010F2  B0D8               	btfsc	status,0,c
  3571  0010F4  D009               	goto	i2l719
  3572  0010F6  0E00               	movlw	0
  3573  0010F8  6E1B               	movwf	?___fttol,c
  3574  0010FA  0E00               	movlw	0
  3575  0010FC  6E1C               	movwf	?___fttol+1,c
  3576  0010FE  0E00               	movlw	0
  3577  001100  6E1D               	movwf	?___fttol+2,c
  3578  001102  0E00               	movlw	0
  3579  001104  6E1E               	movwf	?___fttol+3,c
  3580  001106  0012               	return	
  3581  001108                     i2l719:
  3582  001108  90D8               	bcf	status,0,c
  3583  00110A  3228               	rrcf	___fttol@lval+3,f,c
  3584  00110C  3227               	rrcf	___fttol@lval+2,f,c
  3585  00110E  3226               	rrcf	___fttol@lval+1,f,c
  3586  001110  3225               	rrcf	___fttol@lval,f,c
  3587  001112  3E29               	incfsz	___fttol@exp1,f,c
  3588  001114  D7F9               	goto	i2l719
  3589  001116  D015               	goto	i2u85_40
  3590  001118                     i2l718:
  3591  001118  0E17               	movlw	23
  3592  00111A  6429               	cpfsgt	___fttol@exp1,c
  3593  00111C  D00F               	goto	i2l724
  3594  00111E  0E00               	movlw	0
  3595  001120  6E1B               	movwf	?___fttol,c
  3596  001122  0E00               	movlw	0
  3597  001124  6E1C               	movwf	?___fttol+1,c
  3598  001126  0E00               	movlw	0
  3599  001128  6E1D               	movwf	?___fttol+2,c
  3600  00112A  0E00               	movlw	0
  3601  00112C  6E1E               	movwf	?___fttol+3,c
  3602  00112E  0012               	return	
  3603  001130  90D8               	bcf	status,0,c
  3604  001132  3625               	rlcf	___fttol@lval,f,c
  3605  001134  3626               	rlcf	___fttol@lval+1,f,c
  3606  001136  3627               	rlcf	___fttol@lval+2,f,c
  3607  001138  3628               	rlcf	___fttol@lval+3,f,c
  3608  00113A  0629               	decf	___fttol@exp1,f,c
  3609  00113C                     i2l724:
  3610  00113C  5029               	movf	___fttol@exp1,w,c
  3611  00113E  A4D8               	btfss	status,2,c
  3612  001140  D7F7               	goto	i2l725
  3613  001142                     i2u85_40:
  3614  001142  5024               	movf	___fttol@sign1,w,c
  3615  001144  B4D8               	btfsc	status,2,c
  3616  001146  D008               	goto	i2l727
  3617  001148  1E28               	comf	___fttol@lval+3,f,c
  3618  00114A  1E27               	comf	___fttol@lval+2,f,c
  3619  00114C  1E26               	comf	___fttol@lval+1,f,c
  3620  00114E  6C25               	negf	___fttol@lval,c
  3621  001150  0E00               	movlw	0
  3622  001152  2226               	addwfc	___fttol@lval+1,f,c
  3623  001154  2227               	addwfc	___fttol@lval+2,f,c
  3624  001156  2228               	addwfc	___fttol@lval+3,f,c
  3625  001158                     i2l727:
  3626  001158  C025  F01B         	movff	___fttol@lval,?___fttol
  3627  00115C  C026  F01C         	movff	___fttol@lval+1,?___fttol+1
  3628  001160  C027  F01D         	movff	___fttol@lval+2,?___fttol+2
  3629  001164  C028  F01E         	movff	___fttol@lval+3,?___fttol+3
  3630  001168  0012               	return	
  3631  00116A                     __end_of___fttol:
  3632                           	opt stack 0
  3633                           tosu	equ	0xFFF
  3634                           tosh	equ	0xFFE
  3635                           tosl	equ	0xFFD
  3636                           pclatu	equ	0xFFB
  3637                           pclath	equ	0xFFA
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           postinc0	equ	0xFEE
  3646                           fsr0h	equ	0xFEA
  3647                           fsr0l	equ	0xFE9
  3648                           wreg	equ	0xFE8
  3649                           fsr1h	equ	0xFE2
  3650                           fsr1l	equ	0xFE1
  3651                           indf2	equ	0xFDF
  3652                           postinc2	equ	0xFDE
  3653                           postdec2	equ	0xFDD
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           status	equ	0xFD8
  3657                           
  3658 ;; *************** function ___ftmul *****************
  3659 ;; Defined at:
  3660 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  f1              3   11[COMRAM] float 
  3663 ;;  f2              3   14[COMRAM] float 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  f3_as_produc    3   21[COMRAM] unsigned um
  3666 ;;  sign            1   25[COMRAM] unsigned char 
  3667 ;;  cntr            1   24[COMRAM] unsigned char 
  3668 ;;  exp             1   20[COMRAM] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  3   11[COMRAM] float 
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3678 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3679 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;Total ram usage:       15 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    1
  3685 ;; This function calls:
  3686 ;;		___ftpack
  3687 ;; This function is called by:
  3688 ;;		_echoChanged
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text27
  3693  00116A                     __ptext27:
  3694                           	opt stack 0
  3695  00116A                     ___ftmul:
  3696                           	opt stack 22
  3697                           
  3698                           ;incstack = 0
  3699  00116A  C00E  F012         	movff	___ftmul@f1+2,??___ftmul
  3700  00116E  6A13               	clrf	(??___ftmul+1)& (0+255),c
  3701  001170  6A14               	clrf	(??___ftmul+2)& (0+255),c
  3702  001172  340D               	rlcf	___ftmul@f1+1,w,c
  3703  001174  3612               	rlcf	??___ftmul& (0+255),f,c
  3704  001176  E301               	bnc	u73_41
  3705  001178  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  3706  00117A                     u73_41:
  3707  00117A  5012               	movf	??___ftmul,w,c
  3708  00117C  6E15               	movwf	___ftmul@exp,c
  3709  00117E  5015               	movf	___ftmul@exp,w,c
  3710  001180  A4D8               	btfss	status,2,c
  3711  001182  D007               	goto	i2l695
  3712  001184  0E00               	movlw	0
  3713  001186  6E0C               	movwf	?___ftmul,c
  3714  001188  0E00               	movlw	0
  3715  00118A  6E0D               	movwf	?___ftmul+1,c
  3716  00118C  0E00               	movlw	0
  3717  00118E  6E0E               	movwf	?___ftmul+2,c
  3718  001190  0012               	return	
  3719  001192                     i2l695:
  3720  001192  C011  F012         	movff	___ftmul@f2+2,??___ftmul
  3721  001196  6A13               	clrf	(??___ftmul+1)& (0+255),c
  3722  001198  6A14               	clrf	(??___ftmul+2)& (0+255),c
  3723  00119A  3410               	rlcf	___ftmul@f2+1,w,c
  3724  00119C  3612               	rlcf	??___ftmul& (0+255),f,c
  3725  00119E  E301               	bnc	u75_41
  3726  0011A0  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  3727  0011A2                     u75_41:
  3728  0011A2  5012               	movf	??___ftmul,w,c
  3729  0011A4  6E1A               	movwf	___ftmul@sign,c
  3730  0011A6  501A               	movf	___ftmul@sign,w,c
  3731  0011A8  A4D8               	btfss	status,2,c
  3732  0011AA  D007               	goto	i2l697
  3733  0011AC  0E00               	movlw	0
  3734  0011AE  6E0C               	movwf	?___ftmul,c
  3735  0011B0  0E00               	movlw	0
  3736  0011B2  6E0D               	movwf	?___ftmul+1,c
  3737  0011B4  0E00               	movlw	0
  3738  0011B6  6E0E               	movwf	?___ftmul+2,c
  3739  0011B8  0012               	return	
  3740  0011BA                     i2l697:
  3741  0011BA  501A               	movf	___ftmul@sign,w,c
  3742  0011BC  0F7B               	addlw	123
  3743  0011BE  2615               	addwf	___ftmul@exp,f,c
  3744  0011C0  C00E  F01A         	movff	___ftmul@f1+2,___ftmul@sign
  3745  0011C4  5011               	movf	___ftmul@f2+2,w,c
  3746  0011C6  1A1A               	xorwf	___ftmul@sign,f,c
  3747  0011C8  0E80               	movlw	128
  3748  0011CA  161A               	andwf	___ftmul@sign,f,c
  3749  0011CC  8E0D               	bsf	___ftmul@f1+1,7,c
  3750  0011CE  8E10               	bsf	___ftmul@f2+1,7,c
  3751  0011D0  0EFF               	movlw	255
  3752  0011D2  160F               	andwf	___ftmul@f2,f,c
  3753  0011D4  0EFF               	movlw	255
  3754  0011D6  1610               	andwf	___ftmul@f2+1,f,c
  3755  0011D8  0E00               	movlw	0
  3756  0011DA  1611               	andwf	___ftmul@f2+2,f,c
  3757  0011DC  0E00               	movlw	0
  3758  0011DE  6E16               	movwf	___ftmul@f3_as_product,c
  3759  0011E0  0E00               	movlw	0
  3760  0011E2  6E17               	movwf	___ftmul@f3_as_product+1,c
  3761  0011E4  0E00               	movlw	0
  3762  0011E6  6E18               	movwf	___ftmul@f3_as_product+2,c
  3763  0011E8  0E07               	movlw	7
  3764  0011EA  6E19               	movwf	___ftmul@cntr,c
  3765  0011EC  A00C               	btfss	___ftmul@f1,0,c
  3766  0011EE  D006               	goto	i2l699
  3767  0011F0  500F               	movf	___ftmul@f2,w,c
  3768  0011F2  2616               	addwf	___ftmul@f3_as_product,f,c
  3769  0011F4  5010               	movf	___ftmul@f2+1,w,c
  3770  0011F6  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  3771  0011F8  5011               	movf	___ftmul@f2+2,w,c
  3772  0011FA  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  3773  0011FC                     i2l699:
  3774  0011FC  90D8               	bcf	status,0,c
  3775  0011FE  320E               	rrcf	___ftmul@f1+2,f,c
  3776  001200  320D               	rrcf	___ftmul@f1+1,f,c
  3777  001202  320C               	rrcf	___ftmul@f1,f,c
  3778  001204  90D8               	bcf	status,0,c
  3779  001206  360F               	rlcf	___ftmul@f2,f,c
  3780  001208  3610               	rlcf	___ftmul@f2+1,f,c
  3781  00120A  3611               	rlcf	___ftmul@f2+2,f,c
  3782  00120C  2E19               	decfsz	___ftmul@cntr,f,c
  3783  00120E  D7EE               	goto	i2l698
  3784  001210  0E09               	movlw	9
  3785  001212  6E19               	movwf	___ftmul@cntr,c
  3786  001214  A00C               	btfss	___ftmul@f1,0,c
  3787  001216  D006               	goto	i2l702
  3788  001218  500F               	movf	___ftmul@f2,w,c
  3789  00121A  2616               	addwf	___ftmul@f3_as_product,f,c
  3790  00121C  5010               	movf	___ftmul@f2+1,w,c
  3791  00121E  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  3792  001220  5011               	movf	___ftmul@f2+2,w,c
  3793  001222  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  3794  001224                     i2l702:
  3795  001224  90D8               	bcf	status,0,c
  3796  001226  320E               	rrcf	___ftmul@f1+2,f,c
  3797  001228  320D               	rrcf	___ftmul@f1+1,f,c
  3798  00122A  320C               	rrcf	___ftmul@f1,f,c
  3799  00122C  90D8               	bcf	status,0,c
  3800  00122E  3218               	rrcf	___ftmul@f3_as_product+2,f,c
  3801  001230  3217               	rrcf	___ftmul@f3_as_product+1,f,c
  3802  001232  3216               	rrcf	___ftmul@f3_as_product,f,c
  3803  001234  2E19               	decfsz	___ftmul@cntr,f,c
  3804  001236  D7EE               	goto	i2l701
  3805  001238  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3806  00123C  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3807  001240  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3808  001244  C015  F004         	movff	___ftmul@exp,___ftpack@exp
  3809  001248  C01A  F005         	movff	___ftmul@sign,___ftpack@sign
  3810  00124C  EC98  F009         	call	___ftpack	;wreg free
  3811  001250  C001  F00C         	movff	?___ftpack,?___ftmul
  3812  001254  C002  F00D         	movff	?___ftpack+1,?___ftmul+1
  3813  001258  C003  F00E         	movff	?___ftpack+2,?___ftmul+2
  3814  00125C  0012               	return	
  3815  00125E                     __end_of___ftmul:
  3816                           	opt stack 0
  3817                           tosu	equ	0xFFF
  3818                           tosh	equ	0xFFE
  3819                           tosl	equ	0xFFD
  3820                           pclatu	equ	0xFFB
  3821                           pclath	equ	0xFFA
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           prodh	equ	0xFF4
  3827                           prodl	equ	0xFF3
  3828                           intcon	equ	0xFF2
  3829                           postinc0	equ	0xFEE
  3830                           fsr0h	equ	0xFEA
  3831                           fsr0l	equ	0xFE9
  3832                           wreg	equ	0xFE8
  3833                           fsr1h	equ	0xFE2
  3834                           fsr1l	equ	0xFE1
  3835                           indf2	equ	0xFDF
  3836                           postinc2	equ	0xFDE
  3837                           postdec2	equ	0xFDD
  3838                           fsr2h	equ	0xFDA
  3839                           fsr2l	equ	0xFD9
  3840                           status	equ	0xFD8
  3841                           
  3842 ;; *************** function ___ftpack *****************
  3843 ;; Defined at:
  3844 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  arg             3    0[COMRAM] unsigned um
  3847 ;;  exp             1    3[COMRAM] unsigned char 
  3848 ;;  sign            1    4[COMRAM] unsigned char 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  3    0[COMRAM] float 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3860 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3862 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3863 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;Total ram usage:        8 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		___ftmul
  3870 ;;		___lwtoft
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text28
  3875  001330                     __ptext28:
  3876                           	opt stack 0
  3877  001330                     ___ftpack:
  3878                           	opt stack 22
  3879                           
  3880                           ;incstack = 0
  3881  001330  5004               	movf	___ftpack@exp,w,c
  3882  001332  B4D8               	btfsc	status,2,c
  3883  001334  D005               	goto	i2u65_40
  3884  001336  5001               	movf	___ftpack@arg,w,c
  3885  001338  1002               	iorwf	___ftpack@arg+1,w,c
  3886  00133A  1003               	iorwf	___ftpack@arg+2,w,c
  3887  00133C  A4D8               	btfss	status,2,c
  3888  00133E  D00C               	goto	i2l616
  3889  001340                     i2u65_40:
  3890  001340  0E00               	movlw	0
  3891  001342  6E01               	movwf	?___ftpack,c
  3892  001344  0E00               	movlw	0
  3893  001346  6E02               	movwf	?___ftpack+1,c
  3894  001348  0E00               	movlw	0
  3895  00134A  6E03               	movwf	?___ftpack+2,c
  3896  00134C  0012               	return	
  3897  00134E  2A04               	incf	___ftpack@exp,f,c
  3898  001350  90D8               	bcf	status,0,c
  3899  001352  3203               	rrcf	___ftpack@arg+2,f,c
  3900  001354  3202               	rrcf	___ftpack@arg+1,f,c
  3901  001356  3201               	rrcf	___ftpack@arg,f,c
  3902  001358                     i2l616:
  3903  001358  0E00               	movlw	0
  3904  00135A  1401               	andwf	___ftpack@arg,w,c
  3905  00135C  6E06               	movwf	??___ftpack& (0+255),c
  3906  00135E  0E00               	movlw	0
  3907  001360  1402               	andwf	___ftpack@arg+1,w,c
  3908  001362  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3909  001364  0EFE               	movlw	254
  3910  001366  1403               	andwf	___ftpack@arg+2,w,c
  3911  001368  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3912  00136A  5006               	movf	??___ftpack,w,c
  3913  00136C  1007               	iorwf	??___ftpack+1,w,c
  3914  00136E  1008               	iorwf	??___ftpack+2,w,c
  3915  001370  B4D8               	btfsc	status,2,c
  3916  001372  D00C               	goto	i2l619
  3917  001374  D7EC               	goto	i2l617
  3918  001376  2A04               	incf	___ftpack@exp,f,c
  3919  001378  0E01               	movlw	1
  3920  00137A  2601               	addwf	___ftpack@arg,f,c
  3921  00137C  0E00               	movlw	0
  3922  00137E  2202               	addwfc	___ftpack@arg+1,f,c
  3923  001380  0E00               	movlw	0
  3924  001382  2203               	addwfc	___ftpack@arg+2,f,c
  3925  001384  90D8               	bcf	status,0,c
  3926  001386  3203               	rrcf	___ftpack@arg+2,f,c
  3927  001388  3202               	rrcf	___ftpack@arg+1,f,c
  3928  00138A  3201               	rrcf	___ftpack@arg,f,c
  3929  00138C                     i2l619:
  3930  00138C  0E00               	movlw	0
  3931  00138E  1401               	andwf	___ftpack@arg,w,c
  3932  001390  6E06               	movwf	??___ftpack& (0+255),c
  3933  001392  0E00               	movlw	0
  3934  001394  1402               	andwf	___ftpack@arg+1,w,c
  3935  001396  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3936  001398  0EFF               	movlw	255
  3937  00139A  1403               	andwf	___ftpack@arg+2,w,c
  3938  00139C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3939  00139E  5006               	movf	??___ftpack,w,c
  3940  0013A0  1007               	iorwf	??___ftpack+1,w,c
  3941  0013A2  1008               	iorwf	??___ftpack+2,w,c
  3942  0013A4  B4D8               	btfsc	status,2,c
  3943  0013A6  D006               	goto	i2l622
  3944  0013A8  D7E6               	goto	i2l620
  3945  0013AA  0604               	decf	___ftpack@exp,f,c
  3946  0013AC  90D8               	bcf	status,0,c
  3947  0013AE  3601               	rlcf	___ftpack@arg,f,c
  3948  0013B0  3602               	rlcf	___ftpack@arg+1,f,c
  3949  0013B2  3603               	rlcf	___ftpack@arg+2,f,c
  3950  0013B4                     i2l622:
  3951  0013B4  BE02               	btfsc	___ftpack@arg+1,7,c
  3952  0013B6  D003               	goto	i2u69_40
  3953  0013B8  0E02               	movlw	2
  3954  0013BA  6004               	cpfslt	___ftpack@exp,c
  3955  0013BC  D7F6               	goto	i2l623
  3956  0013BE                     i2u69_40:
  3957  0013BE  A004               	btfss	___ftpack@exp,0,c
  3958  0013C0  9E02               	bcf	___ftpack@arg+1,7,c
  3959  0013C2  90D8               	bcf	status,0,c
  3960  0013C4  3204               	rrcf	___ftpack@exp,f,c
  3961  0013C6  5004               	movf	___ftpack@exp,w,c
  3962  0013C8  1203               	iorwf	___ftpack@arg+2,f,c
  3963  0013CA  5005               	movf	___ftpack@sign,w,c
  3964  0013CC  A4D8               	btfss	status,2,c
  3965  0013CE  8E03               	bsf	___ftpack@arg+2,7,c
  3966  0013D0  C001  F001         	movff	___ftpack@arg,?___ftpack
  3967  0013D4  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3968  0013D8  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3969  0013DC  0012               	return	
  3970  0013DE                     __end_of___ftpack:
  3971                           	opt stack 0
  3972                           tosu	equ	0xFFF
  3973                           tosh	equ	0xFFE
  3974                           tosl	equ	0xFFD
  3975                           pclatu	equ	0xFFB
  3976                           pclath	equ	0xFFA
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           prodh	equ	0xFF4
  3982                           prodl	equ	0xFF3
  3983                           intcon	equ	0xFF2
  3984                           postinc0	equ	0xFEE
  3985                           fsr0h	equ	0xFEA
  3986                           fsr0l	equ	0xFE9
  3987                           wreg	equ	0xFE8
  3988                           fsr1h	equ	0xFE2
  3989                           fsr1l	equ	0xFE1
  3990                           indf2	equ	0xFDF
  3991                           postinc2	equ	0xFDE
  3992                           postdec2	equ	0xFDD
  3993                           fsr2h	equ	0xFDA
  3994                           fsr2l	equ	0xFD9
  3995                           status	equ	0xFD8
  3996                           
  3997 ;; *************** function _TMR5_WriteTimer *****************
  3998 ;; Defined at:
  3999 ;;		line 120 in file "mcc_generated_files/tmr5.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  timerVal        2    0[COMRAM] unsigned int 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4017 ;;Total ram usage:        2 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_echoChanged
  4023 ;;		_TMR5_Reload
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text29
  4028  001812                     __ptext29:
  4029                           	opt stack 0
  4030  001812                     _TMR5_WriteTimer:
  4031                           	opt stack 23
  4032                           
  4033                           ;tmr5.c: 122: if (T5CONbits.nT5SYNC == 1)
  4034                           
  4035                           ;incstack = 0
  4036  001812  A4C3               	btfss	4035,2,c	;volatile
  4037  001814  D007               	goto	i2l61
  4038                           
  4039                           ;tmr5.c: 123: {
  4040                           ;tmr5.c: 125: T5CONbits.TMR5ON = 0;
  4041  001816  90C3               	bcf	4035,0,c	;volatile
  4042                           
  4043                           ;tmr5.c: 128: TMR5H = (timerVal >> 8);
  4044  001818  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
  4045  00181A  6EC2               	movwf	4034,c	;volatile
  4046                           
  4047                           ;tmr5.c: 129: TMR5L = timerVal;
  4048  00181C  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
  4049                           
  4050                           ;tmr5.c: 132: T5CONbits.TMR5ON =1;
  4051  001820  80C3               	bsf	4035,0,c	;volatile
  4052                           
  4053                           ;tmr5.c: 133: }
  4054  001822  0012               	return	
  4055  001824                     i2l61:
  4056                           
  4057                           ;tmr5.c: 134: else
  4058                           ;tmr5.c: 135: {
  4059                           ;tmr5.c: 137: TMR5H = (timerVal >> 8);
  4060  001824  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
  4061  001826  6EC2               	movwf	4034,c	;volatile
  4062                           
  4063                           ;tmr5.c: 138: TMR5L = timerVal;
  4064  001828  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
  4065  00182C  0012               	return	
  4066  00182E                     __end_of_TMR5_WriteTimer:
  4067                           	opt stack 0
  4068                           tosu	equ	0xFFF
  4069                           tosh	equ	0xFFE
  4070                           tosl	equ	0xFFD
  4071                           pclatu	equ	0xFFB
  4072                           pclath	equ	0xFFA
  4073                           tblptru	equ	0xFF8
  4074                           tblptrh	equ	0xFF7
  4075                           tblptrl	equ	0xFF6
  4076                           tablat	equ	0xFF5
  4077                           prodh	equ	0xFF4
  4078                           prodl	equ	0xFF3
  4079                           intcon	equ	0xFF2
  4080                           postinc0	equ	0xFEE
  4081                           fsr0h	equ	0xFEA
  4082                           fsr0l	equ	0xFE9
  4083                           wreg	equ	0xFE8
  4084                           fsr1h	equ	0xFE2
  4085                           fsr1l	equ	0xFE1
  4086                           indf2	equ	0xFDF
  4087                           postinc2	equ	0xFDE
  4088                           postdec2	equ	0xFDD
  4089                           fsr2h	equ	0xFDA
  4090                           fsr2l	equ	0xFD9
  4091                           status	equ	0xFD8
  4092                           
  4093 ;; *************** function _TMR5_StartTimer *****************
  4094 ;; Defined at:
  4095 ;;		line 92 in file "mcc_generated_files/tmr5.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		None
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_echoChanged
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text30
  4123  001886                     __ptext30:
  4124                           	opt stack 0
  4125  001886                     _TMR5_StartTimer:
  4126                           	opt stack 23
  4127                           
  4128                           ;tmr5.c: 95: T5CONbits.TMR5ON = 1;
  4129                           
  4130                           ;incstack = 0
  4131  001886  80C3               	bsf	4035,0,c	;volatile
  4132  001888  0012               	return		;funcret
  4133  00188A                     __end_of_TMR5_StartTimer:
  4134                           	opt stack 0
  4135                           tosu	equ	0xFFF
  4136                           tosh	equ	0xFFE
  4137                           tosl	equ	0xFFD
  4138                           pclatu	equ	0xFFB
  4139                           pclath	equ	0xFFA
  4140                           tblptru	equ	0xFF8
  4141                           tblptrh	equ	0xFF7
  4142                           tblptrl	equ	0xFF6
  4143                           tablat	equ	0xFF5
  4144                           prodh	equ	0xFF4
  4145                           prodl	equ	0xFF3
  4146                           intcon	equ	0xFF2
  4147                           postinc0	equ	0xFEE
  4148                           fsr0h	equ	0xFEA
  4149                           fsr0l	equ	0xFE9
  4150                           wreg	equ	0xFE8
  4151                           fsr1h	equ	0xFE2
  4152                           fsr1l	equ	0xFE1
  4153                           indf2	equ	0xFDF
  4154                           postinc2	equ	0xFDE
  4155                           postdec2	equ	0xFDD
  4156                           fsr2h	equ	0xFDA
  4157                           fsr2l	equ	0xFD9
  4158                           status	equ	0xFD8
  4159                           
  4160 ;; *************** function _TMR5_ReadTimer *****************
  4161 ;; Defined at:
  4162 ;;		line 104 in file "mcc_generated_files/tmr5.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  readVal         2    4[COMRAM] unsigned int 
  4167 ;;  readValLow      1    7[COMRAM] unsigned char 
  4168 ;;  readValHigh     1    6[COMRAM] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  2    0[COMRAM] unsigned int 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4179 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4181 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4182 ;;Total ram usage:        8 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_echoChanged
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text31
  4192  00179A                     __ptext31:
  4193                           	opt stack 0
  4194  00179A                     _TMR5_ReadTimer:
  4195                           	opt stack 23
  4196                           
  4197                           ;tmr5.c: 106: uint16_t readVal;
  4198                           ;tmr5.c: 107: uint8_t readValHigh;
  4199                           ;tmr5.c: 108: uint8_t readValLow;
  4200                           ;tmr5.c: 110: T5CONbits.T5RD16 = 1;
  4201                           
  4202                           ;incstack = 0
  4203  00179A  82C3               	bsf	4035,1,c	;volatile
  4204                           
  4205                           ;tmr5.c: 112: readValLow = TMR5L;
  4206  00179C  CFC1 F008          	movff	4033,TMR5_ReadTimer@readValLow	;volatile
  4207                           
  4208                           ;tmr5.c: 113: readValHigh = TMR5H;
  4209  0017A0  CFC2 F007          	movff	4034,TMR5_ReadTimer@readValHigh	;volatile
  4210                           
  4211                           ;tmr5.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
  4212  0017A4  5007               	movf	TMR5_ReadTimer@readValHigh,w,c
  4213  0017A6  6E03               	movwf	??_TMR5_ReadTimer& (0+255),c
  4214  0017A8  5008               	movf	TMR5_ReadTimer@readValLow,w,c
  4215  0017AA  6E05               	movwf	TMR5_ReadTimer@readVal,c
  4216  0017AC  C003  F006         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
  4217                           
  4218                           ;tmr5.c: 117: return readVal;
  4219  0017B0  C005  F001         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
  4220  0017B4  C006  F002         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
  4221  0017B8  0012               	return	
  4222  0017BA                     __end_of_TMR5_ReadTimer:
  4223                           	opt stack 0
  4224                           tosu	equ	0xFFF
  4225                           tosh	equ	0xFFE
  4226                           tosl	equ	0xFFD
  4227                           pclatu	equ	0xFFB
  4228                           pclath	equ	0xFFA
  4229                           tblptru	equ	0xFF8
  4230                           tblptrh	equ	0xFF7
  4231                           tblptrl	equ	0xFF6
  4232                           tablat	equ	0xFF5
  4233                           prodh	equ	0xFF4
  4234                           prodl	equ	0xFF3
  4235                           intcon	equ	0xFF2
  4236                           postinc0	equ	0xFEE
  4237                           fsr0h	equ	0xFEA
  4238                           fsr0l	equ	0xFE9
  4239                           wreg	equ	0xFE8
  4240                           fsr1h	equ	0xFE2
  4241                           fsr1l	equ	0xFE1
  4242                           indf2	equ	0xFDF
  4243                           postinc2	equ	0xFDE
  4244                           postdec2	equ	0xFDD
  4245                           fsr2h	equ	0xFDA
  4246                           fsr2l	equ	0xFD9
  4247                           status	equ	0xFD8
  4248                           
  4249 ;; *************** function _EUSART1_Transmit_ISR *****************
  4250 ;; Defined at:
  4251 ;;		line 172 in file "mcc_generated_files/eusart1.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4269 ;;Total ram usage:        0 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_EUSART1_Initialize
  4275 ;;		_INTERRUPT_InterruptManager
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text32
  4280  0016D2                     __ptext32:
  4281                           	opt stack 0
  4282  0016D2                     _EUSART1_Transmit_ISR:
  4283                           	opt stack 26
  4284                           
  4285                           ;eusart1.c: 176: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  4286                           
  4287                           ;incstack = 0
  4288  0016D2  0E08               	movlw	8
  4289  0016D4  0100               	movlb	0	; () banked
  4290  0016D6  61CD               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  4291  0016D8  D012               	goto	i2l297
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;eusart1.c: 177: {
  4295                           ;eusart1.c: 178: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  4296  0016DA  518B               	movf	_eusart1TxTail& (0+255),w,b	;volatile
  4297  0016DC  0D01               	mullw	1
  4298  0016DE  0E44               	movlw	low _eusart1TxBuffer
  4299  0016E0  24F3               	addwf	prodl,w,c
  4300  0016E2  6ED9               	movwf	fsr2l,c
  4301  0016E4  0E00               	movlw	high _eusart1TxBuffer
  4302  0016E6  20F4               	addwfc	prodh,w,c
  4303  0016E8  6EDA               	movwf	fsr2h,c
  4304  0016EA  50DF               	movf	indf2,w,c
  4305  0016EC  6E9A               	movwf	3994,c	;volatile
  4306                           
  4307                           ; BSR set to: 0
  4308  0016EE  2B8B               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  4312  0016F0  0E07               	movlw	7
  4313  0016F2  658B               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  4314  0016F4  D002               	goto	i2l298
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;eusart1.c: 180: {
  4318                           ;eusart1.c: 181: eusart1TxTail = 0;
  4319  0016F6  0E00               	movlw	0
  4320  0016F8  6F8B               	movwf	_eusart1TxTail& (0+255),b	;volatile
  4321  0016FA                     i2l298:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;eusart1.c: 182: }
  4325                           ;eusart1.c: 183: eusart1TxBufferRemaining++;
  4326                           
  4327                           ; BSR set to: 0
  4328  0016FA  2BCD               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  4329                           
  4330                           ;eusart1.c: 184: }
  4331  0016FC  0012               	return	
  4332  0016FE                     i2l297:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;eusart1.c: 185: else
  4336                           ;eusart1.c: 186: {
  4337                           ;eusart1.c: 187: PIE3bits.TX1IE = 0;
  4338  0016FE  010E               	movlb	14	; () banked
  4339  001700  99C5               	bcf	197,4,b	;volatile
  4340  001702  0012               	return	
  4341  001704                     __end_of_EUSART1_Transmit_ISR:
  4342                           	opt stack 0
  4343                           tosu	equ	0xFFF
  4344                           tosh	equ	0xFFE
  4345                           tosl	equ	0xFFD
  4346                           pclatu	equ	0xFFB
  4347                           pclath	equ	0xFFA
  4348                           tblptru	equ	0xFF8
  4349                           tblptrh	equ	0xFF7
  4350                           tblptrl	equ	0xFF6
  4351                           tablat	equ	0xFF5
  4352                           prodh	equ	0xFF4
  4353                           prodl	equ	0xFF3
  4354                           intcon	equ	0xFF2
  4355                           postinc0	equ	0xFEE
  4356                           fsr0h	equ	0xFEA
  4357                           fsr0l	equ	0xFE9
  4358                           wreg	equ	0xFE8
  4359                           fsr1h	equ	0xFE2
  4360                           fsr1l	equ	0xFE1
  4361                           indf2	equ	0xFDF
  4362                           postinc2	equ	0xFDE
  4363                           postdec2	equ	0xFDD
  4364                           fsr2h	equ	0xFDA
  4365                           fsr2l	equ	0xFD9
  4366                           status	equ	0xFD8
  4367                           
  4368 ;; *************** function _EUSART1_Receive_ISR *****************
  4369 ;; Defined at:
  4370 ;;		line 191 in file "mcc_generated_files/eusart1.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;Total ram usage:        0 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_EUSART1_Initialize
  4394 ;;		_INTERRUPT_InterruptManager
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text33
  4399  001704                     __ptext33:
  4400                           	opt stack 0
  4401  001704                     _EUSART1_Receive_ISR:
  4402                           	opt stack 26
  4403                           
  4404                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  4405                           
  4406                           ;incstack = 0
  4407  001704  A29D               	btfss	3997,1,c	;volatile
  4408  001706  D002               	goto	i2l303
  4409                           
  4410                           ;eusart1.c: 195: {
  4411                           ;eusart1.c: 198: RC1STAbits.CREN = 0;
  4412  001708  989D               	bcf	3997,4,c	;volatile
  4413                           
  4414                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  4415  00170A  889D               	bsf	3997,4,c	;volatile
  4416  00170C                     i2l303:
  4417                           
  4418                           ;eusart1.c: 200: }
  4419                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  4420  00170C  0100               	movlb	0	; () banked
  4421  00170E  518A               	movf	_eusart1RxHead& (0+255),w,b	;volatile
  4422  001710  0D01               	mullw	1
  4423  001712  0E3C               	movlw	low _eusart1RxBuffer
  4424  001714  24F3               	addwf	prodl,w,c
  4425  001716  6ED9               	movwf	fsr2l,c
  4426  001718  0E00               	movlw	high _eusart1RxBuffer
  4427  00171A  20F4               	addwfc	prodh,w,c
  4428  00171C  6EDA               	movwf	fsr2h,c
  4429  00171E  CF99 FFDF          	movff	3993,indf2	;volatile
  4430                           
  4431                           ; BSR set to: 0
  4432  001722  2B8A               	incf	_eusart1RxHead& (0+255),f,b	;volatile
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4436  001724  0E07               	movlw	7
  4437  001726  658A               	cpfsgt	_eusart1RxHead& (0+255),b	;volatile
  4438  001728  D002               	goto	i2l304
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;eusart1.c: 205: {
  4442                           ;eusart1.c: 206: eusart1RxHead = 0;
  4443  00172A  0E00               	movlw	0
  4444  00172C  6F8A               	movwf	_eusart1RxHead& (0+255),b	;volatile
  4445  00172E                     i2l304:
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;eusart1.c: 207: }
  4449                           ;eusart1.c: 208: eusart1RxCount++;
  4450                           
  4451                           ; BSR set to: 0
  4452  00172E  2A4F               	incf	_eusart1RxCount,f,c	;volatile
  4453                           
  4454                           ; BSR set to: 0
  4455  001730  0012               	return		;funcret
  4456  001732                     __end_of_EUSART1_Receive_ISR:
  4457                           	opt stack 0
  4458                           tosu	equ	0xFFF
  4459                           tosh	equ	0xFFE
  4460                           tosl	equ	0xFFD
  4461                           pclatu	equ	0xFFB
  4462                           pclath	equ	0xFFA
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           intcon	equ	0xFF2
  4470                           postinc0	equ	0xFEE
  4471                           fsr0h	equ	0xFEA
  4472                           fsr0l	equ	0xFE9
  4473                           wreg	equ	0xFE8
  4474                           fsr1h	equ	0xFE2
  4475                           fsr1l	equ	0xFE1
  4476                           indf2	equ	0xFDF
  4477                           postinc2	equ	0xFDE
  4478                           postdec2	equ	0xFDD
  4479                           fsr2h	equ	0xFDA
  4480                           fsr2l	equ	0xFD9
  4481                           status	equ	0xFD8
  4482                           tosu	equ	0xFFF
  4483                           tosh	equ	0xFFE
  4484                           tosl	equ	0xFFD
  4485                           pclatu	equ	0xFFB
  4486                           pclath	equ	0xFFA
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           postinc0	equ	0xFEE
  4495                           fsr0h	equ	0xFEA
  4496                           fsr0l	equ	0xFE9
  4497                           wreg	equ	0xFE8
  4498                           fsr1h	equ	0xFE2
  4499                           fsr1l	equ	0xFE1
  4500                           indf2	equ	0xFDF
  4501                           postinc2	equ	0xFDE
  4502                           postdec2	equ	0xFDD
  4503                           fsr2h	equ	0xFDA
  4504                           fsr2l	equ	0xFD9
  4505                           status	equ	0xFD8
  4506                           
  4507                           	psect	text34
  4508  000000                     __ptext34:
  4509                           	opt stack 0
  4510                           tosu	equ	0xFFF
  4511                           tosh	equ	0xFFE
  4512                           tosl	equ	0xFFD
  4513                           pclatu	equ	0xFFB
  4514                           pclath	equ	0xFFA
  4515                           tblptru	equ	0xFF8
  4516                           tblptrh	equ	0xFF7
  4517                           tblptrl	equ	0xFF6
  4518                           tablat	equ	0xFF5
  4519                           prodh	equ	0xFF4
  4520                           prodl	equ	0xFF3
  4521                           intcon	equ	0xFF2
  4522                           postinc0	equ	0xFEE
  4523                           fsr0h	equ	0xFEA
  4524                           fsr0l	equ	0xFE9
  4525                           wreg	equ	0xFE8
  4526                           fsr1h	equ	0xFE2
  4527                           fsr1l	equ	0xFE1
  4528                           indf2	equ	0xFDF
  4529                           postinc2	equ	0xFDE
  4530                           postdec2	equ	0xFDD
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535                           	psect	rparam
  4536  0000                     tosu	equ	0xFFF
  4537                           tosh	equ	0xFFE
  4538                           tosl	equ	0xFFD
  4539                           pclatu	equ	0xFFB
  4540                           pclath	equ	0xFFA
  4541                           tblptru	equ	0xFF8
  4542                           tblptrh	equ	0xFF7
  4543                           tblptrl	equ	0xFF6
  4544                           tablat	equ	0xFF5
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           postinc0	equ	0xFEE
  4549                           fsr0h	equ	0xFEA
  4550                           fsr0l	equ	0xFE9
  4551                           wreg	equ	0xFE8
  4552                           fsr1h	equ	0xFE2
  4553                           fsr1l	equ	0xFE1
  4554                           indf2	equ	0xFDF
  4555                           postinc2	equ	0xFDE
  4556                           postdec2	equ	0xFDD
  4557                           fsr2h	equ	0xFDA
  4558                           fsr2l	equ	0xFD9
  4559                           status	equ	0xFD8
  4560                           
  4561                           	psect	temp
  4562  00005C                     btemp:
  4563                           	opt stack 0
  4564  00005C                     	ds	1
  4565  0000                     int$flags	set	btemp
  4566  0000                     wtemp6	set	btemp+1
  4567                           tosu	equ	0xFFF
  4568                           tosh	equ	0xFFE
  4569                           tosl	equ	0xFFD
  4570                           pclatu	equ	0xFFB
  4571                           pclath	equ	0xFFA
  4572                           tblptru	equ	0xFF8
  4573                           tblptrh	equ	0xFF7
  4574                           tblptrl	equ	0xFF6
  4575                           tablat	equ	0xFF5
  4576                           prodh	equ	0xFF4
  4577                           prodl	equ	0xFF3
  4578                           intcon	equ	0xFF2
  4579                           postinc0	equ	0xFEE
  4580                           fsr0h	equ	0xFEA
  4581                           fsr0l	equ	0xFE9
  4582                           wreg	equ	0xFE8
  4583                           fsr1h	equ	0xFE2
  4584                           fsr1l	equ	0xFE1
  4585                           indf2	equ	0xFDF
  4586                           postinc2	equ	0xFDE
  4587                           postdec2	equ	0xFDD
  4588                           fsr2h	equ	0xFDA
  4589                           fsr2l	equ	0xFD9
  4590                           status	equ	0xFD8


Data Sizes:
    Strings     8
    Constant    10
    Data        0
    BSS         100
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      91
    BANK0           160     30     110
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> vectorString(BANK0[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    serial_print@cadena	PTR unsigned char  size(2) Largest target is 32
		 -> vectorString(BANK0[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> echoChanged(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> echoChanged(), INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _echoChanged->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _serial_print->_EUSART1_Write
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2108
                                             28 BANK0      2     2      0
           _INT0_SetInterruptHandler
                  _SYSTEM_Initialize
                     _TMR5_StopTimer
                       _serial_print
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    17      8    1354
                                             12 BANK0     16     8      8
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     414
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _serial_print                                         3     1      2     210
                                              1 BANK0      3     1      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     370
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     174
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     196
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        3     0      3      98
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3      98
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0    6329
                                             41 COMRAM    18    18      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0    6329
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0    6329
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                        _echoChanged *
 ---------------------------------------------------------------------------------
 (7) _echoChanged                                          0     0      0    6329
                     _TMR5_ReadTimer
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
                            ___ftmul
                            ___fttol
                           ___lwtoft
                   i2_TMR5_StopTimer
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (8) i2_TMR5_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             3     0      3    2486
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___fttol                                             15    11      4     328
                                             26 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             15     9      6    2992
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    2388
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR5_ReadTimer                                       8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT0_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
   _TMR5_StopTimer
   _serial_print
     _EUSART1_Write
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
   _EUSART1_Transmit_ISR *
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _echoChanged *
         _TMR5_ReadTimer
         _TMR5_StartTimer
         _TMR5_WriteTimer
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         i2_TMR5_StopTimer
         i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      6E       5       68.8%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      5B       1       96.8%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C9       6        0.0%
DATA                 0      0      C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Jun 16 16:15:36 2018

                     _eusart1TxBufferRemaining 00CD                                    __CFG_CP$OFF 000000  
                           i2___lwdiv@dividend 0001                              ??_TMR5_WriteTimer 0003  
                                  __CFG_LVP$ON 000000                                            l370 1684  
                                          l291 1636                                            l371 166A  
                                          l292 165C                                            l293 165A  
                                          l390 0F68                                            l358 140A  
                                          l383 0F20                                            l392 0F90  
                                          l384 0F3A                                            l810 157E  
                                          l820 1614                                            l396 0FE2  
                                          l805 1554                                            l397 1044  
                                          l806 154C                                            l398 0FE8  
                                          l815 15F2                                            l816 15EA  
                                          l809 1574                                            l819 160A  
                                 __CFG_CPD$OFF 000000                                            u980 1558  
                   ??_INT0_SetInterruptHandler 00B2                        __size_of_PMD_Initialize 001C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                  _INT0_CallBack 1778  
                                 __CFG_ZCD$OFF 000000                                           l1847 1622  
                                         l1975 0F94                                           STR_1 0F0B  
                                         u1010 15F6                                           u1110 0FC6  
                                         u1130 104C                                           u1140 1068  
                                         _LATA 000F83                                           _LATB 000F84  
                                         _LATC 000F85                                           _LATD 000F86  
                                         u1257 1402                                           _LATE 000F87  
                                         u1267 1416                                           _PMD0 000EE1  
                                         _PMD1 000EE2                                           _PMD2 000EE3  
                                         _PMD3 000EE4                                           _PMD4 000EE5  
                                         _PMD5 000EE6                                           i2l61 1824  
                                         i2l99 0060                                           _WPUA 000F10  
                                         _WPUB 000F18                                           _WPUC 000F20  
                                         _WPUD 000F25                                           _WPUE 000F2D  
                                _EUSART1_Write 161E                                  __CFG_FCMEN$ON 000000  
                                         _main 13DE                                   ___ftpack@arg 0001  
                                 ___ftpack@exp 0004                                           fsr0h 000FEA  
                                         fsr1h 000FE2                             i2___lwdiv@quotient 0005  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00E8                                _timer5ReloadVal 005A  
                                __CFG_CSWEN$ON 000000                                   ___ftmul@cntr 0019  
                                 ___param_bank 000000                                   ___ftmul@sign 001A  
                                __CFG_SCANE$ON 000000                                   ___fttol@exp1 0029  
                                 ___fttol@lval 0025                               __end_of_INT0_ISR 187A  
               __size_of_OSCILLATOR_Initialize 0018                  __end_of_OSCILLATOR_Initialize 1846  
                                        ?_main 0001                                  __CFG_WDTE$OFF 000000  
                     TMR5_ReadTimer@readValLow 0008                                __end_of___ftmul 125E  
                              __end_of___fttol 116A                                          _T5CLK 000FC6  
                                        _T5CON 000FC3                                 __CFG_DEBUG$OFF 000000  
                              __end_of___lwdiv 1588                                          i2l102 007E  
                              __end_of___lwmod 161E                                          i2l303 170C  
                                        i2l304 172E                                          i2l620 1376  
                                        i2l364 1276                                          i2l701 1214  
                                        i2l622 13B4                                          i2l702 1224  
                                        i2l366 1322                                          i2l623 13AA  
                                        i2l616 1358                                          i2l297 16FE  
                                        i2l617 134E                                          i2l298 16FA  
                                        i2l810 15D0                                          i2l619 138C  
                                        i2l724 113C                                          i2l716 10A2  
                                        i2l725 1130                                          i2l805 15A6  
                                        i2l718 1118                                          i2l806 159E  
                                        i2l727 1158                                          i2l719 1108  
                                        i2l809 15C6                                          i2l695 1192  
                                        i2l697 11BA                                          i2l698 11EC  
                                        i2l699 11FC                                          _OSCEN 000EDC  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TRISA 000F88                                          _TRISB 000F89  
                                        u73_41 117A                                 ?_INT0_CallBack 0001  
                                        _TRISC 000F8A                                          _TRISD 000F8B  
                                        _TRISE 000F8C                           __size_of_echoChanged 00D2  
                                        u75_41 11A2                                          u79_41 1086  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                         _EUSART1_Transmit_ISR 16D2                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                               __CFG_EBTRB$OFF 000000                                __end_of_dpowers 0F0B  
                           __CFG_MCLRE$EXTMCLR 000000                                  ___ftpack@sign 0005  
                               ?_EUSART1_Write 0001                                          pclath 000FFA  
                                        tablat 000FF5                                          status 000FD8  
                                        wtemp6 005D                                __end_of_sprintf 1076  
                           __size_ofi2___lwdiv 0052                                _TMR5_Initialize 169C  
                              __initialization 1756                          TMR5_ReadTimer@readVal 0005  
                   __end_of_EUSART1_Initialize 1534                                   __end_of_main 145A  
                  ?_INTERRUPT_InterruptManager 0001                                         ??_main 00CB  
                                ___fttol@sign1 0024                                  __activetblptr 000003  
                        ?_EUSART1_Transmit_ISR 0001                                         _ANSELA 000F11  
                                       _ANSELB 000F19                                         _ANSELC 000F21  
                                       _ANSELD 000F26                                         _ANSELE 000F2E  
                             __end_of___ftpack 13DE                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _RC1REG 000F99  
                                       _RC1STA 000F9D                                         _ODCONA 000F0F  
                                       _ODCONB 000F17                                         _ODCONC 000F1F  
                                       _RC6PPS 000EFD                                         _ODCOND 000F24  
                                       _ODCONE 000F2C                                 __CFG_WDTCCS$SC 000000  
                             __end_of___lwtoft 1756                                         _OSCFRQ 000EDE  
                                       _TX1REG 000F9A                                         _TX1STA 000F9E  
                               __CFG_PWRTE$OFF 000000                                 __CFG_XINST$OFF 000000  
                    __CFG_RSTOSC$HFINTOSC_1MHZ 000000                                 __CFG_STVREN$ON 000000  
                                    ??___ftmul 0012                                      ??___fttol 001F  
                                    ??___lwdiv 00B3                                      ??___lwmod 00BA  
                                       clear_0 175C                                         clear_1 1768  
                              ??_INT0_CallBack 002A                          ___ftmul@f3_as_product 0016  
                              _TMR5_StartTimer 1886                                 _PMD_Initialize 17F6  
                            __end_ofi2___lwdiv 15DA                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                                ??_EUSART1_Write 00AF  
     INT0_SetInterruptHandler@InterruptHandler 00AF                                      ??_sprintf 00C3  
                              _eusart1RxBuffer 003C                  __size_of_INTERRUPT_Initialize 0004  
                              _eusart1TxBuffer 0044                        __end_of_TMR5_Initialize 16D2  
                            _SYSTEM_Initialize 17BA                                     __accesstop 0060  
                      __end_of__initialization 176E                                      ?_INT0_ISR 0001  
                           ?_SYSTEM_Initialize 0001                      __size_ofi2_TMR5_StopTimer 0004  
                                ___rparam_used 000001                                _TMR5_WriteTimer 1812  
                                   ___ftmul@f1 000C                                     ___ftmul@f2 000F  
                                   ___fttol@f1 001B                                 __pcstackCOMRAM 0001  
                          ??_SYSTEM_Initialize 00B2                         __end_of_PMD_Initialize 1812  
                                   ___lwtoft@c 0009                         ??_EUSART1_Transmit_ISR 0001  
                  __size_of_EXT_INT_Initialize 001E                    __end_of_EUSART1_Receive_ISR 1732  
                    __end_of_SYSTEM_Initialize 17D8                                  _eusart1RxHead 008A  
                                _eusart1TxHead 008C                                  _eusart1RxTail 0050  
                                   __pbssBANK0 0060                                  _eusart1TxTail 008B  
            _EUSART1_TxDefaultInterruptHandler 0054                ??_EUSART1_SetRxInterruptHandler 00B2  
                        _INT0_InterruptHandler 0057                                     ??_INT0_ISR 002A  
                                   __pnvCOMRAM 0051                        __end_of_TMR5_StartTimer 188A  
                              __CFG_PPS1WAY$ON 000000                                      ?___ftpack 0001  
                              ?_PMD_Initialize 0001                                      ?___lwtoft 0009  
                                      _SP1BRGH 000F9C                                        _SP1BRGL 000F9B  
                      __size_of_TMR5_ReadTimer 0020                                        _OSCCON1 000ED8  
                                      _OSCCON3 000EDA                                        _OSCTUNE 000EDD  
                                      i2u65_40 1340                                        i2u81_40 10C0  
                                      i2u81_45 10B8                                        i2u69_40 13BE  
                                      i2u85_40 1142                                        i2u93_48 1786  
                                      i2u88_40 15AA                        __end_of_TMR5_WriteTimer 182E  
                             ?_TMR5_Initialize 0001              __size_of_INT0_SetInterruptHandler 000E  
                                   _mediciones 0060                      ?_INT0_SetInterruptHandler 00AF  
                           serial_print@cadena 00B0                                        __Hparam 0000  
                                      __Lparam 0000                                  ?_serial_print 00B0  
                                      ___ftmul 116A                                        ___fttol 1076  
                                      ___lwdiv 1534                                        ___lwmod 15DA  
                                 __psmallconst 0F00                                        __pcinit 1756  
                                ??_echoChanged 002A                                     ??___ftpack 0006  
                                      __ramtop 0F00                                        __ptext0 13DE  
                                      __ptext1 0F14                                        __ptext2 15DA  
                                      __ptext3 1534                                        __ptext4 1662  
                                      __ptext5 161E                                        __ptext6 187A  
                                      __ptext7 17BA                                        __ptext8 169C  
                                      __ptext9 17F6                                     ??___lwtoft 000C  
                      __size_of_TMR5_StopTimer 0004                                        _dpowers 0F01  
                        _OSCILLATOR_Initialize 182E                             _EUSART1_Initialize 14D4  
                     ??_PIN_MANAGER_Initialize 00AF                                      _T5CONbits 000FC3  
                   __size_of_SYSTEM_Initialize 001E                                        _sprintf 0F14  
                         end_of_initialization 176E                            ?_EUSART1_Initialize 0001  
                             i2_TMR5_StopTimer 1882          __end_of_EUSART1_SetRxInterruptHandler 1870  
       __size_of_EUSART1_SetRxInterruptHandler 000E                  _EUSART1_SetRxInterruptHandler 1862  
                               ??_serial_print 00B2                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                             ?_TMR5_StartTimer 0001                           ??_EUSART1_Initialize 00B2  
                                   _timerCount 00AD                          __CFG_WDTCPS$WDTCPS_31 000000  
                                    _PORTBbits 000F8E                            __end_of_echoChanged 1330  
                          EUSART1_Write@txData 00AF                               __CFG_FEXTOSC$OFF 000000  
                            i2___lwdiv@divisor 0003                                      i2___lwdiv 1588  
                            i2___lwdiv@counter 0007                               ?_TMR5_WriteTimer 0001  
                      TMR5_WriteTimer@timerVal 0001                              __size_of_INT0_ISR 000A  
                                  ___ftmul@exp 0015                   __end_of_INTERRUPT_Initialize 1882  
         __end_of_INT0_DefaultInterruptHandler 188C          __size_of_INT0_DefaultInterruptHandler 0002  
                 _INT0_DefaultInterruptHandler 188A                         ?_OSCILLATOR_Initialize 0001  
                        __end_of_INT0_CallBack 179A                                 _TMR5_ReadTimer 179A  
                          start_initialization 1756                __size_of_PIN_MANAGER_Initialize 007A  
EUSART1_SetRxInterruptHandler@interruptHandler 00AF  EUSART1_SetTxInterruptHandler@interruptHandler 00AF  
                                   ?i2___lwdiv 0001                          __end_of_EUSART1_Write 1662  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 00AF  
               ?_EUSART1_SetRxInterruptHandler 00AF                     __end_of_EXT_INT_Initialize 17F6  
                ?_INT0_DefaultInterruptHandler 0001                                    _echoChanged 125E  
                               _TMR5_StopTimer 187A                         __end_of_TMR5_ReadTimer 17BA  
                               _eusart1RxCount 004F                              __size_of___ftpack 00AE  
                                  __pbssCOMRAM 003C              _EUSART1_RxDefaultInterruptHandler 0051  
             __end_of_INT0_SetInterruptHandler 1854                              __size_of___lwtoft 0024  
                __size_of_EUSART1_Transmit_ISR 0032                                  __pcstackBANK0 00AF  
                         __end_of_serial_print 169C                ??_EUSART1_SetTxInterruptHandler 00B2  
                 __size_of_EUSART1_Receive_ISR 002E                                    sprintf@flag 00C6  
                                  sprintf@prec 00C7                                      __pnvBANK0 00CD  
                             ___lwdiv@dividend 00AF                         _PIN_MANAGER_Initialize 145A  
                                    __pintcode 0008                                       ?___ftmul 000C  
                                     ?___fttol 001B                                       ?___lwdiv 00AF  
                                     ?___lwmod 00B6                         __end_of_TMR5_StopTimer 187E  
                 ??_INTERRUPT_InterruptManager 002A                                      _distancia 0088  
                              ?_TMR5_ReadTimer 0001                                       _BAUD1CON 000F9F  
                                  __smallconst 0F00                       __end_ofi2_TMR5_StopTimer 1886  
                             ___lwdiv@quotient 00B3                                       ?_sprintf 00BB  
                                  ??i2___lwdiv 0005                           _INTERRUPT_Initialize 187E  
                                     _INT0_ISR 1870                                       _PIE0bits 000EC2  
                                     _PIE3bits 000EC5                            __CFG_BORV$VBOR_2P45 000000  
                                     i2u121_48 006E                                       i2u124_48 0088  
                                     i2u124_49 009C            __size_of_INTERRUPT_InterruptManager 00E0  
                                     i2u127_47 1326                                       _PIR0bits 000ECA  
                                     _PIR3bits 000ECD                                       _PIR4bits 000ECE  
                     __size_of_TMR5_Initialize 0036                                    _INT0PPSbits 000EA1  
                              ?_TMR5_StopTimer 0001                                  serial_print@i 00B2  
                    TMR5_ReadTimer@readValHigh 0007                 ??_INT0_DefaultInterruptHandler 0001  
                        ?_INTERRUPT_Initialize 0001                       _INT0_SetInterruptHandler 1846  
        __end_of_EUSART1_SetTxInterruptHandler 1862         __size_of_EUSART1_SetTxInterruptHandler 000E  
                _EUSART1_SetTxInterruptHandler 1854                                       __Hrparam 0000  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                      ??_OSCILLATOR_Initialize 00AF                               __size_of___ftmul 00F4  
                             __size_of___fttol 00F4                    __size_of_EUSART1_Initialize 0060  
                             __size_of___lwdiv 0054                               __size_of___lwmod 0044  
                                     ___ftpack 1330                                       ___lwtoft 1732  
                        __size_of_serial_print 003A                                     sprintf@val 00C8  
                     __size_of_TMR5_StartTimer 0004                                ___lwdiv@divisor 00B1  
                              ___lwdiv@counter 00B5                                       __ptext10 145A  
                                     __ptext11 182E                                       __ptext20 1778  
                                     __ptext12 187E                                       __ptext21 188A  
                                     __ptext13 17D8                                       __ptext30 1886  
                                     __ptext22 125E                                       __ptext14 1846  
                                     __ptext31 179A                                       __ptext23 1588  
                                     __ptext15 14D4                                       __ptext32 16D2  
                                     __ptext24 1882                                       __ptext16 1854  
                                     __ptext33 1704                                       __ptext25 1732  
                                     __ptext17 1862                                       __ptext34 0000  
                                     __ptext26 1076                                       __ptext27 116A  
                                     __ptext19 1870                                       __ptext28 1330  
                                     __ptext29 1812                               __size_of_sprintf 0162  
                                __size_of_main 007C                                     _T5GCONbits 000FC4  
                         __CFG_WDTCWS$WDTCWS_7 000000                       __size_of_TMR5_WriteTimer 001C  
                                   _RC1STAbits 000F9D                                   _serial_print 1662  
                                     int$flags 005C                                       _promedio 004C  
           __end_of_INTERRUPT_InterruptManager 00E8                     _INTERRUPT_InterruptManager 0008  
                                 ?_echoChanged 0001                            _EUSART1_Receive_ISR 1704  
                            ??_TMR5_Initialize 00AF                                     _INTCONbits 000FF2  
                       ??_INTERRUPT_Initialize 00AF                                    _numMedicion 004E  
                           _EXT_INT_Initialize 17D8                                       intlevel2 0000  
                                    sprintf@ap 00C4                                      sprintf@sp 00BB  
                         ?_EUSART1_Receive_ISR 0001                               ___lwmod@dividend 00B6  
                      ?_PIN_MANAGER_Initialize 0001                              __CFG_CLKOUTEN$OFF 000000  
                          ?_EXT_INT_Initialize 0001                                   _vectorString 008D  
                 __end_of_EUSART1_Transmit_ISR 1704                         __size_of_INT0_CallBack 0022  
                             ??_TMR5_ReadTimer 0003                 ?_EUSART1_SetTxInterruptHandler 00AF  
                       __size_of_EUSART1_Write 0044                                     _RX1PPSbits 000EB5  
                         ??_EXT_INT_Initialize 00B2                                       sprintf@c 00CA  
                                     sprintf@f 00BD                                ___lwmod@divisor 00B8  
                            ?i2_TMR5_StopTimer 0001                                ___lwmod@counter 00BA  
                           ??i2_TMR5_StopTimer 0001                                     _TX1STAbits 000F9E  
                            ??_TMR5_StartTimer 0001                          ??_EUSART1_Receive_ISR 0001  
               __end_of_PIN_MANAGER_Initialize 14D4                               ??_TMR5_StopTimer 00AF  
