

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Nov 10 12:50:45 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	text115,global,reloc=2,class=CODE,delta=1
   132                           	psect	text116,global,reloc=2,class=CODE,delta=1
   133                           	psect	text117,global,reloc=2,class=CODE,delta=1
   134                           	psect	text118,global,reloc=2,class=CODE,delta=1
   135                           	psect	text119,global,reloc=2,class=CODE,delta=1
   136                           	psect	text120,global,reloc=2,class=CODE,delta=1
   137                           	psect	text121,global,reloc=2,class=CODE,delta=1
   138                           	psect	text122,global,reloc=2,class=CODE,delta=1
   139                           	psect	text123,global,reloc=2,class=CODE,delta=1
   140                           	psect	text124,global,reloc=2,class=CODE,delta=1
   141                           	psect	text125,global,reloc=2,class=CODE,delta=1
   142                           	psect	text126,global,reloc=2,class=CODE,delta=1
   143                           	psect	text127,global,reloc=2,class=CODE,delta=1
   144                           	psect	text128,global,reloc=2,class=CODE,delta=1
   145                           	psect	text129,global,reloc=2,class=CODE,delta=1
   146                           	psect	text130,global,reloc=2,class=CODE,delta=1
   147                           	psect	text131,global,reloc=2,class=CODE,delta=1
   148                           	psect	text132,global,reloc=2,class=CODE,delta=1
   149                           	psect	text133,global,reloc=2,class=CODE,delta=1
   150                           	psect	text134,global,reloc=2,class=CODE,delta=1
   151                           	psect	text135,global,reloc=2,class=CODE,delta=1
   152                           	psect	text136,global,reloc=2,class=CODE,delta=1
   153                           	psect	text137,global,reloc=2,class=CODE,delta=1
   154                           	psect	text138,global,reloc=2,class=CODE,delta=1
   155                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   156                           	psect	text139,global,reloc=2,class=CODE,delta=1
   157                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   158                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   159  0000                     
   160                           ; Version 1.44
   161                           ; Generated 14/09/2017 GMT
   162                           ; 
   163                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   164                           ; All rights reserved.
   165                           ; 
   166                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   167                           ; 
   168                           ; Redistribution and use in source and binary forms, with or without modification, are
   169                           ; permitted provided that the following conditions are met:
   170                           ; 
   171                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   172                           ;        conditions and the following disclaimer.
   173                           ; 
   174                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   175                           ;        of conditions and the following disclaimer in the documentation and/or other
   176                           ;        materials provided with the distribution.
   177                           ; 
   178                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   179                           ;        software without specific prior written permission.
   180                           ; 
   181                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   182                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   183                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   184                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   185                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   186                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   187                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   188                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   189                           ; 
   190                           ; 
   191                           ; Code-generator required, PIC18F47K40 Definitions
   192                           ; 
   193                           ; SFR Addresses
   194  0000                     
   195                           	psect	smallconst
   196  000F00                     __psmallconst:
   197                           	opt stack 0
   198  000F00  00                 	db	0
   199  000F01  00                 	db	0
   200  000F02  80                 	db	128
   201  000F03  3F                 	db	63
   202  000F04  72                 	db	114
   203  000F05  31                 	db	49
   204  000F06  3F                 	db	63
   205  000F07  FE                 	db	254
   206  000F08  75                 	db	117
   207  000F09  3E                 	db	62
   208  000F0A  58                 	db	88
   209  000F0B  63                 	db	99
   210  000F0C  3D                 	db	61
   211  000F0D  95                 	db	149
   212  000F0E  1D                 	db	29
   213  000F0F  3C                 	db	60
   214  000F10  C5                 	db	197
   215  000F11  AE                 	db	174
   216  000F12  3A                 	db	58
   217  000F13  79                 	db	121
   218  000F14  21                 	db	33
   219  000F15  39                 	db	57
   220  000F16  94                 	db	148
   221  000F17  80                 	db	128
   222  000F18  37                 	db	55
   223  000F19  93                 	db	147
   224  000F1A  A7                 	db	167
   225  000F1B  35                 	db	53
   226  000F1C  56                 	db	86
   227  000F1D  15                 	db	21
   228  000F1E  34                 	db	52
   229  000F1F                     __end_ofexp@coeff:
   230                           	opt stack 0
   231  000F1F  00                 	db	0
   232  000F20  00                 	db	0
   233  000F21  00                 	db	0
   234  000F22  00                 	db	0
   235  000F23  80                 	db	128
   236  000F24  3F                 	db	63
   237  000F25  F0                 	db	240
   238  000F26  FF                 	db	255
   239  000F27  BE                 	db	190
   240  000F28  E2                 	db	226
   241  000F29  A9                 	db	169
   242  000F2A  3E                 	db	62
   243  000F2B  83                 	db	131
   244  000F2C  76                 	db	118
   245  000F2D  BE                 	db	190
   246  000F2E  AE                 	db	174
   247  000F2F  2B                 	db	43
   248  000F30  3E                 	db	62
   249  000F31  3C                 	db	60
   250  000F32  C3                 	db	195
   251  000F33  BD                 	db	189
   252  000F34  D2                 	db	210
   253  000F35  13                 	db	19
   254  000F36  3D                 	db	61
   255  000F37  78                 	db	120
   256  000F38  D3                 	db	211
   257  000F39  BB                 	db	187
   258  000F3A                     __end_oflog@coeff:
   259                           	opt stack 0
   260  000F3A  00                 	db	0	; dummy byte at the end
   261  0000                     
   262                           	psect	nvBANK0
   263  0000D8                     __pnvBANK0:
   264                           	opt stack 0
   265  0000D8                     _TMR5_InterruptHandler:
   266                           	opt stack 0
   267  0000D8                     	ds	3
   268  0000DB                     _TMR3G_InterruptHandler:
   269                           	opt stack 0
   270  0000DB                     	ds	3
   271  0000DE                     _TMR1G_InterruptHandler:
   272                           	opt stack 0
   273  0000DE                     	ds	3
   274  0000E1                     _IOCBF3_InterruptHandler:
   275                           	opt stack 0
   276  0000E1                     	ds	3
   277  0000E4                     _IOCBF2_InterruptHandler:
   278                           	opt stack 0
   279  0000E4                     	ds	3
   280  0000E7                     _IOCBF1_InterruptHandler:
   281                           	opt stack 0
   282  0000E7                     	ds	3
   283  0000EA                     _IOCBF0_InterruptHandler:
   284                           	opt stack 0
   285  0000EA                     	ds	3
   286  0000ED                     _timer5ReloadVal:
   287                           	opt stack 0
   288  0000ED                     	ds	2
   289  0000EF                     _timer0ReloadVal16bit:
   290                           	opt stack 0
   291  0000EF                     	ds	2
   292  0000F1                     _timer3ReloadVal:
   293                           	opt stack 0
   294  0000F1                     	ds	2
   295  0000F3                     _timer1ReloadVal:
   296                           	opt stack 0
   297  0000F3                     	ds	2
   298                           
   299                           	psect	nvBANK1
   300  00015B                     __pnvBANK1:
   301                           	opt stack 0
   302  00015B                     _tactica_elegida:
   303                           	opt stack 0
   304  00015B                     	ds	3
   305  0000                     _PMD5	set	3814
   306  0000                     _PMD4	set	3813
   307  0000                     _PMD3	set	3812
   308  0000                     _PMD2	set	3811
   309  0000                     _PMD1	set	3810
   310  0000                     _PMD0	set	3809
   311  0000                     _OSCTUNE	set	3805
   312  0000                     _OSCFRQ	set	3806
   313  0000                     _OSCEN	set	3804
   314  0000                     _OSCCON3	set	3802
   315  0000                     _OSCCON1	set	3800
   316  0000                     _PIE4bits	set	3782
   317  0000                     _PIR0bits	set	3786
   318  0000                     _PIR5bits	set	3791
   319  0000                     _PIE5bits	set	3783
   320  0000                     _IPR4bits	set	3774
   321  0000                     _IPR0bits	set	3770
   322  0000                     _IPR5bits	set	3775
   323  0000                     _RA3PPS	set	3818
   324  0000                     _RA4PPS	set	3819
   325  0000                     _T1GPPSbits	set	3750
   326  0000                     _T3GPPSbits	set	3752
   327  0000                     _PIE0bits	set	3778
   328  0000                     _PIR4bits	set	3790
   329  0000                     _IOCBPbits	set	3860
   330  0000                     _IOCBNbits	set	3859
   331  0000                     _IOCBFbits	set	3858
   332  0000                     _ODCOND	set	3876
   333  0000                     _ODCONC	set	3871
   334  0000                     _ODCONB	set	3863
   335  0000                     _ODCONA	set	3855
   336  0000                     _ODCONE	set	3884
   337  0000                     _WPUC	set	3872
   338  0000                     _WPUA	set	3856
   339  0000                     _WPUB	set	3864
   340  0000                     _WPUE	set	3885
   341  0000                     _WPUD	set	3877
   342  0000                     _ANSELA	set	3857
   343  0000                     _ANSELE	set	3886
   344  0000                     _ANSELB	set	3865
   345  0000                     _ANSELC	set	3873
   346  0000                     _ANSELD	set	3878
   347  0000                     _LATAbits	set	3971
   348  0000                     _LATEbits	set	3975
   349  0000                     _LATDbits	set	3974
   350  0000                     _PORTBbits	set	3982
   351  0000                     _PORTDbits	set	3984
   352  0000                     _T5GCONbits	set	4036
   353  0000                     _T5CONbits	set	4035
   354  0000                     _T5CON	set	4035
   355  0000                     _TMR5L	set	4033
   356  0000                     _TMR5H	set	4034
   357  0000                     _T5CLK	set	4038
   358  0000                     _T5GATE	set	4037
   359  0000                     _T5GCON	set	4036
   360  0000                     _T0CON0bits	set	4053
   361  0000                     _T0CON0	set	4053
   362  0000                     _TMR0L	set	4051
   363  0000                     _TMR0H	set	4052
   364  0000                     _T0CON1	set	4054
   365  0000                     _T3GCONbits	set	4042
   366  0000                     _T3CONbits	set	4041
   367  0000                     _T3CON	set	4041
   368  0000                     _TMR3L	set	4039
   369  0000                     _TMR3H	set	4040
   370  0000                     _T3CLK	set	4044
   371  0000                     _T3GATE	set	4043
   372  0000                     _T3GCON	set	4042
   373  0000                     _T1GCONbits	set	4048
   374  0000                     _T1CONbits	set	4047
   375  0000                     _T1CON	set	4047
   376  0000                     _TMR1L	set	4045
   377  0000                     _TMR1H	set	4046
   378  0000                     _T1CLK	set	4050
   379  0000                     _T1GATE	set	4049
   380  0000                     _T1GCON	set	4048
   381  0000                     _PWM4DCL	set	4000
   382  0000                     _PWM4DCH	set	4001
   383  0000                     _PWM4CON	set	4002
   384  0000                     _CCPTMRSbits	set	4014
   385  0000                     _PWM3DCL	set	4003
   386  0000                     _PWM3DCH	set	4004
   387  0000                     _PWM3CON	set	4005
   388  0000                     _INTCONbits	set	4082
   389  0000                     _TRISD	set	3979
   390  0000                     _TRISC	set	3978
   391  0000                     _TRISB	set	3977
   392  0000                     _TRISA	set	3976
   393  0000                     _TRISE	set	3980
   394  0000                     _LATC	set	3973
   395  0000                     _LATB	set	3972
   396  0000                     _LATA	set	3971
   397  0000                     _LATD	set	3974
   398  0000                     _LATE	set	3975
   399  0000                     _PR2	set	4028
   400  0000                     _TMR2	set	4027
   401  0000                     _T2CONbits	set	4029
   402  0000                     _T2RSTbits	set	4032
   403  0000                     _T2HLTbits	set	4030
   404  0000                     _T2CON	set	4029
   405  0000                     _T2TMR	set	4027
   406  0000                     _T2PR	set	4028
   407  0000                     _T2RST	set	4032
   408  0000                     _T2HLT	set	4030
   409  0000                     _T2CLKCON	set	4031
   410                           
   411                           ; #config settings
   412  0000                     
   413                           	psect	cinit
   414  0039A0                     __pcinit:
   415                           	opt stack 0
   416  0039A0                     start_initialization:
   417                           	opt stack 0
   418  0039A0                     __initialization:
   419                           	opt stack 0
   420                           
   421                           ; Clear objects allocated to BANK1 (16 bytes)
   422  0039A0  EE01  F04B         	lfsr	0,__pbssBANK1
   423  0039A4  0E10               	movlw	16
   424  0039A6                     clear_0:
   425  0039A6  6AEE               	clrf	postinc0,c
   426  0039A8  06E8               	decf	wreg,f,c
   427  0039AA  E1FD               	bnz	clear_0
   428                           
   429                           ; Clear objects allocated to BANK0 (45 bytes)
   430  0039AC  EE00  F0AB         	lfsr	0,__pbssBANK0
   431  0039B0  0E2D               	movlw	45
   432  0039B2                     clear_1:
   433  0039B2  6AEE               	clrf	postinc0,c
   434  0039B4  06E8               	decf	wreg,f,c
   435  0039B6  E1FD               	bnz	clear_1
   436                           
   437                           ; Clear objects allocated to COMRAM (2 bytes)
   438  0039B8  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   439  0039BA  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   440  0039BC                     end_of_initialization:
   441                           	opt stack 0
   442  0039BC                     __end_of__initialization:
   443                           	opt stack 0
   444  0039BC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   445  0039BE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   446  0039C0  0100               	movlb	0
   447  0039C2  EF57  F00E         	goto	_main	;jump to C main() function
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           
   451                           	psect	bssCOMRAM
   452  00005D                     __pbssCOMRAM:
   453                           	opt stack 0
   454  00005D                     _bordes:
   455                           	opt stack 0
   456  00005D                     	ds	1
   457  00005E                     _ultimoMovimiento:
   458                           	opt stack 0
   459  00005E                     	ds	1
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           
   463                           	psect	bssBANK0
   464  0000AB                     __pbssBANK0:
   465                           	opt stack 0
   466  0000AB                     _usonic:
   467                           	opt stack 0
   468  0000AB                     	ds	23
   469  0000C2                     _interrupt_flags:
   470                           	opt stack 0
   471  0000C2                     	ds	3
   472  0000C5                     _errno:
   473                           	opt stack 0
   474  0000C5                     	ds	2
   475  0000C7                     _ak:
   476                           	opt stack 0
   477  0000C7                     	ds	2
   478  0000C9                     _getLowestDistanceOnSensors:
   479                           	opt stack 0
   480  0000C9                     	ds	2
   481  0000CB                     _posInicio:
   482                           	opt stack 0
   483  0000CB                     	ds	2
   484  0000CD                     _targetMapDetection_subArrayAvg:
   485                           	opt stack 0
   486  0000CD                     	ds	1
   487  0000CE                     _modoNonStop:
   488                           	opt stack 0
   489  0000CE                     	ds	1
   490  0000CF                     _med_final:
   491                           	opt stack 0
   492  0000CF                     	ds	4
   493  0000D3                     _dist_tacticas_front:
   494                           	opt stack 0
   495  0000D3                     	ds	2
   496  0000D5                     _dist_tacticas_right:
   497                           	opt stack 0
   498  0000D5                     	ds	1
   499  0000D6                     _dist_tacticas_left:
   500                           	opt stack 0
   501  0000D6                     	ds	1
   502  0000D7                     _dist_tacticas_back:
   503                           	opt stack 0
   504  0000D7                     	ds	1
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           
   508                           	psect	bssBANK1
   509  00014B                     __pbssBANK1:
   510                           	opt stack 0
   511  00014B                     _med_right:
   512                           	opt stack 0
   513  00014B                     	ds	4
   514  00014F                     _med_left:
   515                           	opt stack 0
   516  00014F                     	ds	4
   517  000153                     _med_back:
   518                           	opt stack 0
   519  000153                     	ds	4
   520  000157                     _med_front:
   521                           	opt stack 0
   522  000157                     	ds	4
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           
   526                           	psect	cstackBANK1
   527  000100                     __pcstackBANK1:
   528                           	opt stack 0
   529  000100                     ??_TMR3_Initialize:
   530  000100                     ??_TMR1_Initialize:
   531  000100                     ??_TMR0_Initialize:
   532  000100                     ?_TMR0_ReadTimer:
   533                           	opt stack 0
   534  000100                     ?___wmul:
   535                           	opt stack 0
   536  000100                     ?___awdiv:
   537                           	opt stack 0
   538  000100                     ?___ftpack:
   539                           	opt stack 0
   540  000100                     motorDe_set@a:
   541                           	opt stack 0
   542  000100                     motorIz_set@a:
   543                           	opt stack 0
   544  000100                     getClosest@val2:
   545                           	opt stack 0
   546  000100                     usonic_trigger@sensor:
   547                           	opt stack 0
   548  000100                     PWM3_LoadDutyValue@dutyValue:
   549                           	opt stack 0
   550  000100                     PWM4_LoadDutyValue@dutyValue:
   551                           	opt stack 0
   552  000100                     buscar_t_init@med:
   553                           	opt stack 0
   554  000100                     ___wmul@multiplier:
   555                           	opt stack 0
   556  000100                     ___awdiv@dividend:
   557                           	opt stack 0
   558  000100                     IOCBF0_SetInterruptHandler@InterruptHandler:
   559                           	opt stack 0
   560  000100                     IOCBF1_SetInterruptHandler@InterruptHandler:
   561                           	opt stack 0
   562  000100                     IOCBF2_SetInterruptHandler@InterruptHandler:
   563                           	opt stack 0
   564  000100                     IOCBF3_SetInterruptHandler@InterruptHandler:
   565                           	opt stack 0
   566  000100                     TMR1G_SetInterruptHandler@InterruptHandler:
   567                           	opt stack 0
   568  000100                     TMR3G_SetInterruptHandler@InterruptHandler:
   569                           	opt stack 0
   570  000100                     TMR5_SetInterruptHandler@InterruptHandler:
   571                           	opt stack 0
   572  000100                     tactica_elegir@tactica_funcion:
   573                           	opt stack 0
   574  000100                     ___ftpack@arg:
   575                           	opt stack 0
   576                           
   577                           ; 3 bytes @ 0x0
   578  000100                     	ds	1
   579  000101                     ??_atacar:
   580  000101                     getClosest@target:
   581                           	opt stack 0
   582  000101                     getLowestDistanceOnSensors_func@ladoMenor:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x1
   586  000101                     	ds	1
   587  000102                     ??_getClosest:
   588  000102                     ??_PWM3_LoadDutyValue:
   589  000102                     ??_PWM4_LoadDutyValue:
   590  000102                     ??_TMR0_ReadTimer:
   591  000102                     buscar_t_init@sensID:
   592                           	opt stack 0
   593  000102                     ___wmul@multiplicand:
   594                           	opt stack 0
   595  000102                     ___awdiv@divisor:
   596                           	opt stack 0
   597  000102                     getLowestDistanceOnSensors_func@distancias:
   598                           	opt stack 0
   599                           
   600                           ; 4 bytes @ 0x2
   601  000102                     	ds	1
   602  000103                     ??_TMR5_Initialize:
   603  000103                     ___ftpack@exp:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x3
   607  000103                     	ds	1
   608  000104                     atacar@pararAtaque:
   609                           	opt stack 0
   610  000104                     setPwmIz@pwm:
   611                           	opt stack 0
   612  000104                     setPwmDe@pwm:
   613                           	opt stack 0
   614  000104                     ___awdiv@counter:
   615                           	opt stack 0
   616  000104                     ___ftpack@sign:
   617                           	opt stack 0
   618  000104                     TMR0_ReadTimer@readVal:
   619                           	opt stack 0
   620  000104                     ___wmul@product:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x4
   624  000104                     	ds	1
   625  000105                     ??___ftpack:
   626  000105                     ___awdiv@sign:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x5
   630  000105                     	ds	1
   631  000106                     TMR0_ReadTimer@readValLow:
   632                           	opt stack 0
   633  000106                     getLowestDistanceOnSensors_func@smallest_value:
   634                           	opt stack 0
   635  000106                     ___awdiv@quotient:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x6
   639  000106                     	ds	1
   640  000107                     TMR0_ReadTimer@readValHigh:
   641                           	opt stack 0
   642  000107                     getLowestDistanceOnSensors_func@i:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x7
   646  000107                     	ds	1
   647  000108                     ?___lwtoft:
   648                           	opt stack 0
   649  000108                     ___lwtoft@c:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x8
   653  000108                     	ds	3
   654  00010B                     ?___ftdiv:
   655                           	opt stack 0
   656  00010B                     ?___ftmul:
   657                           	opt stack 0
   658  00010B                     getClosest@val1:
   659                           	opt stack 0
   660  00010B                     ___ftdiv@f1:
   661                           	opt stack 0
   662  00010B                     ___ftmul@f1:
   663                           	opt stack 0
   664                           
   665                           ; 3 bytes @ 0xB
   666  00010B                     	ds	1
   667  00010C                     findClosest@arr:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0xC
   671  00010C                     	ds	2
   672  00010E                     findClosest@n:
   673                           	opt stack 0
   674  00010E                     ___ftdiv@f2:
   675                           	opt stack 0
   676  00010E                     ___ftmul@f2:
   677                           	opt stack 0
   678                           
   679                           ; 3 bytes @ 0xE
   680  00010E                     	ds	1
   681  00010F                     findClosest@target:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0xF
   685  00010F                     	ds	1
   686  000110                     ??_findClosest:
   687                           
   688                           ; 1 bytes @ 0x10
   689  000110                     	ds	1
   690  000111                     ??___ftdiv:
   691  000111                     ??___ftmul:
   692                           
   693                           ; 1 bytes @ 0x11
   694  000111                     	ds	3
   695  000114                     ___ftdiv@cntr:
   696                           	opt stack 0
   697  000114                     ___ftmul@exp:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x14
   701  000114                     	ds	1
   702  000115                     ___ftdiv@f3:
   703                           	opt stack 0
   704  000115                     ___ftmul@f3_as_product:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0x15
   708  000115                     	ds	2
   709  000117                     findClosest@a:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x17
   713  000117                     	ds	1
   714  000118                     findClosest@a_2186:
   715                           	opt stack 0
   716  000118                     ___ftdiv@exp:
   717                           	opt stack 0
   718  000118                     ___ftmul@cntr:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x18
   722  000118                     	ds	1
   723  000119                     findClosest@i:
   724                           	opt stack 0
   725  000119                     ___ftdiv@sign:
   726                           	opt stack 0
   727  000119                     ___ftmul@sign:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x19
   731  000119                     	ds	1
   732  00011A                     ?___ftneg:
   733                           	opt stack 0
   734  00011A                     findClosest@j:
   735                           	opt stack 0
   736  00011A                     ___ftneg@f1:
   737                           	opt stack 0
   738                           
   739                           ; 3 bytes @ 0x1A
   740  00011A                     	ds	1
   741  00011B                     findClosest@mid:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x1B
   745  00011B                     	ds	1
   746  00011C                     elegirTactica@distancia:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x1C
   750  00011C                     	ds	1
   751  00011D                     ?___ftadd:
   752                           	opt stack 0
   753  00011D                     elegirTactica@lado:
   754                           	opt stack 0
   755  00011D                     ___ftadd@f1:
   756                           	opt stack 0
   757                           
   758                           ; 3 bytes @ 0x1D
   759  00011D                     	ds	1
   760  00011E                     elegirTactica@certeza:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x1E
   764  00011E                     	ds	2
   765  000120                     ___ftadd@f2:
   766                           	opt stack 0
   767                           
   768                           ; 3 bytes @ 0x20
   769  000120                     	ds	3
   770  000123                     ??___ftadd:
   771                           
   772                           ; 1 bytes @ 0x23
   773  000123                     	ds	3
   774  000126                     ___ftadd@sign:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x26
   778  000126                     	ds	1
   779  000127                     ___ftadd@exp2:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x27
   783  000127                     	ds	1
   784  000128                     ___ftadd@exp1:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x28
   788  000128                     	ds	1
   789  000129                     ?___fttol:
   790                           	opt stack 0
   791  000129                     ___fttol@f1:
   792                           	opt stack 0
   793                           
   794                           ; 3 bytes @ 0x29
   795  000129                     	ds	4
   796  00012D                     ??___fttol:
   797                           
   798                           ; 1 bytes @ 0x2D
   799  00012D                     	ds	5
   800  000132                     ___fttol@sign1:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x32
   804  000132                     	ds	1
   805  000133                     ___fttol@lval:
   806                           	opt stack 0
   807                           
   808                           ; 4 bytes @ 0x33
   809  000133                     	ds	4
   810  000137                     ___fttol@exp1:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x37
   814  000137                     	ds	1
   815  000138                     TMR0_WriteTimer@timerVal:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x38
   819  000138                     	ds	2
   820  00013A                     delayTmr@miliSegundos:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x3A
   824  00013A                     	ds	2
   825  00013C                     ??_delayTmr:
   826                           
   827                           ; 1 bytes @ 0x3C
   828  00013C                     	ds	3
   829  00013F                     ??_buscarEnemigo:
   830  00013F                     marcharAdelanteTiempo@tiempo:
   831                           	opt stack 0
   832  00013F                     marcharAtrasTiempo@tiempo:
   833                           	opt stack 0
   834  00013F                     girarXgradosizquierda@grados:
   835                           	opt stack 0
   836  00013F                     girarXgradosderecha@grados:
   837                           	opt stack 0
   838  00013F                     giroLeveIzquierdaAvanzar@tiempo:
   839                           	opt stack 0
   840  00013F                     giroLeveIzquierdaRetroceder@tiempo:
   841                           	opt stack 0
   842  00013F                     giroLeveDerechaAvanzar@tiempo:
   843                           	opt stack 0
   844  00013F                     giroLeveDerechaRetroceder@tiempo:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x3F
   848  00013F                     	ds	2
   849  000141                     _girarXgradosizquierda$3906:
   850                           	opt stack 0
   851  000141                     _girarXgradosderecha$3907:
   852                           	opt stack 0
   853  000141                     buscarEnemigo@medidas:
   854                           	opt stack 0
   855                           
   856                           ; 4 bytes @ 0x41
   857  000141                     	ds	2
   858  000143                     
   859                           ; 1 bytes @ 0x43
   860  000143                     	ds	2
   861  000145                     buscarEnemigo@precargaTimer:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x45
   865  000145                     	ds	2
   866  000147                     buscarEnemigo@current_milis:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x47
   870  000147                     	ds	2
   871  000149                     buscarEnemigo@i:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x49
   875  000149                     	ds	1
   876  00014A                     ??_main:
   877                           
   878                           ; 1 bytes @ 0x4A
   879  00014A                     	ds	1
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           
   883                           	psect	cstackBANK0
   884  000060                     __pcstackBANK0:
   885                           	opt stack 0
   886  000060                     ?___lwdiv:
   887                           	opt stack 0
   888  000060                     ?i1___ftpack:
   889                           	opt stack 0
   890  000060                     i1usonic_trigger@sensor:
   891                           	opt stack 0
   892  000060                     TMR5_WriteTimer@timerVal:
   893                           	opt stack 0
   894  000060                     ___lwdiv@dividend:
   895                           	opt stack 0
   896  000060                     i1___ftpack@arg:
   897                           	opt stack 0
   898                           
   899                           ; 3 bytes @ 0x0
   900  000060                     	ds	2
   901  000062                     ___lwdiv@divisor:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x2
   905  000062                     	ds	1
   906  000063                     i1___ftpack@exp:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0x3
   910  000063                     	ds	1
   911  000064                     i1___ftpack@sign:
   912                           	opt stack 0
   913  000064                     ___lwdiv@quotient:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x4
   917  000064                     	ds	1
   918  000065                     ??i1___ftpack:
   919                           
   920                           ; 1 bytes @ 0x5
   921  000065                     	ds	1
   922  000066                     ___lwdiv@counter:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x6
   926  000066                     	ds	2
   927  000068                     ?i1___lwtoft:
   928                           	opt stack 0
   929  000068                     i1___lwtoft@c:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x8
   933  000068                     	ds	3
   934  00006B                     ?i1___ftmul:
   935                           	opt stack 0
   936  00006B                     i1___ftmul@f1:
   937                           	opt stack 0
   938                           
   939                           ; 3 bytes @ 0xB
   940  00006B                     	ds	3
   941  00006E                     i1___ftmul@f2:
   942                           	opt stack 0
   943                           
   944                           ; 3 bytes @ 0xE
   945  00006E                     	ds	3
   946  000071                     ??i1___ftmul:
   947                           
   948                           ; 1 bytes @ 0x11
   949  000071                     	ds	3
   950  000074                     i1___ftmul@exp:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x14
   954  000074                     	ds	1
   955  000075                     i1___ftmul@f3_as_product:
   956                           	opt stack 0
   957                           
   958                           ; 3 bytes @ 0x15
   959  000075                     	ds	3
   960  000078                     i1___ftmul@cntr:
   961                           	opt stack 0
   962                           
   963                           ; 1 bytes @ 0x18
   964  000078                     	ds	1
   965  000079                     i1___ftmul@sign:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0x19
   969  000079                     	ds	1
   970  00007A                     ?i1___fttol:
   971                           	opt stack 0
   972  00007A                     i1___fttol@f1:
   973                           	opt stack 0
   974                           
   975                           ; 3 bytes @ 0x1A
   976  00007A                     	ds	4
   977  00007E                     ??i1___fttol:
   978                           
   979                           ; 1 bytes @ 0x1E
   980  00007E                     	ds	5
   981  000083                     i1___fttol@sign1:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x23
   985  000083                     	ds	1
   986  000084                     i1___fttol@lval:
   987                           	opt stack 0
   988                           
   989                           ; 4 bytes @ 0x24
   990  000084                     	ds	4
   991  000088                     i1___fttol@exp1:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x28
   995  000088                     	ds	1
   996  000089                     computarMedicion@anchoPulso:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x29
  1000  000089                     	ds	2
  1001  00008B                     computarMedicion@sensor:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x2B
  1005  00008B                     	ds	1
  1006  00008C                     computarMedicion@distancia:
  1007                           	opt stack 0
  1008                           
  1009                           ; 2 bytes @ 0x2C
  1010  00008C                     	ds	2
  1011  00008E                     computarMedicion@distancia_2493:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x2E
  1015  00008E                     	ds	2
  1016  000090                     computarMedicion@distancia_2494:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0x30
  1020  000090                     	ds	2
  1021  000092                     computarMedicion@distancia_2495:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x32
  1025  000092                     	ds	2
  1026  000094                     ??_tomaRealizadaT1G:
  1027  000094                     ??_tomaRealizadaT3G:
  1028                           
  1029                           ; 1 bytes @ 0x34
  1030  000094                     	ds	1
  1031  000095                     tomaRealizadaT1G@mamado:
  1032                           	opt stack 0
  1033  000095                     tomaRealizadaT3G@mamado:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x35
  1037  000095                     	ds	1
  1038  000096                     ??_INTERRUPT_InterruptManagerLow:
  1039                           
  1040                           ; 1 bytes @ 0x36
  1041  000096                     	ds	21
  1042                           postinc0	equ	0xFEE
  1043                           wreg	equ	0xFE8
  1044                           
  1045                           	psect	cstackCOMRAM
  1046  000001                     __pcstackCOMRAM:
  1047                           	opt stack 0
  1048  000001                     ?_TMR1_ReadTimer:
  1049                           	opt stack 0
  1050  000001                     ?_TMR3_ReadTimer:
  1051                           	opt stack 0
  1052  000001                     ?i2___wmul:
  1053                           	opt stack 0
  1054  000001                     ?i2___ftpack:
  1055                           	opt stack 0
  1056  000001                     i2motorDe_set@a:
  1057                           	opt stack 0
  1058  000001                     i2motorIz_set@a:
  1059                           	opt stack 0
  1060  000001                     TMR1_WriteTimer@timerVal:
  1061                           	opt stack 0
  1062  000001                     TMR3_WriteTimer@timerVal:
  1063                           	opt stack 0
  1064  000001                     i2___wmul@multiplier:
  1065                           	opt stack 0
  1066  000001                     i2___ftpack@arg:
  1067                           	opt stack 0
  1068                           
  1069                           ; 3 bytes @ 0x0
  1070  000001                     	ds	1
  1071  000002                     
  1072                           ; 1 bytes @ 0x1
  1073  000002                     	ds	1
  1074  000003                     ??_TMR1_ReadTimer:
  1075  000003                     ??_TMR3_ReadTimer:
  1076  000003                     i2___wmul@multiplicand:
  1077                           	opt stack 0
  1078                           
  1079                           ; 2 bytes @ 0x2
  1080  000003                     	ds	1
  1081  000004                     i2___ftpack@exp:
  1082                           	opt stack 0
  1083                           
  1084                           ; 1 bytes @ 0x3
  1085  000004                     	ds	1
  1086  000005                     i2___ftpack@sign:
  1087                           	opt stack 0
  1088  000005                     TMR1_ReadTimer@readVal:
  1089                           	opt stack 0
  1090  000005                     TMR3_ReadTimer@readVal:
  1091                           	opt stack 0
  1092  000005                     i2___wmul@product:
  1093                           	opt stack 0
  1094                           
  1095                           ; 2 bytes @ 0x4
  1096  000005                     	ds	1
  1097  000006                     ??i2___ftpack:
  1098                           
  1099                           ; 1 bytes @ 0x5
  1100  000006                     	ds	1
  1101  000007                     TMR1_ReadTimer@readValHigh:
  1102                           	opt stack 0
  1103  000007                     TMR3_ReadTimer@readValHigh:
  1104                           	opt stack 0
  1105                           
  1106                           ; 1 bytes @ 0x6
  1107  000007                     	ds	1
  1108  000008                     TMR1_ReadTimer@readValLow:
  1109                           	opt stack 0
  1110  000008                     TMR3_ReadTimer@readValLow:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x7
  1114  000008                     	ds	1
  1115  000009                     ?i2___lwtoft:
  1116                           	opt stack 0
  1117  000009                     i2___lwtoft@c:
  1118                           	opt stack 0
  1119                           
  1120                           ; 2 bytes @ 0x8
  1121  000009                     	ds	3
  1122  00000C                     ?i2___ftdiv:
  1123                           	opt stack 0
  1124  00000C                     ?i2___ftmul:
  1125                           	opt stack 0
  1126  00000C                     i2___ftdiv@f1:
  1127                           	opt stack 0
  1128  00000C                     i2___ftmul@f1:
  1129                           	opt stack 0
  1130                           
  1131                           ; 3 bytes @ 0xB
  1132  00000C                     	ds	3
  1133  00000F                     i2___ftdiv@f2:
  1134                           	opt stack 0
  1135  00000F                     i2___ftmul@f2:
  1136                           	opt stack 0
  1137                           
  1138                           ; 3 bytes @ 0xE
  1139  00000F                     	ds	3
  1140  000012                     ??i2___ftdiv:
  1141  000012                     ??i2___ftmul:
  1142                           
  1143                           ; 1 bytes @ 0x11
  1144  000012                     	ds	3
  1145  000015                     i2___ftdiv@cntr:
  1146                           	opt stack 0
  1147  000015                     i2___ftmul@exp:
  1148                           	opt stack 0
  1149                           
  1150                           ; 1 bytes @ 0x14
  1151  000015                     	ds	1
  1152  000016                     i2___ftdiv@f3:
  1153                           	opt stack 0
  1154  000016                     i2___ftmul@f3_as_product:
  1155                           	opt stack 0
  1156                           
  1157                           ; 3 bytes @ 0x15
  1158  000016                     	ds	3
  1159  000019                     i2___ftdiv@exp:
  1160                           	opt stack 0
  1161  000019                     i2___ftmul@cntr:
  1162                           	opt stack 0
  1163                           
  1164                           ; 1 bytes @ 0x18
  1165  000019                     	ds	1
  1166  00001A                     i2___ftdiv@sign:
  1167                           	opt stack 0
  1168  00001A                     i2___ftmul@sign:
  1169                           	opt stack 0
  1170                           
  1171                           ; 1 bytes @ 0x19
  1172  00001A                     	ds	1
  1173  00001B                     ?i2___ftneg:
  1174                           	opt stack 0
  1175  00001B                     i2___ftneg@f1:
  1176                           	opt stack 0
  1177                           
  1178                           ; 3 bytes @ 0x1A
  1179  00001B                     	ds	3
  1180  00001E                     ?i2___ftadd:
  1181                           	opt stack 0
  1182  00001E                     i2___ftadd@f1:
  1183                           	opt stack 0
  1184                           
  1185                           ; 3 bytes @ 0x1D
  1186  00001E                     	ds	3
  1187  000021                     i2___ftadd@f2:
  1188                           	opt stack 0
  1189                           
  1190                           ; 3 bytes @ 0x20
  1191  000021                     	ds	3
  1192  000024                     ??i2___ftadd:
  1193                           
  1194                           ; 1 bytes @ 0x23
  1195  000024                     	ds	3
  1196  000027                     i2___ftadd@sign:
  1197                           	opt stack 0
  1198                           
  1199                           ; 1 bytes @ 0x26
  1200  000027                     	ds	1
  1201  000028                     i2___ftadd@exp2:
  1202                           	opt stack 0
  1203                           
  1204                           ; 1 bytes @ 0x27
  1205  000028                     	ds	1
  1206  000029                     i2___ftadd@exp1:
  1207                           	opt stack 0
  1208                           
  1209                           ; 1 bytes @ 0x28
  1210  000029                     	ds	1
  1211  00002A                     ?i2___fttol:
  1212                           	opt stack 0
  1213  00002A                     i2___fttol@f1:
  1214                           	opt stack 0
  1215                           
  1216                           ; 3 bytes @ 0x29
  1217  00002A                     	ds	4
  1218  00002E                     ??i2___fttol:
  1219                           
  1220                           ; 1 bytes @ 0x2D
  1221  00002E                     	ds	5
  1222  000033                     i2___fttol@sign1:
  1223                           	opt stack 0
  1224                           
  1225                           ; 1 bytes @ 0x32
  1226  000033                     	ds	1
  1227  000034                     i2___fttol@lval:
  1228                           	opt stack 0
  1229                           
  1230                           ; 4 bytes @ 0x33
  1231  000034                     	ds	4
  1232  000038                     i2___fttol@exp1:
  1233                           	opt stack 0
  1234                           
  1235                           ; 1 bytes @ 0x37
  1236  000038                     	ds	1
  1237  000039                     i2TMR0_WriteTimer@timerVal:
  1238                           	opt stack 0
  1239                           
  1240                           ; 2 bytes @ 0x38
  1241  000039                     	ds	2
  1242  00003B                     i2delayTmr@miliSegundos:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x3A
  1246  00003B                     	ds	2
  1247  00003D                     ??i2_delayTmr:
  1248                           
  1249                           ; 1 bytes @ 0x3C
  1250  00003D                     	ds	3
  1251  000040                     i2marcharAdelanteTiempo@tiempo:
  1252                           	opt stack 0
  1253  000040                     i2marcharAtrasTiempo@tiempo:
  1254                           	opt stack 0
  1255  000040                     i2girarXgradosizquierda@grados:
  1256                           	opt stack 0
  1257  000040                     i2girarXgradosderecha@grados:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x3F
  1261  000040                     	ds	2
  1262  000042                     i2_girarXgradosizquierda$4083:
  1263                           	opt stack 0
  1264  000042                     i2_girarXgradosderecha$4084:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x41
  1268  000042                     	ds	2
  1269  000044                     ??_borde_detectado:
  1270  000044                     
  1271                           ; 1 bytes @ 0x43
  1272  000044                     	ds	6
  1273  00004A                     ??_borde_isr:
  1274                           
  1275                           ; 1 bytes @ 0x49
  1276  00004A                     	ds	1
  1277  00004B                     ??_INTERRUPT_InterruptManagerHigh:
  1278                           
  1279                           ; 1 bytes @ 0x4A
  1280  00004B                     	ds	18
  1281                           postinc0	equ	0xFEE
  1282                           wreg	equ	0xFE8
  1283                           
  1284 ;;
  1285 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1286 ;;
  1287 ;; *************** function _main *****************
  1288 ;; Defined at:
  1289 ;;		line 5 in file "main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1305 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1306 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1307 ;;Total ram usage:        1 bytes
  1308 ;; Hardware stack levels required when called:   24
  1309 ;; This function calls:
  1310 ;;		_SYSTEM_Initialize
  1311 ;;		_TMR0_HasOverflowOccured
  1312 ;;		_TMR0_ReadTimer
  1313 ;;		_TMR0_Reload
  1314 ;;		_TMR0_StartTimer
  1315 ;;		_TMR0_StopTimer
  1316 ;;		_TMR0_WriteTimer
  1317 ;;		_atacar
  1318 ;;		_buscarEnemigo
  1319 ;;		_detectarPosInicio
  1320 ;;		_drv_cny70_init
  1321 ;;		_elegirTactica
  1322 ;;		_marcharAdelanteTiempo
  1323 ;;		_tactica_ejecutar
  1324 ;;		_tacticas_init
  1325 ;;		_usonic_init
  1326 ;; This function is called by:
  1327 ;;		Startup code after reset
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text0
  1332  001CAE                     __ptext0:
  1333                           	opt stack 0
  1334  001CAE                     _main:
  1335                           	opt stack 7
  1336                           
  1337                           ;main.c: 8: SYSTEM_Initialize();
  1338                           
  1339                           ;incstack = 0
  1340  001CAE  ECE8  F01B         	call	_SYSTEM_Initialize	;wreg free
  1341                           
  1342                           ;main.c: 9: TMR0_StopTimer();
  1343  001CB2  EC53  F01F         	call	_TMR0_StopTimer	;wreg free
  1344                           
  1345                           ;main.c: 10: TMR0_WriteTimer(60196U);
  1346  001CB6  0EEB               	movlw	235
  1347  001CB8  0101               	movlb	1	; () banked
  1348  001CBA  6F39               	movwf	(TMR0_WriteTimer@timerVal+1)& (0+255),b
  1349  001CBC  0E24               	movlw	36
  1350  001CBE  6F38               	movwf	TMR0_WriteTimer@timerVal& (0+255),b
  1351  001CC0  EC38  F01F         	call	_TMR0_WriteTimer	;wreg free
  1352                           
  1353                           ;main.c: 11: TMR0_StartTimer();
  1354  001CC4  EC55  F01F         	call	_TMR0_StartTimer	;wreg free
  1355                           
  1356                           ;main.c: 13: interrupt_flags.mediciones_en_peligro_b = 0;
  1357  001CC8  0EF3               	movlw	-13
  1358  001CCA  0100               	movlb	0	; () banked
  1359  001CCC  17C2               	andwf	_interrupt_flags& (0+255),f,b	;volatile
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;main.c: 14: interrupt_flags.mediciones_en_peligro_f = 0;
  1363  001CCE  0EFC               	movlw	-4
  1364  001CD0  17C2               	andwf	_interrupt_flags& (0+255),f,b	;volatile
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;main.c: 15: interrupt_flags.mediciones_en_peligro_l = 0;
  1368  001CD2  0ECF               	movlw	-49
  1369  001CD4  17C2               	andwf	_interrupt_flags& (0+255),f,b	;volatile
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;main.c: 16: interrupt_flags.mediciones_en_peligro_r = 0;
  1373  001CD6  0E3F               	movlw	-193
  1374  001CD8  17C2               	andwf	_interrupt_flags& (0+255),f,b	;volatile
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;main.c: 18: interrupt_flags.detector_activado = 0;
  1378  001CDA  91C4               	bcf	(_interrupt_flags+2)& (0+255),0,b	;volatile
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;main.c: 19: interrupt_flags.robot_en_peligro = 0;
  1382  001CDC  93C4               	bcf	(_interrupt_flags+2)& (0+255),1,b	;volatile
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main.c: 21: interrupt_flags.borde_activado = 0;
  1386  001CDE  97C4               	bcf	(_interrupt_flags+2)& (0+255),3,b	;volatile
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;main.c: 22: interrupt_flags.borde_detectado = 0;
  1390  001CE0  95C4               	bcf	(_interrupt_flags+2)& (0+255),2,b	;volatile
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;main.c: 24: interrupt_flags.int_delay_activado = 0;
  1394  001CE2  99C4               	bcf	(_interrupt_flags+2)& (0+255),4,b	;volatile
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;main.c: 26: interrupt_flags.sentidoBusqueda = 0;
  1398  001CE4  9BC4               	bcf	(_interrupt_flags+2)& (0+255),5,b	;volatile
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;main.c: 28: tacticas_init();
  1402  001CE6  EC2B  F01C         	call	_tacticas_init	;wreg free
  1403                           
  1404                           ;main.c: 29: usonic_init();
  1405  001CEA  ECF6  F013         	call	_usonic_init	;wreg free
  1406                           
  1407                           ;main.c: 30: drv_cny70_init();
  1408  001CEE  ECAD  F019         	call	_drv_cny70_init	;wreg free
  1409                           
  1410                           ;main.c: 34: (INTCONbits.GIEH = 1);
  1411  001CF2  8EF2               	bsf	intcon,7,c	;volatile
  1412                           
  1413                           ;main.c: 35: (INTCONbits.GIEL = 1);
  1414  001CF4  8CF2               	bsf	intcon,6,c	;volatile
  1415                           
  1416                           ;main.c: 36: (INTCONbits.PEIE = 1);
  1417  001CF6  8CF2               	bsf	intcon,6,c	;volatile
  1418  001CF8  0100               	movlb	0	; () banked
  1419  001CFA  51AD               	movf	(_usonic+2)& (0+255),w,b	;volatile
  1420  001CFC  B4D8               	btfsc	status,2,c
  1421  001CFE  D7FC               	goto	l671
  1422                           
  1423                           ; BSR set to: 0
  1424  001D00  51AE               	movf	(_usonic+3)& (0+255),w,b	;volatile
  1425  001D02  B4D8               	btfsc	status,2,c
  1426  001D04  D7F9               	goto	l671
  1427                           
  1428                           ; BSR set to: 0
  1429  001D06  51AB               	movf	_usonic& (0+255),w,b	;volatile
  1430  001D08  B4D8               	btfsc	status,2,c
  1431  001D0A  D7F6               	goto	l671
  1432                           
  1433                           ; BSR set to: 0
  1434  001D0C  51AC               	movf	(_usonic+1)& (0+255),w,b	;volatile
  1435  001D0E  A4D8               	btfss	status,2,c
  1436  001D10  D010               	goto	l673
  1437  001D12  D7F2               	goto	l671
  1438  001D14                     
  1439                           ;main.c: 46: {
  1440                           ;main.c: 47: PORTDbits.RD5 = ~PORTBbits.RB5;
  1441                           
  1442                           ; BSR set to: 0
  1443  001D14  AA8E               	btfss	3982,5,c	;volatile
  1444  001D16  D002               	goto	u8780
  1445  001D18  0E01               	movlw	1
  1446  001D1A  D001               	goto	u8786
  1447  001D1C                     u8780:
  1448  001D1C  0E00               	movlw	0
  1449  001D1E                     u8786:
  1450  001D1E  0AFF               	xorlw	255
  1451  001D20  0101               	movlb	1	; () banked
  1452  001D22  6F4A               	movwf	??_main& (0+255),b
  1453  001D24  3B4A               	swapf	??_main& (0+255),f,b
  1454  001D26  474A               	rlncf	??_main& (0+255),f,b
  1455  001D28  5090               	movf	3984,w,c	;volatile
  1456  001D2A  194A               	xorwf	??_main& (0+255),w,b
  1457  001D2C  0BDF               	andlw	-33
  1458  001D2E  194A               	xorwf	??_main& (0+255),w,b
  1459  001D30  6E90               	movwf	3984,c	;volatile
  1460  001D32                     l673:
  1461                           
  1462                           ; BSR set to: 1
  1463  001D32  ECAF  F01D         	call	_TMR0_ReadTimer	;wreg free
  1464  001D36  0101               	movlb	1	; () banked
  1465  001D38  0500               	decf	?_TMR0_ReadTimer& (0+255),w,b
  1466  001D3A  0EFA               	movlw	250
  1467  001D3C  5901               	subwfb	(?_TMR0_ReadTimer+1)& (0+255),w,b
  1468  001D3E  A0D8               	btfss	status,0,c
  1469  001D40  D7E9               	goto	l674
  1470                           
  1471                           ; BSR set to: 1
  1472                           ;main.c: 48: }
  1473                           ;main.c: 50: detectarPosInicio();
  1474                           
  1475                           ; BSR set to: 1
  1476  001D42  ECD6  F01E         	call	_detectarPosInicio	;wreg free
  1477                           
  1478                           ;main.c: 52: elegirTactica(posInicio.lado, posInicio.distancia);
  1479  001D46  C0CB  F11C         	movff	_posInicio,elegirTactica@distancia
  1480  001D4A  0100               	movlb	0	; () banked
  1481  001D4C  51CC               	movf	(_posInicio+1)& (0+255),w,b
  1482  001D4E  ECC7  F00D         	call	_elegirTactica
  1483  001D52  ECE4  F01E         	call	_TMR0_HasOverflowOccured	;wreg free
  1484  001D56  0900               	iorlw	0
  1485  001D58  B4D8               	btfsc	status,2,c
  1486  001D5A  D7FB               	goto	l677
  1487                           
  1488                           ;main.c: 56: PIR0bits.TMR0IF = 0;
  1489  001D5C  010E               	movlb	14	; () banked
  1490  001D5E  9BCA               	bcf	202,5,b	;volatile
  1491                           
  1492                           ; BSR set to: 14
  1493                           ;main.c: 57: TMR0_StopTimer();
  1494  001D60  EC53  F01F         	call	_TMR0_StopTimer	;wreg free
  1495                           
  1496                           ;main.c: 58: TMR0_Reload();
  1497  001D64  EC3E  F01F         	call	_TMR0_Reload	;wreg free
  1498                           
  1499                           ;main.c: 62: interrupt_flags.borde_activado = 1;
  1500  001D68  0100               	movlb	0	; () banked
  1501  001D6A  87C4               	bsf	(_interrupt_flags+2)& (0+255),3,b	;volatile
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;main.c: 63: interrupt_flags.borde_detectado = 0;
  1505  001D6C  95C4               	bcf	(_interrupt_flags+2)& (0+255),2,b	;volatile
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;main.c: 65: if (PORTBbits.RB5 == 0)
  1509  001D6E  BA8E               	btfsc	3982,5,c	;volatile
  1510  001D70  D003               	goto	l679
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;main.c: 66: tactica_ejecutar();
  1514  001D72  EC55  F01D         	call	_tactica_ejecutar	;wreg free
  1515  001D76  D001               	goto	l680
  1516  001D78                     l679:
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;main.c: 67: else
  1520                           ;main.c: 68: interrupt_flags.manualOverride = 1;
  1521  001D78  8DC4               	bsf	(_interrupt_flags+2)& (0+255),6,b	;volatile
  1522  001D7A                     l680:
  1523                           
  1524                           ;main.c: 70: interrupt_flags.borde_detectado = 0;
  1525  001D7A  0100               	movlb	0	; () banked
  1526  001D7C  95C4               	bcf	(_interrupt_flags+2)& (0+255),2,b	;volatile
  1527  001D7E                     
  1528                           ;main.c: 73: {
  1529                           ;main.c: 74: if (usonic.distancia.front < 20)
  1530                           
  1531                           ; BSR set to: 0
  1532  001D7E  0E14               	movlw	20
  1533  001D80  0100               	movlb	0	; () banked
  1534  001D82  61AD               	cpfslt	(_usonic+2)& (0+255),b	;volatile
  1535  001D84  D005               	goto	l682
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;main.c: 75: {
  1539                           ;main.c: 76: modoNonStop = 1;
  1540  001D86  0E01               	movlw	1
  1541  001D88  6FCE               	movwf	_modoNonStop& (0+255),b
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;main.c: 77: atacar();
  1545  001D8A  ECC0  F016         	call	_atacar	;wreg free
  1546                           
  1547                           ;main.c: 78: } else
  1548  001D8E  D7F7               	goto	l681
  1549  001D90                     l682:
  1550                           
  1551                           ;main.c: 79: {
  1552                           ;main.c: 80: if (buscarEnemigo())
  1553  001D90  EC9E  F007         	call	_buscarEnemigo	;wreg free
  1554  001D94  0900               	iorlw	0
  1555  001D96  B4D8               	btfsc	status,2,c
  1556  001D98  D008               	goto	l684
  1557                           
  1558                           ;main.c: 81: {
  1559                           ;main.c: 82: med_final.distMin += 30;
  1560  001D9A  0E1E               	movlw	30
  1561  001D9C  0100               	movlb	0	; () banked
  1562  001D9E  27D1               	addwf	(_med_final+2)& (0+255),f,b
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;main.c: 83: modoNonStop = 0;
  1566  001DA0  0E00               	movlw	0
  1567  001DA2  6FCE               	movwf	_modoNonStop& (0+255),b
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 84: atacar();
  1571  001DA4  ECC0  F016         	call	_atacar	;wreg free
  1572                           
  1573                           ;main.c: 85: } else
  1574  001DA8  D7EA               	goto	l681
  1575  001DAA                     l684:
  1576                           
  1577                           ;main.c: 86: {
  1578                           ;main.c: 87: marcharAdelanteTiempo(3000U);
  1579  001DAA  0E0B               	movlw	11
  1580  001DAC  0101               	movlb	1	; () banked
  1581  001DAE  6F40               	movwf	(marcharAdelanteTiempo@tiempo+1)& (0+255),b
  1582  001DB0  0EB8               	movlw	184
  1583  001DB2  6F3F               	movwf	marcharAdelanteTiempo@tiempo& (0+255),b
  1584  001DB4  ECE3  F01C         	call	_marcharAdelanteTiempo	;wreg free
  1585  001DB8  D7E2               	goto	l681
  1586  001DBA                     __end_of_main:
  1587                           	opt stack 0
  1588                           intcon	equ	0xFF2
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           status	equ	0xFD8
  1592                           
  1593 ;; *************** function _usonic_init *****************
  1594 ;; Defined at:
  1595 ;;		line 14 in file "drv_ultrasonicos.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:   19
  1616 ;; This function calls:
  1617 ;;		_TMR1G_SetInterruptHandler
  1618 ;;		_TMR1_StartSinglePulseAcquisition
  1619 ;;		_TMR3G_SetInterruptHandler
  1620 ;;		_TMR3_StartSinglePulseAcquisition
  1621 ;;		_TMR5_SetInterruptHandler
  1622 ;;		_usonic_trigger
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text1
  1629  0027EC                     __ptext1:
  1630                           	opt stack 0
  1631  0027EC                     _usonic_init:
  1632                           	opt stack 11
  1633                           
  1634                           ;drv_ultrasonicos.c: 16: usonic.flags.modoT1G = 0;
  1635                           
  1636                           ;incstack = 0
  1637  0027EC  0100               	movlb	0	; () banked
  1638  0027EE  95BB               	bcf	(_usonic+16)& (0+255),2,b	;volatile
  1639                           
  1640                           ;drv_ultrasonicos.c: 17: usonic.flags.modoT3G = 0;
  1641  0027F0  97BB               	bcf	(_usonic+16)& (0+255),3,b	;volatile
  1642                           
  1643                           ;drv_ultrasonicos.c: 18: usonic.flags.pulsoCapturadoT1G = 0;
  1644  0027F2  91BB               	bcf	(_usonic+16)& (0+255),0,b	;volatile
  1645                           
  1646                           ;drv_ultrasonicos.c: 19: usonic.flags.pulsoCapturadoT3G = 0;
  1647  0027F4  93BB               	bcf	(_usonic+16)& (0+255),1,b	;volatile
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;drv_ultrasonicos.c: 20: usonic.mamometroT1G = 0;
  1651  0027F6  0E00               	movlw	0
  1652  0027F8  6FC0               	movwf	(_usonic+21)& (0+255),b	;volatile
  1653                           
  1654                           ;drv_ultrasonicos.c: 21: usonic.mamometroT3G = 0;
  1655  0027FA  0E00               	movlw	0
  1656  0027FC  6FC1               	movwf	(_usonic+22)& (0+255),b	;volatile
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;drv_ultrasonicos.c: 22: usonic.flags.T1Gmamado = 0;
  1660  0027FE  99BB               	bcf	(_usonic+16)& (0+255),4,b	;volatile
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;drv_ultrasonicos.c: 23: usonic.flags.T3Gmamado = 0;
  1664  002800  9BBB               	bcf	(_usonic+16)& (0+255),5,b	;volatile
  1665                           
  1666                           ;drv_ultrasonicos.c: 24: usonic.pulsoCapturadoT1G = 0;
  1667  002802  0E00               	movlw	0
  1668  002804  6FBD               	movwf	(_usonic+18)& (0+255),b	;volatile
  1669  002806  0E00               	movlw	0
  1670  002808  6FBC               	movwf	(_usonic+17)& (0+255),b	;volatile
  1671                           
  1672                           ;drv_ultrasonicos.c: 25: usonic.pulsoCapturadoT3G = 0;
  1673  00280A  0E00               	movlw	0
  1674  00280C  6FBF               	movwf	(_usonic+20)& (0+255),b	;volatile
  1675  00280E  0E00               	movlw	0
  1676  002810  6FBE               	movwf	(_usonic+19)& (0+255),b	;volatile
  1677                           
  1678                           ;drv_ultrasonicos.c: 27: usonic.distancia.front = 0;
  1679  002812  0E00               	movlw	0
  1680  002814  6FAD               	movwf	(_usonic+2)& (0+255),b	;volatile
  1681                           
  1682                           ;drv_ultrasonicos.c: 28: usonic.distancia.back = 0;
  1683  002816  0E00               	movlw	0
  1684  002818  6FAE               	movwf	(_usonic+3)& (0+255),b	;volatile
  1685                           
  1686                           ;drv_ultrasonicos.c: 29: usonic.distancia.left = 0;
  1687  00281A  0E00               	movlw	0
  1688  00281C  6FAB               	movwf	_usonic& (0+255),b	;volatile
  1689                           
  1690                           ;drv_ultrasonicos.c: 30: usonic.distancia.right = 0;
  1691  00281E  0E00               	movlw	0
  1692  002820  6FAC               	movwf	(_usonic+1)& (0+255),b	;volatile
  1693                           
  1694                           ;drv_ultrasonicos.c: 31: usonic.numMuestra.front = 0;
  1695  002822  0E00               	movlw	0
  1696  002824  6FB1               	movwf	(_usonic+6)& (0+255),b	;volatile
  1697                           
  1698                           ;drv_ultrasonicos.c: 32: usonic.numMuestra.back = 0;
  1699  002826  0E00               	movlw	0
  1700  002828  6FB2               	movwf	(_usonic+7)& (0+255),b	;volatile
  1701                           
  1702                           ;drv_ultrasonicos.c: 33: usonic.numMuestra.left = 0;
  1703  00282A  0E00               	movlw	0
  1704  00282C  6FAF               	movwf	(_usonic+4)& (0+255),b	;volatile
  1705                           
  1706                           ;drv_ultrasonicos.c: 34: usonic.numMuestra.right = 0;
  1707  00282E  0E00               	movlw	0
  1708  002830  6FB0               	movwf	(_usonic+5)& (0+255),b	;volatile
  1709                           
  1710                           ;drv_ultrasonicos.c: 35: usonic.promedio.front = 0;
  1711  002832  0E00               	movlw	0
  1712  002834  6FB8               	movwf	(_usonic+13)& (0+255),b	;volatile
  1713  002836  0E00               	movlw	0
  1714  002838  6FB7               	movwf	(_usonic+12)& (0+255),b	;volatile
  1715                           
  1716                           ;drv_ultrasonicos.c: 36: usonic.promedio.back = 0;
  1717  00283A  0E00               	movlw	0
  1718  00283C  6FBA               	movwf	(_usonic+15)& (0+255),b	;volatile
  1719  00283E  0E00               	movlw	0
  1720  002840  6FB9               	movwf	(_usonic+14)& (0+255),b	;volatile
  1721                           
  1722                           ;drv_ultrasonicos.c: 37: usonic.promedio.left = 0;
  1723  002842  0E00               	movlw	0
  1724  002844  6FB4               	movwf	(_usonic+9)& (0+255),b	;volatile
  1725  002846  0E00               	movlw	0
  1726  002848  6FB3               	movwf	(_usonic+8)& (0+255),b	;volatile
  1727                           
  1728                           ;drv_ultrasonicos.c: 38: usonic.promedio.right = 0;
  1729  00284A  0E00               	movlw	0
  1730  00284C  6FB6               	movwf	(_usonic+11)& (0+255),b	;volatile
  1731  00284E  0E00               	movlw	0
  1732  002850  6FB5               	movwf	(_usonic+10)& (0+255),b	;volatile
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;drv_ultrasonicos.c: 40: TMR5_SetInterruptHandler(usonic_tick);
  1736  002852  0E9A               	movlw	low _usonic_tick
  1737  002854  0101               	movlb	1	; () banked
  1738  002856  6F00               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
  1739  002858  0E2E               	movlw	high _usonic_tick
  1740  00285A  6F01               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1741  00285C  0E00               	movlw	low (_usonic_tick shr (0+16))
  1742  00285E  6F02               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  1743  002860  ECEB  F01E         	call	_TMR5_SetInterruptHandler	;wreg free
  1744                           
  1745                           ;drv_ultrasonicos.c: 41: TMR1G_SetInterruptHandler(pulsoCapturadoTimer1);
  1746  002864  0E00               	movlw	low _pulsoCapturadoTimer1
  1747  002866  0101               	movlb	1	; () banked
  1748  002868  6F00               	movwf	TMR1G_SetInterruptHandler@InterruptHandler& (0+255),b
  1749  00286A  0E3D               	movlw	high _pulsoCapturadoTimer1
  1750  00286C  6F01               	movwf	(TMR1G_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1751  00286E  0E00               	movlw	low (_pulsoCapturadoTimer1 shr (0+16))
  1752  002870  6F02               	movwf	(TMR1G_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  1753  002872  ECC8  F01E         	call	_TMR1G_SetInterruptHandler	;wreg free
  1754                           
  1755                           ;drv_ultrasonicos.c: 42: TMR3G_SetInterruptHandler(pulsoCapturadoTimer3);
  1756  002876  0EEA               	movlw	low _pulsoCapturadoTimer3
  1757  002878  0101               	movlb	1	; () banked
  1758  00287A  6F00               	movwf	TMR3G_SetInterruptHandler@InterruptHandler& (0+255),b
  1759  00287C  0E3C               	movlw	high _pulsoCapturadoTimer3
  1760  00287E  6F01               	movwf	(TMR3G_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1761  002880  0E00               	movlw	low (_pulsoCapturadoTimer3 shr (0+16))
  1762  002882  6F02               	movwf	(TMR3G_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  1763  002884  ECC1  F01E         	call	_TMR3G_SetInterruptHandler	;wreg free
  1764                           
  1765                           ;drv_ultrasonicos.c: 44: T1GPPSbits.T1GPPS = 0x12;
  1766  002888  010E               	movlb	14	; () banked
  1767  00288A  91A6               	bcf	166,0,b	;volatile
  1768  00288C  83A6               	bsf	166,1,b	;volatile
  1769  00288E  95A6               	bcf	166,2,b	;volatile
  1770  002890  97A6               	bcf	166,3,b	;volatile
  1771  002892  89A6               	bsf	166,4,b	;volatile
  1772                           
  1773                           ; BSR set to: 14
  1774                           ;drv_ultrasonicos.c: 45: T3GPPSbits.T3GPPS = 0x16;
  1775  002894  91A8               	bcf	168,0,b	;volatile
  1776  002896  83A8               	bsf	168,1,b	;volatile
  1777  002898  85A8               	bsf	168,2,b	;volatile
  1778  00289A  97A8               	bcf	168,3,b	;volatile
  1779  00289C  89A8               	bsf	168,4,b	;volatile
  1780                           
  1781                           ; BSR set to: 14
  1782                           ;drv_ultrasonicos.c: 47: usonic_trigger(0);
  1783  00289E  0E00               	movlw	0
  1784  0028A0  ECCF  F018         	call	_usonic_trigger
  1785                           
  1786                           ;drv_ultrasonicos.c: 48: TMR1_StartSinglePulseAcquisition();
  1787  0028A4  EC51  F01F         	call	_TMR1_StartSinglePulseAcquisition	;wreg free
  1788                           
  1789                           ;drv_ultrasonicos.c: 49: usonic_trigger(2);
  1790  0028A8  0E02               	movlw	2
  1791  0028AA  ECCF  F018         	call	_usonic_trigger
  1792                           
  1793                           ;drv_ultrasonicos.c: 50: TMR3_StartSinglePulseAcquisition();
  1794  0028AE  EC4F  F01F         	call	_TMR3_StartSinglePulseAcquisition	;wreg free
  1795  0028B2  0012               	return		;funcret
  1796  0028B4                     __end_of_usonic_init:
  1797                           	opt stack 0
  1798                           intcon	equ	0xFF2
  1799                           postinc0	equ	0xFEE
  1800                           wreg	equ	0xFE8
  1801                           status	equ	0xFD8
  1802                           
  1803 ;; *************** function _usonic_trigger *****************
  1804 ;; Defined at:
  1805 ;;		line 230 in file "drv_ultrasonicos.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  sensor          1    wreg     unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  sensor          1    0[BANK1 ] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;Total ram usage:        1 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:   18
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_usonic_init
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text2
  1834  00319E                     __ptext2:
  1835                           	opt stack 0
  1836  00319E                     _usonic_trigger:
  1837                           	opt stack 11
  1838                           
  1839                           ;incstack = 0
  1840                           ;usonic_trigger@sensor stored from wreg
  1841  00319E  0101               	movlb	1	; () banked
  1842  0031A0  6F00               	movwf	usonic_trigger@sensor& (0+255),b
  1843                           
  1844                           ;drv_ultrasonicos.c: 232: switch (sensor)
  1845  0031A2  D01C               	goto	l1133
  1846  0031A4                     
  1847                           ;drv_ultrasonicos.c: 235: do { LATDbits.LATD1 = 1; } while(0);
  1848  0031A4  8286               	bsf	3974,1,c	;volatile
  1849                           
  1850                           ;drv_ultrasonicos.c: 236: _delay((unsigned long)((10)*(32000000/4000000.0)));
  1851  0031A6  0E1A               	movlw	26
  1852  0031A8                     u8847:
  1853  0031A8  2EE8               	decfsz	wreg,f,c
  1854  0031AA  D7FE               	bra	u8847
  1855  0031AC  D000               	nop2	
  1856                           
  1857                           ;drv_ultrasonicos.c: 237: do { LATDbits.LATD1 = 0; } while(0);
  1858  0031AE  9286               	bcf	3974,1,c	;volatile
  1859                           
  1860                           ;drv_ultrasonicos.c: 238: break;
  1861  0031B0  0012               	return	
  1862  0031B2                     
  1863                           ;drv_ultrasonicos.c: 240: do { LATDbits.LATD0 = 1; } while(0);
  1864  0031B2  8086               	bsf	3974,0,c	;volatile
  1865                           
  1866                           ;drv_ultrasonicos.c: 241: _delay((unsigned long)((10)*(32000000/4000000.0)));
  1867  0031B4  0E1A               	movlw	26
  1868  0031B6                     u8857:
  1869  0031B6  2EE8               	decfsz	wreg,f,c
  1870  0031B8  D7FE               	bra	u8857
  1871  0031BA  D000               	nop2	
  1872                           
  1873                           ;drv_ultrasonicos.c: 242: do { LATDbits.LATD0 = 0; } while(0);
  1874  0031BC  9086               	bcf	3974,0,c	;volatile
  1875                           
  1876                           ;drv_ultrasonicos.c: 243: break;
  1877  0031BE  0012               	return	
  1878  0031C0                     
  1879                           ;drv_ultrasonicos.c: 245: do { LATDbits.LATD2 = 1; } while(0);
  1880  0031C0  8486               	bsf	3974,2,c	;volatile
  1881                           
  1882                           ;drv_ultrasonicos.c: 246: _delay((unsigned long)((10)*(32000000/4000000.0)));
  1883  0031C2  0E1A               	movlw	26
  1884  0031C4                     u8867:
  1885  0031C4  2EE8               	decfsz	wreg,f,c
  1886  0031C6  D7FE               	bra	u8867
  1887  0031C8  D000               	nop2	
  1888                           
  1889                           ;drv_ultrasonicos.c: 247: do { LATDbits.LATD2 = 0; } while(0);
  1890  0031CA  9486               	bcf	3974,2,c	;volatile
  1891                           
  1892                           ;drv_ultrasonicos.c: 248: break;
  1893  0031CC  0012               	return	
  1894  0031CE                     
  1895                           ;drv_ultrasonicos.c: 250: do { LATDbits.LATD3 = 1; } while(0);
  1896  0031CE  8686               	bsf	3974,3,c	;volatile
  1897                           
  1898                           ;drv_ultrasonicos.c: 251: _delay((unsigned long)((10)*(32000000/4000000.0)));
  1899  0031D0  0E1A               	movlw	26
  1900  0031D2                     u8877:
  1901  0031D2  2EE8               	decfsz	wreg,f,c
  1902  0031D4  D7FE               	bra	u8877
  1903  0031D6  D000               	nop2	
  1904                           
  1905                           ;drv_ultrasonicos.c: 252: do { LATDbits.LATD3 = 0; } while(0);
  1906  0031D8  9686               	bcf	3974,3,c	;volatile
  1907                           
  1908                           ;drv_ultrasonicos.c: 254: }
  1909                           
  1910                           ;drv_ultrasonicos.c: 253: break;
  1911  0031DA  0012               	return	
  1912  0031DC                     l1133:
  1913  0031DC  0101               	movlb	1	; () banked
  1914  0031DE  5100               	movf	usonic_trigger@sensor& (0+255),w,b
  1915                           
  1916                           ; Switch size 1, requested type "space"
  1917                           ; Number of cases is 4, Range of values is 0 to 3
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte           13     7 (average)
  1921                           ;	Chosen strategy is simple_byte
  1922  0031E0  0A00               	xorlw	0	; case 0
  1923  0031E2  B4D8               	btfsc	status,2,c
  1924  0031E4  D7DF               	goto	l1134
  1925  0031E6  0A01               	xorlw	1	; case 1
  1926  0031E8  B4D8               	btfsc	status,2,c
  1927  0031EA  D7E3               	goto	l1140
  1928  0031EC  0A03               	xorlw	3	; case 2
  1929  0031EE  B4D8               	btfsc	status,2,c
  1930  0031F0  D7E7               	goto	l1145
  1931  0031F2  0A01               	xorlw	1	; case 3
  1932  0031F4  A4D8               	btfss	status,2,c
  1933  0031F6  0012               	return	
  1934  0031F8  D7EA               	goto	l1150
  1935  0031FA                     __end_of_usonic_trigger:
  1936                           	opt stack 0
  1937                           intcon	equ	0xFF2
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function _TMR3_StartSinglePulseAcquisition *****************
  1943 ;; Defined at:
  1944 ;;		line 156 in file "mcc_generated_files/tmr3.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		None
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:   18
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_usonic_init
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text3
  1973  003E9E                     __ptext3:
  1974                           	opt stack 0
  1975  003E9E                     _TMR3_StartSinglePulseAcquisition:
  1976                           	opt stack 11
  1977                           
  1978                           ;tmr3.c: 158: T3GCONbits.T3GGO = 1;
  1979                           
  1980                           ;incstack = 0
  1981  003E9E  86CA               	bsf	4042,3,c	;volatile
  1982  003EA0  0012               	return		;funcret
  1983  003EA2                     __end_of_TMR3_StartSinglePulseAcquisition:
  1984                           	opt stack 0
  1985                           intcon	equ	0xFF2
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           status	equ	0xFD8
  1989                           
  1990 ;; *************** function _TMR3G_SetInterruptHandler *****************
  1991 ;; Defined at:
  1992 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  1995 ;;		 -> pulsoCapturadoTimer3(1), 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2007 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2010 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2011 ;;Total ram usage:        3 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:   18
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_usonic_init
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text4
  2022  003D82                     __ptext4:
  2023                           	opt stack 0
  2024  003D82                     _TMR3G_SetInterruptHandler:
  2025                           	opt stack 11
  2026                           
  2027                           ;tmr3.c: 183: TMR3G_InterruptHandler = InterruptHandler;
  2028                           
  2029                           ;incstack = 0
  2030  003D82  C100  F0DB         	movff	TMR3G_SetInterruptHandler@InterruptHandler,_TMR3G_InterruptHandler
  2031  003D86  C101  F0DC         	movff	TMR3G_SetInterruptHandler@InterruptHandler+1,_TMR3G_InterruptHandler+1
  2032  003D8A  C102  F0DD         	movff	TMR3G_SetInterruptHandler@InterruptHandler+2,_TMR3G_InterruptHandler+2
  2033  003D8E  0012               	return		;funcret
  2034  003D90                     __end_of_TMR3G_SetInterruptHandler:
  2035                           	opt stack 0
  2036                           intcon	equ	0xFF2
  2037                           postinc0	equ	0xFEE
  2038                           wreg	equ	0xFE8
  2039                           status	equ	0xFD8
  2040                           
  2041 ;; *************** function _TMR1_StartSinglePulseAcquisition *****************
  2042 ;; Defined at:
  2043 ;;		line 156 in file "mcc_generated_files/tmr1.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		None
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:   18
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_usonic_init
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text5
  2072  003EA2                     __ptext5:
  2073                           	opt stack 0
  2074  003EA2                     _TMR1_StartSinglePulseAcquisition:
  2075                           	opt stack 11
  2076                           
  2077                           ;tmr1.c: 158: T1GCONbits.T1GGO = 1;
  2078                           
  2079                           ;incstack = 0
  2080  003EA2  86D0               	bsf	4048,3,c	;volatile
  2081  003EA4  0012               	return		;funcret
  2082  003EA6                     __end_of_TMR1_StartSinglePulseAcquisition:
  2083                           	opt stack 0
  2084                           intcon	equ	0xFF2
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _TMR1G_SetInterruptHandler *****************
  2090 ;; Defined at:
  2091 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  2094 ;;		 -> pulsoCapturadoTimer1(1), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2106 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2109 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2110 ;;Total ram usage:        3 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:   18
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_usonic_init
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text6
  2121  003D90                     __ptext6:
  2122                           	opt stack 0
  2123  003D90                     _TMR1G_SetInterruptHandler:
  2124                           	opt stack 11
  2125                           
  2126                           ;tmr1.c: 182: TMR1G_InterruptHandler = InterruptHandler;
  2127                           
  2128                           ;incstack = 0
  2129  003D90  C100  F0DE         	movff	TMR1G_SetInterruptHandler@InterruptHandler,_TMR1G_InterruptHandler
  2130  003D94  C101  F0DF         	movff	TMR1G_SetInterruptHandler@InterruptHandler+1,_TMR1G_InterruptHandler+1
  2131  003D98  C102  F0E0         	movff	TMR1G_SetInterruptHandler@InterruptHandler+2,_TMR1G_InterruptHandler+2
  2132  003D9C  0012               	return		;funcret
  2133  003D9E                     __end_of_TMR1G_SetInterruptHandler:
  2134                           	opt stack 0
  2135                           intcon	equ	0xFF2
  2136                           postinc0	equ	0xFEE
  2137                           wreg	equ	0xFE8
  2138                           status	equ	0xFD8
  2139                           
  2140 ;; *************** function _tacticas_init *****************
  2141 ;; Defined at:
  2142 ;;		line 7 in file "tacticas.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:   19
  2163 ;; This function calls:
  2164 ;;		_tactica_elegir
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text7
  2171  003856                     __ptext7:
  2172                           	opt stack 0
  2173  003856                     _tacticas_init:
  2174                           	opt stack 11
  2175                           
  2176                           ;tacticas.c: 9: dist_tacticas_left[0] = 30;
  2177                           
  2178                           ;incstack = 0
  2179  003856  0E1E               	movlw	30
  2180  003858  0100               	movlb	0	; () banked
  2181  00385A  6FD6               	movwf	_dist_tacticas_left& (0+255),b
  2182                           
  2183                           ;tacticas.c: 11: dist_tacticas_right[0] = 20;
  2184  00385C  0E14               	movlw	20
  2185  00385E  6FD5               	movwf	_dist_tacticas_right& (0+255),b
  2186                           
  2187                           ;tacticas.c: 13: dist_tacticas_front[0] = 20;
  2188  003860  0E14               	movlw	20
  2189  003862  6FD3               	movwf	_dist_tacticas_front& (0+255),b
  2190                           
  2191                           ;tacticas.c: 14: dist_tacticas_front[1] = 50;
  2192  003864  0E32               	movlw	50
  2193  003866  6FD4               	movwf	(_dist_tacticas_front+1)& (0+255),b
  2194                           
  2195                           ;tacticas.c: 16: dist_tacticas_back[0] = 20;
  2196  003868  0E14               	movlw	20
  2197  00386A  6FD7               	movwf	_dist_tacticas_back& (0+255),b
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;tacticas.c: 18: tactica_elegir(tactica_default);
  2201  00386C  0EBE               	movlw	low _tactica_default
  2202  00386E  0101               	movlb	1	; () banked
  2203  003870  6F00               	movwf	tactica_elegir@tactica_funcion& (0+255),b
  2204  003872  0E3E               	movlw	high _tactica_default
  2205  003874  6F01               	movwf	(tactica_elegir@tactica_funcion+1)& (0+255),b
  2206  003876  0E00               	movlw	low (_tactica_default shr (0+16))
  2207  003878  6F02               	movwf	(tactica_elegir@tactica_funcion+2)& (0+255),b
  2208  00387A  ECCF  F01E         	call	_tactica_elegir	;wreg free
  2209  00387E  0012               	return		;funcret
  2210  003880                     __end_of_tacticas_init:
  2211                           	opt stack 0
  2212                           intcon	equ	0xFF2
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           status	equ	0xFD8
  2216                           
  2217 ;; *************** function _tactica_ejecutar *****************
  2218 ;; Defined at:
  2219 ;;		line 128 in file "tacticas.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:   23
  2240 ;; This function calls:
  2241 ;;		Absolute function
  2242 ;;		_tactica_back_1
  2243 ;;		_tactica_default
  2244 ;;		_tactica_front_1
  2245 ;;		_tactica_front_2
  2246 ;;		_tactica_left_1
  2247 ;;		_tactica_right_1
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text8
  2254  003AAA                     __ptext8:
  2255                           	opt stack 0
  2256  003AAA                     _tactica_ejecutar:
  2257                           	opt stack 7
  2258                           
  2259                           ;tacticas.c: 132: if (tactica_elegida)
  2260                           
  2261                           ;incstack = 0
  2262  003AAA  0101               	movlb	1	; () banked
  2263  003AAC  515B               	movf	_tactica_elegida& (0+255),w,b
  2264  003AAE  115C               	iorwf	(_tactica_elegida+1)& (0+255),w,b
  2265  003AB0  115D               	iorwf	(_tactica_elegida+2)& (0+255),w,b
  2266  003AB2  B4D8               	btfsc	status,2,c
  2267  003AB4  0012               	return	
  2268                           
  2269                           ; BSR set to: 1
  2270                           ;tacticas.c: 133: {
  2271                           ;tacticas.c: 134: tactica_elegida();
  2272  003AB6  D801               	call	u8658
  2273  003AB8  0012               	return	
  2274  003ABA                     u8658:
  2275  003ABA  0005               	push	
  2276  003ABC  6EFA               	movwf	pclath,c
  2277  003ABE  515B               	movf	_tactica_elegida& (0+255),w,b
  2278  003AC0  6EFD               	movwf	tosl,c
  2279  003AC2  515C               	movf	(_tactica_elegida+1)& (0+255),w,b
  2280  003AC4  6EFE               	movwf	tosh,c
  2281  003AC6  515D               	movf	(_tactica_elegida+2)& (0+255),w,b
  2282  003AC8  6EFF               	movwf	tosu,c
  2283  003ACA  50FA               	movf	pclath,w,c
  2284  003ACC  0012               	return		;indir
  2285  003ACE                     __end_of_tactica_ejecutar:
  2286                           	opt stack 0
  2287                           tosu	equ	0xFFF
  2288                           tosh	equ	0xFFE
  2289                           tosl	equ	0xFFD
  2290                           pclath	equ	0xFFA
  2291                           intcon	equ	0xFF2
  2292                           postinc0	equ	0xFEE
  2293                           wreg	equ	0xFE8
  2294                           status	equ	0xFD8
  2295                           
  2296 ;; *************** function _tactica_left_1 *****************
  2297 ;; Defined at:
  2298 ;;		line 73 in file "tacticas.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:   22
  2319 ;; This function calls:
  2320 ;;		_girarXgradosizquierda
  2321 ;;		_giroLeveDerechaAvanzar
  2322 ;;		_giroLeveIzquierdaRetroceder
  2323 ;; This function is called by:
  2324 ;;		_elegirTactica
  2325 ;;		_tactica_ejecutar
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text9
  2330  0035C0                     __ptext9:
  2331                           	opt stack 0
  2332  0035C0                     _tactica_left_1:
  2333                           	opt stack 7
  2334                           
  2335                           ;tacticas.c: 75: if (giroLeveIzquierdaRetroceder(3000U))
  2336                           
  2337                           ;incstack = 0
  2338  0035C0  0E0B               	movlw	11
  2339  0035C2  0101               	movlb	1	; () banked
  2340  0035C4  6F40               	movwf	(giroLeveIzquierdaRetroceder@tiempo+1)& (0+255),b
  2341  0035C6  0EB8               	movlw	184
  2342  0035C8  6F3F               	movwf	giroLeveIzquierdaRetroceder@tiempo& (0+255),b
  2343  0035CA  EC83  F01A         	call	_giroLeveIzquierdaRetroceder	;wreg free
  2344  0035CE  0900               	iorlw	0
  2345  0035D0  A4D8               	btfss	status,2,c
  2346  0035D2  0012               	return	
  2347                           
  2348                           ;tacticas.c: 77: if (girarXgradosizquierda(90U))
  2349                           
  2350                           ;tacticas.c: 76: return;
  2351  0035D4  0E00               	movlw	0
  2352  0035D6  0101               	movlb	1	; () banked
  2353  0035D8  6F40               	movwf	(girarXgradosizquierda@grados+1)& (0+255),b
  2354  0035DA  0E5A               	movlw	90
  2355  0035DC  6F3F               	movwf	girarXgradosizquierda@grados& (0+255),b
  2356  0035DE  EC00  F018         	call	_girarXgradosizquierda	;wreg free
  2357  0035E2  0900               	iorlw	0
  2358  0035E4  A4D8               	btfss	status,2,c
  2359  0035E6  0012               	return	
  2360                           
  2361                           ;tacticas.c: 79: if (giroLeveDerechaAvanzar(7000U))
  2362                           
  2363                           ;tacticas.c: 78: return;
  2364  0035E8  0E1B               	movlw	27
  2365  0035EA  0101               	movlb	1	; () banked
  2366  0035EC  6F40               	movwf	(giroLeveDerechaAvanzar@tiempo+1)& (0+255),b
  2367  0035EE  0E58               	movlw	88
  2368  0035F0  6F3F               	movwf	giroLeveDerechaAvanzar@tiempo& (0+255),b
  2369  0035F2  ECA2  F01A         	call	_giroLeveDerechaAvanzar	;wreg free
  2370                           
  2371                           ;tacticas.c: 80: return;
  2372  0035F6  0012               	return	
  2373  0035F8                     __end_of_tactica_left_1:
  2374                           	opt stack 0
  2375                           tosu	equ	0xFFF
  2376                           tosh	equ	0xFFE
  2377                           tosl	equ	0xFFD
  2378                           pclath	equ	0xFFA
  2379                           intcon	equ	0xFF2
  2380                           postinc0	equ	0xFEE
  2381                           wreg	equ	0xFE8
  2382                           status	equ	0xFD8
  2383                           
  2384 ;; *************** function _tactica_front_2 *****************
  2385 ;; Defined at:
  2386 ;;		line 106 in file "tacticas.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:   22
  2407 ;; This function calls:
  2408 ;;		_girarXgradosizquierda
  2409 ;;		_giroLeveDerechaRetroceder
  2410 ;;		_marcharAdelanteTiempo
  2411 ;; This function is called by:
  2412 ;;		_elegirTactica
  2413 ;;		_tactica_ejecutar
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text10
  2418  0035F8                     __ptext10:
  2419                           	opt stack 0
  2420  0035F8                     _tactica_front_2:
  2421                           	opt stack 7
  2422                           
  2423                           ;tacticas.c: 108: if (giroLeveDerechaRetroceder(3000U))
  2424                           
  2425                           ;incstack = 0
  2426  0035F8  0E0B               	movlw	11
  2427  0035FA  0101               	movlb	1	; () banked
  2428  0035FC  6F40               	movwf	(giroLeveDerechaRetroceder@tiempo+1)& (0+255),b
  2429  0035FE  0EB8               	movlw	184
  2430  003600  6F3F               	movwf	giroLeveDerechaRetroceder@tiempo& (0+255),b
  2431  003602  ECC1  F01A         	call	_giroLeveDerechaRetroceder	;wreg free
  2432  003606  0900               	iorlw	0
  2433  003608  A4D8               	btfss	status,2,c
  2434  00360A  0012               	return	
  2435                           
  2436                           ;tacticas.c: 110: if (marcharAdelanteTiempo(3000U))
  2437                           
  2438                           ;tacticas.c: 109: return;
  2439  00360C  0E0B               	movlw	11
  2440  00360E  0101               	movlb	1	; () banked
  2441  003610  6F40               	movwf	(marcharAdelanteTiempo@tiempo+1)& (0+255),b
  2442  003612  0EB8               	movlw	184
  2443  003614  6F3F               	movwf	marcharAdelanteTiempo@tiempo& (0+255),b
  2444  003616  ECE3  F01C         	call	_marcharAdelanteTiempo	;wreg free
  2445  00361A  0900               	iorlw	0
  2446  00361C  A4D8               	btfss	status,2,c
  2447  00361E  0012               	return	
  2448                           
  2449                           ;tacticas.c: 112: if (girarXgradosizquierda(20U))
  2450                           
  2451                           ;tacticas.c: 111: return;
  2452  003620  0E00               	movlw	0
  2453  003622  0101               	movlb	1	; () banked
  2454  003624  6F40               	movwf	(girarXgradosizquierda@grados+1)& (0+255),b
  2455  003626  0E14               	movlw	20
  2456  003628  6F3F               	movwf	girarXgradosizquierda@grados& (0+255),b
  2457  00362A  EC00  F018         	call	_girarXgradosizquierda	;wreg free
  2458                           
  2459                           ;tacticas.c: 113: return;
  2460  00362E  0012               	return	
  2461  003630                     __end_of_tactica_front_2:
  2462                           	opt stack 0
  2463                           tosu	equ	0xFFF
  2464                           tosh	equ	0xFFE
  2465                           tosl	equ	0xFFD
  2466                           pclath	equ	0xFFA
  2467                           intcon	equ	0xFF2
  2468                           postinc0	equ	0xFEE
  2469                           wreg	equ	0xFE8
  2470                           status	equ	0xFD8
  2471                           
  2472 ;; *************** function _tactica_front_1 *****************
  2473 ;; Defined at:
  2474 ;;		line 94 in file "tacticas.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:   22
  2495 ;; This function calls:
  2496 ;;		_girarXgradosderecha
  2497 ;;		_marcharAdelanteTiempo
  2498 ;;		_marcharAtrasTiempo
  2499 ;; This function is called by:
  2500 ;;		_elegirTactica
  2501 ;;		_tactica_ejecutar
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text11
  2506  003630                     __ptext11:
  2507                           	opt stack 0
  2508  003630                     _tactica_front_1:
  2509                           	opt stack 7
  2510                           
  2511                           ;tacticas.c: 97: if (marcharAtrasTiempo(2000U))
  2512                           
  2513                           ;incstack = 0
  2514  003630  0E07               	movlw	7
  2515  003632  0101               	movlb	1	; () banked
  2516  003634  6F40               	movwf	(marcharAtrasTiempo@tiempo+1)& (0+255),b
  2517  003636  0ED0               	movlw	208
  2518  003638  6F3F               	movwf	marcharAtrasTiempo@tiempo& (0+255),b
  2519  00363A  ECF6  F01C         	call	_marcharAtrasTiempo	;wreg free
  2520  00363E  0900               	iorlw	0
  2521  003640  A4D8               	btfss	status,2,c
  2522  003642  0012               	return	
  2523                           
  2524                           ;tacticas.c: 99: if (girarXgradosderecha(45U))
  2525                           
  2526                           ;tacticas.c: 98: return;
  2527  003644  0E00               	movlw	0
  2528  003646  0101               	movlb	1	; () banked
  2529  003648  6F40               	movwf	(girarXgradosderecha@grados+1)& (0+255),b
  2530  00364A  0E2D               	movlw	45
  2531  00364C  6F3F               	movwf	girarXgradosderecha@grados& (0+255),b
  2532  00364E  ECC8  F017         	call	_girarXgradosderecha	;wreg free
  2533  003652  0900               	iorlw	0
  2534  003654  A4D8               	btfss	status,2,c
  2535  003656  0012               	return	
  2536                           
  2537                           ;tacticas.c: 101: if (marcharAdelanteTiempo(2000U))
  2538                           
  2539                           ;tacticas.c: 100: return;
  2540  003658  0E07               	movlw	7
  2541  00365A  0101               	movlb	1	; () banked
  2542  00365C  6F40               	movwf	(marcharAdelanteTiempo@tiempo+1)& (0+255),b
  2543  00365E  0ED0               	movlw	208
  2544  003660  6F3F               	movwf	marcharAdelanteTiempo@tiempo& (0+255),b
  2545  003662  ECE3  F01C         	call	_marcharAdelanteTiempo	;wreg free
  2546                           
  2547                           ;tacticas.c: 102: return;
  2548  003666  0012               	return	
  2549  003668                     __end_of_tactica_front_1:
  2550                           	opt stack 0
  2551                           tosu	equ	0xFFF
  2552                           tosh	equ	0xFFE
  2553                           tosl	equ	0xFFD
  2554                           pclath	equ	0xFFA
  2555                           intcon	equ	0xFF2
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _tactica_back_1 *****************
  2561 ;; Defined at:
  2562 ;;		line 116 in file "tacticas.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:   22
  2583 ;; This function calls:
  2584 ;;		_delayTmr
  2585 ;;		_girarXgradosizquierda
  2586 ;;		_marcharAtrasTiempo
  2587 ;; This function is called by:
  2588 ;;		_elegirTactica
  2589 ;;		_tactica_ejecutar
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text12
  2594  0033FC                     __ptext12:
  2595                           	opt stack 0
  2596  0033FC                     _tactica_back_1:
  2597                           	opt stack 7
  2598                           
  2599                           ;tacticas.c: 118: if (girarXgradosizquierda(90U))
  2600                           
  2601                           ;incstack = 0
  2602  0033FC  0E00               	movlw	0
  2603  0033FE  0101               	movlb	1	; () banked
  2604  003400  6F40               	movwf	(girarXgradosizquierda@grados+1)& (0+255),b
  2605  003402  0E5A               	movlw	90
  2606  003404  6F3F               	movwf	girarXgradosizquierda@grados& (0+255),b
  2607  003406  EC00  F018         	call	_girarXgradosizquierda	;wreg free
  2608  00340A  0900               	iorlw	0
  2609  00340C  A4D8               	btfss	status,2,c
  2610  00340E  0012               	return	
  2611                           
  2612                           ;tacticas.c: 120: if (marcharAtrasTiempo(3000U))
  2613                           
  2614                           ;tacticas.c: 119: return;
  2615  003410  0E0B               	movlw	11
  2616  003412  0101               	movlb	1	; () banked
  2617  003414  6F40               	movwf	(marcharAtrasTiempo@tiempo+1)& (0+255),b
  2618  003416  0EB8               	movlw	184
  2619  003418  6F3F               	movwf	marcharAtrasTiempo@tiempo& (0+255),b
  2620  00341A  ECF6  F01C         	call	_marcharAtrasTiempo	;wreg free
  2621  00341E  0900               	iorlw	0
  2622  003420  A4D8               	btfss	status,2,c
  2623  003422  0012               	return	
  2624                           
  2625                           ;tacticas.c: 122: if (girarXgradosizquierda(15U))
  2626                           
  2627                           ;tacticas.c: 121: return;
  2628  003424  0E00               	movlw	0
  2629  003426  0101               	movlb	1	; () banked
  2630  003428  6F40               	movwf	(girarXgradosizquierda@grados+1)& (0+255),b
  2631  00342A  0E0F               	movlw	15
  2632  00342C  6F3F               	movwf	girarXgradosizquierda@grados& (0+255),b
  2633  00342E  EC00  F018         	call	_girarXgradosizquierda	;wreg free
  2634  003432  0900               	iorlw	0
  2635  003434  A4D8               	btfss	status,2,c
  2636  003436  0012               	return	
  2637                           
  2638                           ;tacticas.c: 124: if (delayTmr(1500U))
  2639                           
  2640                           ;tacticas.c: 123: return;
  2641  003438  0E05               	movlw	5
  2642  00343A  0101               	movlb	1	; () banked
  2643  00343C  6F3B               	movwf	(delayTmr@miliSegundos+1)& (0+255),b
  2644  00343E  0EDC               	movlw	220
  2645  003440  6F3A               	movwf	delayTmr@miliSegundos& (0+255),b
  2646  003442  EC33  F012         	call	_delayTmr	;wreg free
  2647                           
  2648                           ;tacticas.c: 125: return;
  2649  003446  0012               	return	
  2650  003448                     __end_of_tactica_back_1:
  2651                           	opt stack 0
  2652                           tosu	equ	0xFFF
  2653                           tosh	equ	0xFFE
  2654                           tosl	equ	0xFFD
  2655                           pclath	equ	0xFFA
  2656                           intcon	equ	0xFF2
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _tactica_default *****************
  2662 ;; Defined at:
  2663 ;;		line 68 in file "tacticas.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		None
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:   18
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_tacticas_init
  2688 ;;		_tactica_ejecutar
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text13
  2693  003EBE                     __ptext13:
  2694                           	opt stack 0
  2695  003EBE                     _tactica_default:
  2696                           	opt stack 11
  2697                           
  2698                           ;incstack = 0
  2699  003EBE  0012               	return		;funcret
  2700  003EC0                     __end_of_tactica_default:
  2701                           	opt stack 0
  2702                           tosu	equ	0xFFF
  2703                           tosh	equ	0xFFE
  2704                           tosl	equ	0xFFD
  2705                           pclath	equ	0xFFA
  2706                           intcon	equ	0xFF2
  2707                           postinc0	equ	0xFEE
  2708                           wreg	equ	0xFE8
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _tactica_right_1 *****************
  2712 ;; Defined at:
  2713 ;;		line 83 in file "tacticas.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;Total ram usage:        0 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:   22
  2734 ;; This function calls:
  2735 ;;		_girarXgradosderecha
  2736 ;;		_giroLeveDerechaRetroceder
  2737 ;;		_giroLeveIzquierdaAvanzar
  2738 ;; This function is called by:
  2739 ;;		_elegirTactica
  2740 ;;		_tactica_ejecutar
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text14
  2745  003668                     __ptext14:
  2746                           	opt stack 0
  2747  003668                     _tactica_right_1:
  2748                           	opt stack 7
  2749                           
  2750                           ;tacticas.c: 85: if (giroLeveDerechaRetroceder(3000U))
  2751                           
  2752                           ;incstack = 0
  2753  003668  0E0B               	movlw	11
  2754  00366A  0101               	movlb	1	; () banked
  2755  00366C  6F40               	movwf	(giroLeveDerechaRetroceder@tiempo+1)& (0+255),b
  2756  00366E  0EB8               	movlw	184
  2757  003670  6F3F               	movwf	giroLeveDerechaRetroceder@tiempo& (0+255),b
  2758  003672  ECC1  F01A         	call	_giroLeveDerechaRetroceder	;wreg free
  2759  003676  0900               	iorlw	0
  2760  003678  A4D8               	btfss	status,2,c
  2761  00367A  0012               	return	
  2762                           
  2763                           ;tacticas.c: 87: if (girarXgradosderecha(90U))
  2764                           
  2765                           ;tacticas.c: 86: return;
  2766  00367C  0E00               	movlw	0
  2767  00367E  0101               	movlb	1	; () banked
  2768  003680  6F40               	movwf	(girarXgradosderecha@grados+1)& (0+255),b
  2769  003682  0E5A               	movlw	90
  2770  003684  6F3F               	movwf	girarXgradosderecha@grados& (0+255),b
  2771  003686  ECC8  F017         	call	_girarXgradosderecha	;wreg free
  2772  00368A  0900               	iorlw	0
  2773  00368C  A4D8               	btfss	status,2,c
  2774  00368E  0012               	return	
  2775                           
  2776                           ;tacticas.c: 89: if (giroLeveIzquierdaAvanzar(7000U))
  2777                           
  2778                           ;tacticas.c: 88: return;
  2779  003690  0E1B               	movlw	27
  2780  003692  0101               	movlb	1	; () banked
  2781  003694  6F40               	movwf	(giroLeveIzquierdaAvanzar@tiempo+1)& (0+255),b
  2782  003696  0E58               	movlw	88
  2783  003698  6F3F               	movwf	giroLeveIzquierdaAvanzar@tiempo& (0+255),b
  2784  00369A  EC64  F01A         	call	_giroLeveIzquierdaAvanzar	;wreg free
  2785                           
  2786                           ;tacticas.c: 90: return;
  2787  00369E  0012               	return	
  2788  0036A0                     __end_of_tactica_right_1:
  2789                           	opt stack 0
  2790                           tosu	equ	0xFFF
  2791                           tosh	equ	0xFFE
  2792                           tosl	equ	0xFFD
  2793                           pclath	equ	0xFFA
  2794                           intcon	equ	0xFF2
  2795                           postinc0	equ	0xFEE
  2796                           wreg	equ	0xFE8
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function _giroLeveIzquierdaAvanzar *****************
  2800 ;; Defined at:
  2801 ;;		line 61 in file "api_locomocion.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  tiempo          2   63[BANK1 ] unsigned int 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      unsigned char 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2815 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2818 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2819 ;;Total ram usage:        2 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:   21
  2822 ;; This function calls:
  2823 ;;		_delayTmr
  2824 ;;		_detenerse
  2825 ;;		_marcharAdelante
  2826 ;;		_setPwmDe
  2827 ;;		_setPwmIz
  2828 ;; This function is called by:
  2829 ;;		_tactica_right_1
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text15
  2834  0034C8                     __ptext15:
  2835                           	opt stack 0
  2836  0034C8                     _giroLeveIzquierdaAvanzar:
  2837                           	opt stack 7
  2838                           
  2839                           ;api_locomocion.c: 63: setPwmIz(140);
  2840                           
  2841                           ;incstack = 0
  2842  0034C8  0E8C               	movlw	140
  2843  0034CA  EC8B  F01E         	call	_setPwmIz
  2844                           
  2845                           ;api_locomocion.c: 64: setPwmDe(199);
  2846  0034CE  0EC7               	movlw	199
  2847  0034D0  EC94  F01E         	call	_setPwmDe
  2848                           
  2849                           ;api_locomocion.c: 65: marcharAdelante();
  2850  0034D4  ECA6  F01E         	call	_marcharAdelante	;wreg free
  2851                           
  2852                           ;api_locomocion.c: 66: ultimoMovimiento = 0;
  2853  0034D8  0E00               	movlw	0
  2854  0034DA  6E5E               	movwf	_ultimoMovimiento,c
  2855                           
  2856                           ;api_locomocion.c: 67: if (delayTmr(tiempo))
  2857  0034DC  C13F  F13A         	movff	giroLeveIzquierdaAvanzar@tiempo,delayTmr@miliSegundos
  2858  0034E0  C140  F13B         	movff	giroLeveIzquierdaAvanzar@tiempo+1,delayTmr@miliSegundos+1
  2859  0034E4  EC33  F012         	call	_delayTmr	;wreg free
  2860  0034E8  0900               	iorlw	0
  2861  0034EA  B4D8               	btfsc	status,2,c
  2862  0034EC  D002               	goto	l970
  2863                           
  2864                           ;api_locomocion.c: 68: return 1;
  2865  0034EE  0E01               	movlw	1
  2866  0034F0  0012               	return	
  2867  0034F2                     l970:
  2868                           
  2869                           ;api_locomocion.c: 69: setPwmIz(199);
  2870  0034F2  0EC7               	movlw	199
  2871  0034F4  EC8B  F01E         	call	_setPwmIz
  2872                           
  2873                           ;api_locomocion.c: 70: setPwmDe(199);
  2874  0034F8  0EC7               	movlw	199
  2875  0034FA  EC94  F01E         	call	_setPwmDe
  2876                           
  2877                           ;api_locomocion.c: 71: detenerse();
  2878  0034FE  ECDD  F01E         	call	_detenerse	;wreg free
  2879                           
  2880                           ;api_locomocion.c: 72: return 0;
  2881  003502  0E00               	movlw	0
  2882  003504  0012               	return	
  2883  003506                     __end_of_giroLeveIzquierdaAvanzar:
  2884                           	opt stack 0
  2885                           tosu	equ	0xFFF
  2886                           tosh	equ	0xFFE
  2887                           tosl	equ	0xFFD
  2888                           pclath	equ	0xFFA
  2889                           intcon	equ	0xFF2
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           status	equ	0xFD8
  2893                           
  2894 ;; *************** function _giroLeveIzquierdaRetroceder *****************
  2895 ;; Defined at:
  2896 ;;		line 75 in file "api_locomocion.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  tiempo          2   63[BANK1 ] unsigned int 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      unsigned char 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2910 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;Total ram usage:        2 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:   21
  2917 ;; This function calls:
  2918 ;;		_delayTmr
  2919 ;;		_detenerse
  2920 ;;		_marcharAtras
  2921 ;;		_setPwmDe
  2922 ;;		_setPwmIz
  2923 ;; This function is called by:
  2924 ;;		_tactica_left_1
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text16
  2929  003506                     __ptext16:
  2930                           	opt stack 0
  2931  003506                     _giroLeveIzquierdaRetroceder:
  2932                           	opt stack 7
  2933                           
  2934                           ;api_locomocion.c: 77: setPwmIz(199);
  2935                           
  2936                           ;incstack = 0
  2937  003506  0EC7               	movlw	199
  2938  003508  EC8B  F01E         	call	_setPwmIz
  2939                           
  2940                           ;api_locomocion.c: 78: setPwmDe(140);
  2941  00350C  0E8C               	movlw	140
  2942  00350E  EC94  F01E         	call	_setPwmDe
  2943                           
  2944                           ;api_locomocion.c: 79: marcharAtras();
  2945  003512  EC9D  F01E         	call	_marcharAtras	;wreg free
  2946                           
  2947                           ;api_locomocion.c: 80: ultimoMovimiento = 1;
  2948  003516  0E01               	movlw	1
  2949  003518  6E5E               	movwf	_ultimoMovimiento,c
  2950                           
  2951                           ;api_locomocion.c: 81: if (delayTmr(tiempo))
  2952  00351A  C13F  F13A         	movff	giroLeveIzquierdaRetroceder@tiempo,delayTmr@miliSegundos
  2953  00351E  C140  F13B         	movff	giroLeveIzquierdaRetroceder@tiempo+1,delayTmr@miliSegundos+1
  2954  003522  EC33  F012         	call	_delayTmr	;wreg free
  2955  003526  0900               	iorlw	0
  2956  003528  B4D8               	btfsc	status,2,c
  2957  00352A  D002               	goto	l974
  2958                           
  2959                           ;api_locomocion.c: 82: return 1;
  2960  00352C  0E01               	movlw	1
  2961  00352E  0012               	return	
  2962  003530                     l974:
  2963                           
  2964                           ;api_locomocion.c: 83: setPwmIz(199);
  2965  003530  0EC7               	movlw	199
  2966  003532  EC8B  F01E         	call	_setPwmIz
  2967                           
  2968                           ;api_locomocion.c: 84: setPwmDe(199);
  2969  003536  0EC7               	movlw	199
  2970  003538  EC94  F01E         	call	_setPwmDe
  2971                           
  2972                           ;api_locomocion.c: 85: detenerse();
  2973  00353C  ECDD  F01E         	call	_detenerse	;wreg free
  2974                           
  2975                           ;api_locomocion.c: 86: return 0;
  2976  003540  0E00               	movlw	0
  2977  003542  0012               	return	
  2978  003544                     __end_of_giroLeveIzquierdaRetroceder:
  2979                           	opt stack 0
  2980                           tosu	equ	0xFFF
  2981                           tosh	equ	0xFFE
  2982                           tosl	equ	0xFFD
  2983                           pclath	equ	0xFFA
  2984                           intcon	equ	0xFF2
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           status	equ	0xFD8
  2988                           
  2989 ;; *************** function _giroLeveDerechaAvanzar *****************
  2990 ;; Defined at:
  2991 ;;		line 89 in file "api_locomocion.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  tiempo          2   63[BANK1 ] unsigned int 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      unsigned char 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3005 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3009 ;;Total ram usage:        2 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:   21
  3012 ;; This function calls:
  3013 ;;		_delayTmr
  3014 ;;		_detenerse
  3015 ;;		_marcharAdelante
  3016 ;;		_setPwmDe
  3017 ;;		_setPwmIz
  3018 ;; This function is called by:
  3019 ;;		_tactica_left_1
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text17
  3024  003544                     __ptext17:
  3025                           	opt stack 0
  3026  003544                     _giroLeveDerechaAvanzar:
  3027                           	opt stack 7
  3028                           
  3029                           ;api_locomocion.c: 91: setPwmIz(199);
  3030                           
  3031                           ;incstack = 0
  3032  003544  0EC7               	movlw	199
  3033  003546  EC8B  F01E         	call	_setPwmIz
  3034                           
  3035                           ;api_locomocion.c: 92: setPwmDe(140);
  3036  00354A  0E8C               	movlw	140
  3037  00354C  EC94  F01E         	call	_setPwmDe
  3038                           
  3039                           ;api_locomocion.c: 93: marcharAdelante();
  3040  003550  ECA6  F01E         	call	_marcharAdelante	;wreg free
  3041                           
  3042                           ;api_locomocion.c: 94: ultimoMovimiento = 0;
  3043  003554  0E00               	movlw	0
  3044  003556  6E5E               	movwf	_ultimoMovimiento,c
  3045                           
  3046                           ;api_locomocion.c: 95: if (delayTmr(tiempo))
  3047  003558  C13F  F13A         	movff	giroLeveDerechaAvanzar@tiempo,delayTmr@miliSegundos
  3048  00355C  C140  F13B         	movff	giroLeveDerechaAvanzar@tiempo+1,delayTmr@miliSegundos+1
  3049  003560  EC33  F012         	call	_delayTmr	;wreg free
  3050  003564  0900               	iorlw	0
  3051  003566  B4D8               	btfsc	status,2,c
  3052  003568  D002               	goto	l978
  3053                           
  3054                           ;api_locomocion.c: 96: return 1;
  3055  00356A  0E01               	movlw	1
  3056  00356C  0012               	return	
  3057  00356E                     l978:
  3058                           
  3059                           ;api_locomocion.c: 97: setPwmIz(199);
  3060  00356E  0EC7               	movlw	199
  3061  003570  EC8B  F01E         	call	_setPwmIz
  3062                           
  3063                           ;api_locomocion.c: 98: setPwmDe(199);
  3064  003574  0EC7               	movlw	199
  3065  003576  EC94  F01E         	call	_setPwmDe
  3066                           
  3067                           ;api_locomocion.c: 99: detenerse();
  3068  00357A  ECDD  F01E         	call	_detenerse	;wreg free
  3069                           
  3070                           ;api_locomocion.c: 100: return 0;
  3071  00357E  0E00               	movlw	0
  3072  003580  0012               	return	
  3073  003582                     __end_of_giroLeveDerechaAvanzar:
  3074                           	opt stack 0
  3075                           tosu	equ	0xFFF
  3076                           tosh	equ	0xFFE
  3077                           tosl	equ	0xFFD
  3078                           pclath	equ	0xFFA
  3079                           intcon	equ	0xFF2
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           status	equ	0xFD8
  3083                           
  3084 ;; *************** function _giroLeveDerechaRetroceder *****************
  3085 ;; Defined at:
  3086 ;;		line 103 in file "api_locomocion.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  tiempo          2   63[BANK1 ] unsigned int 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      unsigned char 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3100 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:   21
  3107 ;; This function calls:
  3108 ;;		_delayTmr
  3109 ;;		_detenerse
  3110 ;;		_marcharAtras
  3111 ;;		_setPwmDe
  3112 ;;		_setPwmIz
  3113 ;; This function is called by:
  3114 ;;		_tactica_right_1
  3115 ;;		_tactica_front_2
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text18
  3120  003582                     __ptext18:
  3121                           	opt stack 0
  3122  003582                     _giroLeveDerechaRetroceder:
  3123                           	opt stack 7
  3124                           
  3125                           ;api_locomocion.c: 105: setPwmIz(140);
  3126                           
  3127                           ;incstack = 0
  3128  003582  0E8C               	movlw	140
  3129  003584  EC8B  F01E         	call	_setPwmIz
  3130                           
  3131                           ;api_locomocion.c: 106: setPwmDe(199);
  3132  003588  0EC7               	movlw	199
  3133  00358A  EC94  F01E         	call	_setPwmDe
  3134                           
  3135                           ;api_locomocion.c: 107: marcharAtras();
  3136  00358E  EC9D  F01E         	call	_marcharAtras	;wreg free
  3137                           
  3138                           ;api_locomocion.c: 108: ultimoMovimiento = 1;
  3139  003592  0E01               	movlw	1
  3140  003594  6E5E               	movwf	_ultimoMovimiento,c
  3141                           
  3142                           ;api_locomocion.c: 109: if (delayTmr(tiempo))
  3143  003596  C13F  F13A         	movff	giroLeveDerechaRetroceder@tiempo,delayTmr@miliSegundos
  3144  00359A  C140  F13B         	movff	giroLeveDerechaRetroceder@tiempo+1,delayTmr@miliSegundos+1
  3145  00359E  EC33  F012         	call	_delayTmr	;wreg free
  3146  0035A2  0900               	iorlw	0
  3147  0035A4  B4D8               	btfsc	status,2,c
  3148  0035A6  D002               	goto	l982
  3149                           
  3150                           ;api_locomocion.c: 110: return 1;
  3151  0035A8  0E01               	movlw	1
  3152  0035AA  0012               	return	
  3153  0035AC                     l982:
  3154                           
  3155                           ;api_locomocion.c: 111: setPwmIz(199);
  3156  0035AC  0EC7               	movlw	199
  3157  0035AE  EC8B  F01E         	call	_setPwmIz
  3158                           
  3159                           ;api_locomocion.c: 112: setPwmDe(199);
  3160  0035B2  0EC7               	movlw	199
  3161  0035B4  EC94  F01E         	call	_setPwmDe
  3162                           
  3163                           ;api_locomocion.c: 113: detenerse();
  3164  0035B8  ECDD  F01E         	call	_detenerse	;wreg free
  3165                           
  3166                           ;api_locomocion.c: 114: return 0;
  3167  0035BC  0E00               	movlw	0
  3168  0035BE  0012               	return	
  3169  0035C0                     __end_of_giroLeveDerechaRetroceder:
  3170                           	opt stack 0
  3171                           tosu	equ	0xFFF
  3172                           tosh	equ	0xFFE
  3173                           tosl	equ	0xFFD
  3174                           pclath	equ	0xFFA
  3175                           intcon	equ	0xFF2
  3176                           postinc0	equ	0xFEE
  3177                           wreg	equ	0xFE8
  3178                           status	equ	0xFD8
  3179                           
  3180 ;; *************** function _setPwmIz *****************
  3181 ;; Defined at:
  3182 ;;		line 43 in file "drv_motores.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  pwm             1    wreg     unsigned char 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  pwm             1    4[BANK1 ] unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3197 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;Total ram usage:        1 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:   19
  3203 ;; This function calls:
  3204 ;;		_PWM3_LoadDutyValue
  3205 ;; This function is called by:
  3206 ;;		_giroLeveIzquierdaAvanzar
  3207 ;;		_giroLeveIzquierdaRetroceder
  3208 ;;		_giroLeveDerechaAvanzar
  3209 ;;		_giroLeveDerechaRetroceder
  3210 ;;		_setVelocidadMarcha
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text19
  3215  003D16                     __ptext19:
  3216                           	opt stack 0
  3217  003D16                     _setPwmIz:
  3218                           	opt stack 8
  3219                           
  3220                           ;incstack = 0
  3221                           ;setPwmIz@pwm stored from wreg
  3222  003D16  0101               	movlb	1	; () banked
  3223  003D18  6F04               	movwf	setPwmIz@pwm& (0+255),b
  3224                           
  3225                           ;drv_motores.c: 45: PWM3_LoadDutyValue(pwm);
  3226  003D1A  C104  F100         	movff	setPwmIz@pwm,PWM3_LoadDutyValue@dutyValue
  3227  003D1E  0101               	movlb	1	; () banked
  3228  003D20  6B01               	clrf	(PWM3_LoadDutyValue@dutyValue+1)& (0+255),b
  3229  003D22  EC50  F01B         	call	_PWM3_LoadDutyValue	;wreg free
  3230  003D26  0012               	return		;funcret
  3231  003D28                     __end_of_setPwmIz:
  3232                           	opt stack 0
  3233                           tosu	equ	0xFFF
  3234                           tosh	equ	0xFFE
  3235                           tosl	equ	0xFFD
  3236                           pclath	equ	0xFFA
  3237                           intcon	equ	0xFF2
  3238                           postinc0	equ	0xFEE
  3239                           wreg	equ	0xFE8
  3240                           status	equ	0xFD8
  3241                           
  3242 ;; *************** function _PWM3_LoadDutyValue *****************
  3243 ;; Defined at:
  3244 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  dutyValue       2    0[BANK1 ] unsigned int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3258 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3260 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3261 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3262 ;;Total ram usage:        4 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:   18
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_setPwmIz
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text20
  3273  0036A0                     __ptext20:
  3274                           	opt stack 0
  3275  0036A0                     _PWM3_LoadDutyValue:
  3276                           	opt stack 8
  3277                           
  3278                           ;pwm3.c: 77: PWM3DCH = (dutyValue & 0x03FC)>>2;
  3279                           
  3280                           ;incstack = 0
  3281  0036A0  C100  F102         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  3282  0036A4  C101  F103         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
  3283  0036A8  0101               	movlb	1	; () banked
  3284  0036AA  90D8               	bcf	status,0,c
  3285  0036AC  3303               	rrcf	(??_PWM3_LoadDutyValue+1)& (0+255),f,b
  3286  0036AE  3302               	rrcf	??_PWM3_LoadDutyValue& (0+255),f,b
  3287  0036B0  90D8               	bcf	status,0,c
  3288  0036B2  3303               	rrcf	(??_PWM3_LoadDutyValue+1)& (0+255),f,b
  3289  0036B4  3302               	rrcf	??_PWM3_LoadDutyValue& (0+255),f,b
  3290  0036B6  5102               	movf	??_PWM3_LoadDutyValue& (0+255),w,b
  3291  0036B8  6EA4               	movwf	4004,c	;volatile
  3292                           
  3293                           ;pwm3.c: 80: PWM3DCL = (dutyValue & 0x0003)<<6;
  3294  0036BA  C100  F102         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  3295  0036BE  0E03               	movlw	3
  3296  0036C0  1702               	andwf	??_PWM3_LoadDutyValue& (0+255),f,b
  3297  0036C2  0E06               	movlw	6
  3298  0036C4  6F03               	movwf	(??_PWM3_LoadDutyValue+1)& (0+255),b
  3299  0036C6                     u6205:
  3300  0036C6  90D8               	bcf	status,0,c
  3301  0036C8  3702               	rlcf	??_PWM3_LoadDutyValue& (0+255),f,b
  3302  0036CA  2F03               	decfsz	(??_PWM3_LoadDutyValue+1)& (0+255),f,b
  3303  0036CC  D7FC               	goto	u6205
  3304  0036CE  5102               	movf	??_PWM3_LoadDutyValue& (0+255),w,b
  3305  0036D0  6EA3               	movwf	4003,c	;volatile
  3306                           
  3307                           ; BSR set to: 1
  3308  0036D2  0012               	return		;funcret
  3309  0036D4                     __end_of_PWM3_LoadDutyValue:
  3310                           	opt stack 0
  3311                           tosu	equ	0xFFF
  3312                           tosh	equ	0xFFE
  3313                           tosl	equ	0xFFD
  3314                           pclath	equ	0xFFA
  3315                           intcon	equ	0xFF2
  3316                           postinc0	equ	0xFEE
  3317                           wreg	equ	0xFE8
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function _setPwmDe *****************
  3321 ;; Defined at:
  3322 ;;		line 48 in file "drv_motores.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  pwm             1    wreg     unsigned char 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  pwm             1    4[BANK1 ] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3337 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3339 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3340 ;;Total ram usage:        1 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:   19
  3343 ;; This function calls:
  3344 ;;		_PWM4_LoadDutyValue
  3345 ;; This function is called by:
  3346 ;;		_giroLeveIzquierdaAvanzar
  3347 ;;		_giroLeveIzquierdaRetroceder
  3348 ;;		_giroLeveDerechaAvanzar
  3349 ;;		_giroLeveDerechaRetroceder
  3350 ;;		_setVelocidadMarcha
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text21
  3355  003D28                     __ptext21:
  3356                           	opt stack 0
  3357  003D28                     _setPwmDe:
  3358                           	opt stack 8
  3359                           
  3360                           ; BSR set to: 1
  3361                           ;incstack = 0
  3362                           ;setPwmDe@pwm stored from wreg
  3363  003D28  0101               	movlb	1	; () banked
  3364  003D2A  6F04               	movwf	setPwmDe@pwm& (0+255),b
  3365                           
  3366                           ;drv_motores.c: 50: PWM4_LoadDutyValue(pwm);
  3367  003D2C  C104  F100         	movff	setPwmDe@pwm,PWM4_LoadDutyValue@dutyValue
  3368  003D30  0101               	movlb	1	; () banked
  3369  003D32  6B01               	clrf	(PWM4_LoadDutyValue@dutyValue+1)& (0+255),b
  3370  003D34  EC6A  F01B         	call	_PWM4_LoadDutyValue	;wreg free
  3371  003D38  0012               	return		;funcret
  3372  003D3A                     __end_of_setPwmDe:
  3373                           	opt stack 0
  3374                           tosu	equ	0xFFF
  3375                           tosh	equ	0xFFE
  3376                           tosl	equ	0xFFD
  3377                           pclath	equ	0xFFA
  3378                           intcon	equ	0xFF2
  3379                           postinc0	equ	0xFEE
  3380                           wreg	equ	0xFE8
  3381                           status	equ	0xFD8
  3382                           
  3383 ;; *************** function _PWM4_LoadDutyValue *****************
  3384 ;; Defined at:
  3385 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  dutyValue       2    0[BANK1 ] unsigned int 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3399 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3401 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3402 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3403 ;;Total ram usage:        4 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:   18
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_setPwmDe
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text22
  3414  0036D4                     __ptext22:
  3415                           	opt stack 0
  3416  0036D4                     _PWM4_LoadDutyValue:
  3417                           	opt stack 8
  3418                           
  3419                           ;pwm4.c: 77: PWM4DCH = (dutyValue & 0x03FC)>>2;
  3420                           
  3421                           ;incstack = 0
  3422  0036D4  C100  F102         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  3423  0036D8  C101  F103         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  3424  0036DC  0101               	movlb	1	; () banked
  3425  0036DE  90D8               	bcf	status,0,c
  3426  0036E0  3303               	rrcf	(??_PWM4_LoadDutyValue+1)& (0+255),f,b
  3427  0036E2  3302               	rrcf	??_PWM4_LoadDutyValue& (0+255),f,b
  3428  0036E4  90D8               	bcf	status,0,c
  3429  0036E6  3303               	rrcf	(??_PWM4_LoadDutyValue+1)& (0+255),f,b
  3430  0036E8  3302               	rrcf	??_PWM4_LoadDutyValue& (0+255),f,b
  3431  0036EA  5102               	movf	??_PWM4_LoadDutyValue& (0+255),w,b
  3432  0036EC  6EA1               	movwf	4001,c	;volatile
  3433                           
  3434                           ;pwm4.c: 80: PWM4DCL = (dutyValue & 0x0003)<<6;
  3435  0036EE  C100  F102         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  3436  0036F2  0E03               	movlw	3
  3437  0036F4  1702               	andwf	??_PWM4_LoadDutyValue& (0+255),f,b
  3438  0036F6  0E06               	movlw	6
  3439  0036F8  6F03               	movwf	(??_PWM4_LoadDutyValue+1)& (0+255),b
  3440  0036FA                     u6215:
  3441  0036FA  90D8               	bcf	status,0,c
  3442  0036FC  3702               	rlcf	??_PWM4_LoadDutyValue& (0+255),f,b
  3443  0036FE  2F03               	decfsz	(??_PWM4_LoadDutyValue+1)& (0+255),f,b
  3444  003700  D7FC               	goto	u6215
  3445  003702  5102               	movf	??_PWM4_LoadDutyValue& (0+255),w,b
  3446  003704  6EA0               	movwf	4000,c	;volatile
  3447                           
  3448                           ; BSR set to: 1
  3449  003706  0012               	return		;funcret
  3450  003708                     __end_of_PWM4_LoadDutyValue:
  3451                           	opt stack 0
  3452                           tosu	equ	0xFFF
  3453                           tosh	equ	0xFFE
  3454                           tosl	equ	0xFFD
  3455                           pclath	equ	0xFFA
  3456                           intcon	equ	0xFF2
  3457                           postinc0	equ	0xFEE
  3458                           wreg	equ	0xFE8
  3459                           status	equ	0xFD8
  3460                           
  3461 ;; *************** function _marcharAdelanteTiempo *****************
  3462 ;; Defined at:
  3463 ;;		line 12 in file "api_locomocion.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  tiempo          2   63[BANK1 ] unsigned int 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      unsigned char 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3477 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3480 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3481 ;;Total ram usage:        2 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:   21
  3484 ;; This function calls:
  3485 ;;		_delayTmr
  3486 ;;		_detenerse
  3487 ;;		_marcharAdelante
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;;		_tactica_front_1
  3491 ;;		_tactica_front_2
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text23
  3496  0039C6                     __ptext23:
  3497                           	opt stack 0
  3498  0039C6                     _marcharAdelanteTiempo:
  3499                           	opt stack 7
  3500                           
  3501                           ;api_locomocion.c: 14: marcharAdelante();
  3502                           
  3503                           ; BSR set to: 1
  3504                           ;incstack = 0
  3505  0039C6  ECA6  F01E         	call	_marcharAdelante	;wreg free
  3506                           
  3507                           ;api_locomocion.c: 15: ultimoMovimiento = 0;
  3508  0039CA  0E00               	movlw	0
  3509  0039CC  6E5E               	movwf	_ultimoMovimiento,c
  3510                           
  3511                           ;api_locomocion.c: 16: if (delayTmr(tiempo))
  3512  0039CE  C13F  F13A         	movff	marcharAdelanteTiempo@tiempo,delayTmr@miliSegundos
  3513  0039D2  C140  F13B         	movff	marcharAdelanteTiempo@tiempo+1,delayTmr@miliSegundos+1
  3514  0039D6  EC33  F012         	call	_delayTmr	;wreg free
  3515  0039DA  0900               	iorlw	0
  3516  0039DC  B4D8               	btfsc	status,2,c
  3517  0039DE  D002               	goto	l951
  3518                           
  3519                           ;api_locomocion.c: 17: return 1;
  3520  0039E0  0E01               	movlw	1
  3521  0039E2  0012               	return	
  3522  0039E4                     l951:
  3523                           
  3524                           ;api_locomocion.c: 18: detenerse();
  3525  0039E4  ECDD  F01E         	call	_detenerse	;wreg free
  3526                           
  3527                           ;api_locomocion.c: 19: return 0;
  3528  0039E8  0E00               	movlw	0
  3529  0039EA  0012               	return	
  3530  0039EC                     __end_of_marcharAdelanteTiempo:
  3531                           	opt stack 0
  3532                           tosu	equ	0xFFF
  3533                           tosh	equ	0xFFE
  3534                           tosl	equ	0xFFD
  3535                           pclath	equ	0xFFA
  3536                           intcon	equ	0xFF2
  3537                           postinc0	equ	0xFEE
  3538                           wreg	equ	0xFE8
  3539                           status	equ	0xFD8
  3540                           
  3541 ;; *************** function _girarXgradosderecha *****************
  3542 ;; Defined at:
  3543 ;;		line 50 in file "api_locomocion.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  grados          2   63[BANK1 ] unsigned int 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      unsigned char 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3557 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3561 ;;Total ram usage:        4 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:   21
  3564 ;; This function calls:
  3565 ;;		___ftmul
  3566 ;;		___fttol
  3567 ;;		___lwtoft
  3568 ;;		_delayTmr
  3569 ;;		_detenerse
  3570 ;;		_motorDe_set
  3571 ;;		_motorIz_set
  3572 ;; This function is called by:
  3573 ;;		_tactica_right_1
  3574 ;;		_tactica_front_1
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text24
  3579  002F90                     __ptext24:
  3580                           	opt stack 0
  3581  002F90                     _girarXgradosderecha:
  3582                           	opt stack 7
  3583                           
  3584                           ;api_locomocion.c: 52: motorIz_set(1);
  3585                           
  3586                           ;incstack = 0
  3587  002F90  0E01               	movlw	1
  3588  002F92  ECB8  F01B         	call	_motorIz_set
  3589                           
  3590                           ;api_locomocion.c: 53: motorDe_set(2);
  3591  002F96  0E02               	movlw	2
  3592  002F98  ECD0  F01B         	call	_motorDe_set
  3593                           
  3594                           ;api_locomocion.c: 54: ultimoMovimiento = 3;
  3595  002F9C  0E03               	movlw	3
  3596  002F9E  6E5E               	movwf	_ultimoMovimiento,c
  3597                           
  3598                           ;api_locomocion.c: 55: if (delayTmr(grados * 24.113))
  3599  002FA0  0EE7               	movlw	231
  3600  002FA2  0101               	movlb	1	; () banked
  3601  002FA4  6F0E               	movwf	___ftmul@f2& (0+255),b
  3602  002FA6  0EC0               	movlw	192
  3603  002FA8  6F0F               	movwf	(___ftmul@f2+1)& (0+255),b
  3604  002FAA  0E41               	movlw	65
  3605  002FAC  6F10               	movwf	(___ftmul@f2+2)& (0+255),b
  3606  002FAE  C13F  F108         	movff	girarXgradosderecha@grados,___lwtoft@c
  3607  002FB2  C140  F109         	movff	girarXgradosderecha@grados+1,___lwtoft@c+1
  3608  002FB6  EC09  F01D         	call	___lwtoft	;wreg free
  3609  002FBA  C108  F10B         	movff	?___lwtoft,___ftmul@f1
  3610  002FBE  C109  F10C         	movff	?___lwtoft+1,___ftmul@f1+1
  3611  002FC2  C10A  F10D         	movff	?___lwtoft+2,___ftmul@f1+2
  3612  002FC6  ECD5  F00F         	call	___ftmul	;wreg free
  3613  002FCA  C10B  F129         	movff	?___ftmul,___fttol@f1
  3614  002FCE  C10C  F12A         	movff	?___ftmul+1,___fttol@f1+1
  3615  002FD2  C10D  F12B         	movff	?___ftmul+2,___fttol@f1+2
  3616  002FD6  ECDD  F00E         	call	___fttol	;wreg free
  3617  002FDA  C129  F141         	movff	?___fttol,_girarXgradosderecha$3907
  3618  002FDE  C12A  F142         	movff	?___fttol+1,_girarXgradosderecha$3907+1
  3619                           
  3620                           ;api_locomocion.c: 55: if (delayTmr(grados * 24.113))
  3621  002FE2  C141  F13A         	movff	_girarXgradosderecha$3907,delayTmr@miliSegundos
  3622  002FE6  C142  F13B         	movff	_girarXgradosderecha$3907+1,delayTmr@miliSegundos+1
  3623  002FEA  EC33  F012         	call	_delayTmr	;wreg free
  3624  002FEE  0900               	iorlw	0
  3625  002FF0  B4D8               	btfsc	status,2,c
  3626  002FF2  D002               	goto	l966
  3627                           
  3628                           ;api_locomocion.c: 56: return 1;
  3629  002FF4  0E01               	movlw	1
  3630  002FF6  0012               	return	
  3631  002FF8                     l966:
  3632                           
  3633                           ;api_locomocion.c: 57: detenerse();
  3634  002FF8  ECDD  F01E         	call	_detenerse	;wreg free
  3635                           
  3636                           ;api_locomocion.c: 58: return 0;
  3637  002FFC  0E00               	movlw	0
  3638  002FFE  0012               	return	
  3639  003000                     __end_of_girarXgradosderecha:
  3640                           	opt stack 0
  3641                           tosu	equ	0xFFF
  3642                           tosh	equ	0xFFE
  3643                           tosl	equ	0xFFD
  3644                           pclath	equ	0xFFA
  3645                           intcon	equ	0xFF2
  3646                           postinc0	equ	0xFEE
  3647                           wreg	equ	0xFE8
  3648                           status	equ	0xFD8
  3649                           
  3650 ;; *************** function _marcharAtrasTiempo *****************
  3651 ;; Defined at:
  3652 ;;		line 22 in file "api_locomocion.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  tiempo          2   63[BANK1 ] unsigned int 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      unsigned char 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3666 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3669 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3670 ;;Total ram usage:        2 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:   21
  3673 ;; This function calls:
  3674 ;;		_delayTmr
  3675 ;;		_detenerse
  3676 ;;		_marcharAtras
  3677 ;; This function is called by:
  3678 ;;		_tactica_front_1
  3679 ;;		_tactica_back_1
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text25
  3684  0039EC                     __ptext25:
  3685                           	opt stack 0
  3686  0039EC                     _marcharAtrasTiempo:
  3687                           	opt stack 7
  3688                           
  3689                           ;api_locomocion.c: 24: marcharAtras();
  3690                           
  3691                           ;incstack = 0
  3692  0039EC  EC9D  F01E         	call	_marcharAtras	;wreg free
  3693                           
  3694                           ;api_locomocion.c: 25: ultimoMovimiento = 1;
  3695  0039F0  0E01               	movlw	1
  3696  0039F2  6E5E               	movwf	_ultimoMovimiento,c
  3697                           
  3698                           ;api_locomocion.c: 26: if (delayTmr(tiempo))
  3699  0039F4  C13F  F13A         	movff	marcharAtrasTiempo@tiempo,delayTmr@miliSegundos
  3700  0039F8  C140  F13B         	movff	marcharAtrasTiempo@tiempo+1,delayTmr@miliSegundos+1
  3701  0039FC  EC33  F012         	call	_delayTmr	;wreg free
  3702  003A00  0900               	iorlw	0
  3703  003A02  B4D8               	btfsc	status,2,c
  3704  003A04  D002               	goto	l955
  3705                           
  3706                           ;api_locomocion.c: 27: return 1;
  3707  003A06  0E01               	movlw	1
  3708  003A08  0012               	return	
  3709  003A0A                     l955:
  3710                           
  3711                           ;api_locomocion.c: 28: detenerse();
  3712  003A0A  ECDD  F01E         	call	_detenerse	;wreg free
  3713                           
  3714                           ;api_locomocion.c: 29: return 0;
  3715  003A0E  0E00               	movlw	0
  3716  003A10  0012               	return	
  3717  003A12                     __end_of_marcharAtrasTiempo:
  3718                           	opt stack 0
  3719                           tosu	equ	0xFFF
  3720                           tosh	equ	0xFFE
  3721                           tosl	equ	0xFFD
  3722                           pclath	equ	0xFFA
  3723                           intcon	equ	0xFF2
  3724                           postinc0	equ	0xFEE
  3725                           wreg	equ	0xFE8
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function _marcharAtras *****************
  3729 ;; Defined at:
  3730 ;;		line 32 in file "api_locomocion.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:   19
  3751 ;; This function calls:
  3752 ;;		_motorDe_set
  3753 ;;		_motorIz_set
  3754 ;; This function is called by:
  3755 ;;		_marcharAtrasTiempo
  3756 ;;		_giroLeveIzquierdaRetroceder
  3757 ;;		_giroLeveDerechaRetroceder
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text26
  3762  003D3A                     __ptext26:
  3763                           	opt stack 0
  3764  003D3A                     _marcharAtras:
  3765                           	opt stack 8
  3766                           
  3767                           ;api_locomocion.c: 34: motorIz_set(2);
  3768                           
  3769                           ;incstack = 0
  3770  003D3A  0E02               	movlw	2
  3771  003D3C  ECB8  F01B         	call	_motorIz_set
  3772                           
  3773                           ;api_locomocion.c: 35: motorDe_set(2);
  3774  003D40  0E02               	movlw	2
  3775  003D42  ECD0  F01B         	call	_motorDe_set
  3776                           
  3777                           ;api_locomocion.c: 36: ultimoMovimiento = 1;
  3778  003D46  0E01               	movlw	1
  3779  003D48  6E5E               	movwf	_ultimoMovimiento,c
  3780  003D4A  0012               	return		;funcret
  3781  003D4C                     __end_of_marcharAtras:
  3782                           	opt stack 0
  3783                           tosu	equ	0xFFF
  3784                           tosh	equ	0xFFE
  3785                           tosl	equ	0xFFD
  3786                           pclath	equ	0xFFA
  3787                           intcon	equ	0xFF2
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           status	equ	0xFD8
  3791                           
  3792 ;; *************** function _girarXgradosizquierda *****************
  3793 ;; Defined at:
  3794 ;;		line 39 in file "api_locomocion.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  grados          2   63[BANK1 ] unsigned int 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      unsigned char 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3808 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;Total ram usage:        4 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:   21
  3815 ;; This function calls:
  3816 ;;		___ftmul
  3817 ;;		___fttol
  3818 ;;		___lwtoft
  3819 ;;		_delayTmr
  3820 ;;		_detenerse
  3821 ;;		_motorDe_set
  3822 ;;		_motorIz_set
  3823 ;; This function is called by:
  3824 ;;		_tactica_left_1
  3825 ;;		_tactica_front_2
  3826 ;;		_tactica_back_1
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text27
  3831  003000                     __ptext27:
  3832                           	opt stack 0
  3833  003000                     _girarXgradosizquierda:
  3834                           	opt stack 7
  3835                           
  3836                           ;api_locomocion.c: 41: motorIz_set(2);
  3837                           
  3838                           ;incstack = 0
  3839  003000  0E02               	movlw	2
  3840  003002  ECB8  F01B         	call	_motorIz_set
  3841                           
  3842                           ;api_locomocion.c: 42: motorDe_set(1);
  3843  003006  0E01               	movlw	1
  3844  003008  ECD0  F01B         	call	_motorDe_set
  3845                           
  3846                           ;api_locomocion.c: 43: ultimoMovimiento = 2;
  3847  00300C  0E02               	movlw	2
  3848  00300E  6E5E               	movwf	_ultimoMovimiento,c
  3849                           
  3850                           ;api_locomocion.c: 44: if (delayTmr(grados * 24.113))
  3851  003010  0EE7               	movlw	231
  3852  003012  0101               	movlb	1	; () banked
  3853  003014  6F0E               	movwf	___ftmul@f2& (0+255),b
  3854  003016  0EC0               	movlw	192
  3855  003018  6F0F               	movwf	(___ftmul@f2+1)& (0+255),b
  3856  00301A  0E41               	movlw	65
  3857  00301C  6F10               	movwf	(___ftmul@f2+2)& (0+255),b
  3858  00301E  C13F  F108         	movff	girarXgradosizquierda@grados,___lwtoft@c
  3859  003022  C140  F109         	movff	girarXgradosizquierda@grados+1,___lwtoft@c+1
  3860  003026  EC09  F01D         	call	___lwtoft	;wreg free
  3861  00302A  C108  F10B         	movff	?___lwtoft,___ftmul@f1
  3862  00302E  C109  F10C         	movff	?___lwtoft+1,___ftmul@f1+1
  3863  003032  C10A  F10D         	movff	?___lwtoft+2,___ftmul@f1+2
  3864  003036  ECD5  F00F         	call	___ftmul	;wreg free
  3865  00303A  C10B  F129         	movff	?___ftmul,___fttol@f1
  3866  00303E  C10C  F12A         	movff	?___ftmul+1,___fttol@f1+1
  3867  003042  C10D  F12B         	movff	?___ftmul+2,___fttol@f1+2
  3868  003046  ECDD  F00E         	call	___fttol	;wreg free
  3869  00304A  C129  F141         	movff	?___fttol,_girarXgradosizquierda$3906
  3870  00304E  C12A  F142         	movff	?___fttol+1,_girarXgradosizquierda$3906+1
  3871                           
  3872                           ;api_locomocion.c: 44: if (delayTmr(grados * 24.113))
  3873  003052  C141  F13A         	movff	_girarXgradosizquierda$3906,delayTmr@miliSegundos
  3874  003056  C142  F13B         	movff	_girarXgradosizquierda$3906+1,delayTmr@miliSegundos+1
  3875  00305A  EC33  F012         	call	_delayTmr	;wreg free
  3876  00305E  0900               	iorlw	0
  3877  003060  B4D8               	btfsc	status,2,c
  3878  003062  D002               	goto	l962
  3879                           
  3880                           ;api_locomocion.c: 45: return 1;
  3881  003064  0E01               	movlw	1
  3882  003066  0012               	return	
  3883  003068                     l962:
  3884                           
  3885                           ;api_locomocion.c: 46: detenerse();
  3886  003068  ECDD  F01E         	call	_detenerse	;wreg free
  3887                           
  3888                           ;api_locomocion.c: 47: return 0;
  3889  00306C  0E00               	movlw	0
  3890  00306E  0012               	return	
  3891  003070                     __end_of_girarXgradosizquierda:
  3892                           	opt stack 0
  3893                           tosu	equ	0xFFF
  3894                           tosh	equ	0xFFE
  3895                           tosl	equ	0xFFD
  3896                           pclath	equ	0xFFA
  3897                           intcon	equ	0xFF2
  3898                           postinc0	equ	0xFEE
  3899                           wreg	equ	0xFE8
  3900                           status	equ	0xFD8
  3901                           
  3902 ;; *************** function ___ftmul *****************
  3903 ;; Defined at:
  3904 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  f1              3   11[BANK1 ] float 
  3907 ;;  f2              3   14[BANK1 ] float 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  f3_as_produc    3   21[BANK1 ] unsigned um
  3910 ;;  sign            1   25[BANK1 ] unsigned char 
  3911 ;;  cntr            1   24[BANK1 ] unsigned char 
  3912 ;;  exp             1   20[BANK1 ] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  3   11[BANK1 ] float 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3922 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;Total ram usage:       15 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:   19
  3929 ;; This function calls:
  3930 ;;		___ftpack
  3931 ;; This function is called by:
  3932 ;;		_girarXgradosizquierda
  3933 ;;		_girarXgradosderecha
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text28
  3938  001FAA                     __ptext28:
  3939                           	opt stack 0
  3940  001FAA                     ___ftmul:
  3941                           	opt stack 8
  3942                           
  3943                           ;incstack = 0
  3944  001FAA  C10D  F111         	movff	___ftmul@f1+2,??___ftmul
  3945  001FAE  0101               	movlb	1	; () banked
  3946  001FB0  6B12               	clrf	(??___ftmul+1)& (0+255),b
  3947  001FB2  6B13               	clrf	(??___ftmul+2)& (0+255),b
  3948  001FB4  350C               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  3949  001FB6  3711               	rlcf	??___ftmul& (0+255),f,b
  3950  001FB8  E301               	bnc	u6541
  3951  001FBA  8112               	bsf	(??___ftmul+1)& (0+255),0,b
  3952  001FBC                     u6541:
  3953  001FBC  5111               	movf	??___ftmul& (0+255),w,b
  3954  001FBE  6F14               	movwf	___ftmul@exp& (0+255),b
  3955  001FC0  5114               	movf	___ftmul@exp& (0+255),w,b
  3956  001FC2  A4D8               	btfss	status,2,c
  3957  001FC4  D007               	goto	l1850
  3958                           
  3959                           ; BSR set to: 1
  3960  001FC6  0E00               	movlw	0
  3961  001FC8  6F0B               	movwf	?___ftmul& (0+255),b
  3962  001FCA  0E00               	movlw	0
  3963  001FCC  6F0C               	movwf	(?___ftmul+1)& (0+255),b
  3964  001FCE  0E00               	movlw	0
  3965  001FD0  6F0D               	movwf	(?___ftmul+2)& (0+255),b
  3966                           
  3967                           ; BSR set to: 1
  3968  001FD2  0012               	return	
  3969  001FD4                     l1850:
  3970                           
  3971                           ; BSR set to: 1
  3972                           
  3973                           ; BSR set to: 1
  3974  001FD4  C110  F111         	movff	___ftmul@f2+2,??___ftmul
  3975  001FD8  6B12               	clrf	(??___ftmul+1)& (0+255),b
  3976  001FDA  6B13               	clrf	(??___ftmul+2)& (0+255),b
  3977  001FDC  350F               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3978  001FDE  3711               	rlcf	??___ftmul& (0+255),f,b
  3979  001FE0  E301               	bnc	u6561
  3980  001FE2  8112               	bsf	(??___ftmul+1)& (0+255),0,b
  3981  001FE4                     u6561:
  3982  001FE4  5111               	movf	??___ftmul& (0+255),w,b
  3983  001FE6  6F19               	movwf	___ftmul@sign& (0+255),b
  3984  001FE8  5119               	movf	___ftmul@sign& (0+255),w,b
  3985  001FEA  A4D8               	btfss	status,2,c
  3986  001FEC  D007               	goto	l1852
  3987                           
  3988                           ; BSR set to: 1
  3989  001FEE  0E00               	movlw	0
  3990  001FF0  6F0B               	movwf	?___ftmul& (0+255),b
  3991  001FF2  0E00               	movlw	0
  3992  001FF4  6F0C               	movwf	(?___ftmul+1)& (0+255),b
  3993  001FF6  0E00               	movlw	0
  3994  001FF8  6F0D               	movwf	(?___ftmul+2)& (0+255),b
  3995                           
  3996                           ; BSR set to: 1
  3997  001FFA  0012               	return	
  3998  001FFC                     l1852:
  3999                           
  4000                           ; BSR set to: 1
  4001                           
  4002                           ; BSR set to: 1
  4003  001FFC  5119               	movf	___ftmul@sign& (0+255),w,b
  4004  001FFE  0F7B               	addlw	123
  4005  002000  2714               	addwf	___ftmul@exp& (0+255),f,b
  4006                           
  4007                           ; BSR set to: 1
  4008  002002  C10D  F119         	movff	___ftmul@f1+2,___ftmul@sign
  4009  002006  5110               	movf	(___ftmul@f2+2)& (0+255),w,b
  4010  002008  1B19               	xorwf	___ftmul@sign& (0+255),f,b
  4011  00200A  0E80               	movlw	128
  4012  00200C  1719               	andwf	___ftmul@sign& (0+255),f,b
  4013                           
  4014                           ; BSR set to: 1
  4015  00200E  8F0C               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4016                           
  4017                           ; BSR set to: 1
  4018  002010  8F0F               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4019                           
  4020                           ; BSR set to: 1
  4021  002012  0EFF               	movlw	255
  4022  002014  170E               	andwf	___ftmul@f2& (0+255),f,b
  4023  002016  0EFF               	movlw	255
  4024  002018  170F               	andwf	(___ftmul@f2+1)& (0+255),f,b
  4025  00201A  0E00               	movlw	0
  4026  00201C  1710               	andwf	(___ftmul@f2+2)& (0+255),f,b
  4027                           
  4028                           ; BSR set to: 1
  4029  00201E  0E00               	movlw	0
  4030  002020  6F15               	movwf	___ftmul@f3_as_product& (0+255),b
  4031  002022  0E00               	movlw	0
  4032  002024  6F16               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4033  002026  0E00               	movlw	0
  4034  002028  6F17               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4035                           
  4036                           ; BSR set to: 1
  4037  00202A  0E07               	movlw	7
  4038  00202C  6F18               	movwf	___ftmul@cntr& (0+255),b
  4039  00202E                     
  4040                           ; BSR set to: 1
  4041                           
  4042                           ; BSR set to: 1
  4043  00202E  A10B               	btfss	___ftmul@f1& (0+255),0,b
  4044  002030  D006               	goto	l1854
  4045                           
  4046                           ; BSR set to: 1
  4047  002032  510E               	movf	___ftmul@f2& (0+255),w,b
  4048  002034  2715               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4049  002036  510F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4050  002038  2316               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4051  00203A  5110               	movf	(___ftmul@f2+2)& (0+255),w,b
  4052  00203C  2317               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4053  00203E                     l1854:
  4054                           
  4055                           ; BSR set to: 1
  4056                           
  4057                           ; BSR set to: 1
  4058  00203E  90D8               	bcf	status,0,c
  4059  002040  330D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4060  002042  330C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4061  002044  330B               	rrcf	___ftmul@f1& (0+255),f,b
  4062  002046  90D8               	bcf	status,0,c
  4063  002048  370E               	rlcf	___ftmul@f2& (0+255),f,b
  4064  00204A  370F               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4065  00204C  3710               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4066                           
  4067                           ; BSR set to: 1
  4068  00204E  2F18               	decfsz	___ftmul@cntr& (0+255),f,b
  4069  002050  D7EE               	goto	l1853
  4070                           
  4071                           ; BSR set to: 1
  4072                           
  4073                           ; BSR set to: 1
  4074  002052  0E09               	movlw	9
  4075  002054  6F18               	movwf	___ftmul@cntr& (0+255),b
  4076  002056                     
  4077                           ; BSR set to: 1
  4078                           
  4079                           ; BSR set to: 1
  4080  002056  A10B               	btfss	___ftmul@f1& (0+255),0,b
  4081  002058  D006               	goto	l1857
  4082                           
  4083                           ; BSR set to: 1
  4084  00205A  510E               	movf	___ftmul@f2& (0+255),w,b
  4085  00205C  2715               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4086  00205E  510F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4087  002060  2316               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4088  002062  5110               	movf	(___ftmul@f2+2)& (0+255),w,b
  4089  002064  2317               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4090  002066                     l1857:
  4091                           
  4092                           ; BSR set to: 1
  4093                           
  4094                           ; BSR set to: 1
  4095  002066  90D8               	bcf	status,0,c
  4096  002068  330D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4097  00206A  330C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4098  00206C  330B               	rrcf	___ftmul@f1& (0+255),f,b
  4099  00206E  90D8               	bcf	status,0,c
  4100  002070  3317               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4101  002072  3316               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4102  002074  3315               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4103                           
  4104                           ; BSR set to: 1
  4105  002076  2F18               	decfsz	___ftmul@cntr& (0+255),f,b
  4106  002078  D7EE               	goto	l1856
  4107                           
  4108                           ; BSR set to: 1
  4109                           
  4110                           ; BSR set to: 1
  4111  00207A  C115  F100         	movff	___ftmul@f3_as_product,___ftpack@arg
  4112  00207E  C116  F101         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4113  002082  C117  F102         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4114  002086  C114  F103         	movff	___ftmul@exp,___ftpack@exp
  4115  00208A  C119  F104         	movff	___ftmul@sign,___ftpack@sign
  4116  00208E  EC14  F015         	call	___ftpack	;wreg free
  4117  002092  C100  F10B         	movff	?___ftpack,?___ftmul
  4118  002096  C101  F10C         	movff	?___ftpack+1,?___ftmul+1
  4119  00209A  C102  F10D         	movff	?___ftpack+2,?___ftmul+2
  4120  00209E  0012               	return	
  4121  0020A0                     __end_of___ftmul:
  4122                           	opt stack 0
  4123                           tosu	equ	0xFFF
  4124                           tosh	equ	0xFFE
  4125                           tosl	equ	0xFFD
  4126                           pclath	equ	0xFFA
  4127                           intcon	equ	0xFF2
  4128                           postinc0	equ	0xFEE
  4129                           wreg	equ	0xFE8
  4130                           status	equ	0xFD8
  4131                           
  4132 ;; *************** function _elegirTactica *****************
  4133 ;; Defined at:
  4134 ;;		line 21 in file "tacticas.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  lado            1    wreg     unsigned char 
  4137 ;;  distancia       1   28[BANK1 ] unsigned char 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  lado            1   29[BANK1 ] unsigned char 
  4140 ;;  certeza         1   30[BANK1 ] unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4150 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4151 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;Total ram usage:        3 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:   20
  4157 ;; This function calls:
  4158 ;;		_findClosest
  4159 ;;		_tactica_elegir
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text29
  4166  001B8E                     __ptext29:
  4167                           	opt stack 0
  4168  001B8E                     _elegirTactica:
  4169                           	opt stack 10
  4170                           
  4171                           ;incstack = 0
  4172                           ;elegirTactica@lado stored from wreg
  4173  001B8E  0101               	movlb	1	; () banked
  4174  001B90  6F1D               	movwf	elegirTactica@lado& (0+255),b
  4175                           
  4176                           ;tacticas.c: 23: uint8_t certeza;
  4177                           ;tacticas.c: 24: switch (lado)
  4178  001B92  D07E               	goto	l1359
  4179  001B94                     
  4180                           ;tacticas.c: 27: certeza = findClosest(dist_tacticas_back, 1, distancia);
  4181  001B94  0ED7               	movlw	low _dist_tacticas_back
  4182  001B96  0101               	movlb	1	; () banked
  4183  001B98  6F0C               	movwf	findClosest@arr& (0+255),b
  4184  001B9A  0E00               	movlw	high _dist_tacticas_back
  4185  001B9C  6F0D               	movwf	(findClosest@arr+1)& (0+255),b
  4186  001B9E  0E01               	movlw	1
  4187  001BA0  6F0E               	movwf	findClosest@n& (0+255),b
  4188  001BA2  C11C  F10F         	movff	elegirTactica@distancia,findClosest@target
  4189  001BA6  EC14  F00B         	call	_findClosest	;wreg free
  4190  001BAA  0101               	movlb	1	; () banked
  4191  001BAC  6F1E               	movwf	elegirTactica@certeza& (0+255),b
  4192                           
  4193                           ;tacticas.c: 28: switch (certeza)
  4194  001BAE  D009               	goto	l1361
  4195  001BB0                     
  4196                           ; BSR set to: 1
  4197                           ;tacticas.c: 31: tactica_elegir(tactica_back_1);
  4198                           
  4199                           ; BSR set to: 1
  4200  001BB0  0EFC               	movlw	low _tactica_back_1
  4201  001BB2  6F00               	movwf	tactica_elegir@tactica_funcion& (0+255),b
  4202  001BB4  0E33               	movlw	high _tactica_back_1
  4203  001BB6  6F01               	movwf	(tactica_elegir@tactica_funcion+1)& (0+255),b
  4204  001BB8  0E00               	movlw	low (_tactica_back_1 shr (0+16))
  4205  001BBA  6F02               	movwf	(tactica_elegir@tactica_funcion+2)& (0+255),b
  4206  001BBC  ECCF  F01E         	call	_tactica_elegir	;wreg free
  4207                           
  4208                           ;tacticas.c: 33: }
  4209                           
  4210                           ;tacticas.c: 32: break;
  4211  001BC0  0012               	return	
  4212  001BC2                     l1361:
  4213  001BC2  0101               	movlb	1	; () banked
  4214  001BC4  511E               	movf	elegirTactica@certeza& (0+255),w,b
  4215                           
  4216                           ; Switch size 1, requested type "space"
  4217                           ; Number of cases is 1, Range of values is 0 to 0
  4218                           ; switch strategies available:
  4219                           ; Name         Instructions Cycles
  4220                           ; simple_byte            4     3 (average)
  4221                           ;	Chosen strategy is simple_byte
  4222  001BC6  0A00               	xorlw	0	; case 0
  4223  001BC8  A4D8               	btfss	status,2,c
  4224                           
  4225                           ; BSR set to: 1
  4226                           ;tacticas.c: 34: break;
  4227  001BCA  0012               	return	
  4228  001BCC  D7F1               	goto	l1362
  4229  001BCE                     
  4230                           ; BSR set to: 1
  4231                           ;tacticas.c: 36: certeza = findClosest(dist_tacticas_front, 2, distancia);
  4232                           
  4233                           ; BSR set to: 1
  4234  001BCE  0ED3               	movlw	low _dist_tacticas_front
  4235  001BD0  6F0C               	movwf	findClosest@arr& (0+255),b
  4236  001BD2  0E00               	movlw	high _dist_tacticas_front
  4237  001BD4  6F0D               	movwf	(findClosest@arr+1)& (0+255),b
  4238  001BD6  0E02               	movlw	2
  4239  001BD8  6F0E               	movwf	findClosest@n& (0+255),b
  4240  001BDA  C11C  F10F         	movff	elegirTactica@distancia,findClosest@target
  4241  001BDE  EC14  F00B         	call	_findClosest	;wreg free
  4242  001BE2  0101               	movlb	1	; () banked
  4243  001BE4  6F1E               	movwf	elegirTactica@certeza& (0+255),b
  4244                           
  4245                           ;tacticas.c: 37: switch (certeza)
  4246  001BE6  D013               	goto	l1366
  4247  001BE8                     
  4248                           ; BSR set to: 1
  4249                           ;tacticas.c: 40: tactica_elegir(tactica_front_1);
  4250                           
  4251                           ; BSR set to: 1
  4252  001BE8  0E30               	movlw	low _tactica_front_1
  4253  001BEA  6F00               	movwf	tactica_elegir@tactica_funcion& (0+255),b
  4254  001BEC  0E36               	movlw	high _tactica_front_1
  4255  001BEE  6F01               	movwf	(tactica_elegir@tactica_funcion+1)& (0+255),b
  4256  001BF0  0E00               	movlw	low (_tactica_front_1 shr (0+16))
  4257  001BF2  6F02               	movwf	(tactica_elegir@tactica_funcion+2)& (0+255),b
  4258  001BF4  ECCF  F01E         	call	_tactica_elegir	;wreg free
  4259                           
  4260                           ;tacticas.c: 41: break;
  4261  001BF8  0012               	return	
  4262  001BFA                     
  4263                           ;tacticas.c: 43: tactica_elegir(tactica_front_2);
  4264  001BFA  0EF8               	movlw	low _tactica_front_2
  4265  001BFC  0101               	movlb	1	; () banked
  4266  001BFE  6F00               	movwf	tactica_elegir@tactica_funcion& (0+255),b
  4267  001C00  0E35               	movlw	high _tactica_front_2
  4268  001C02  6F01               	movwf	(tactica_elegir@tactica_funcion+1)& (0+255),b
  4269  001C04  0E00               	movlw	low (_tactica_front_2 shr (0+16))
  4270  001C06  6F02               	movwf	(tactica_elegir@tactica_funcion+2)& (0+255),b
  4271  001C08  ECCF  F01E         	call	_tactica_elegir	;wreg free
  4272                           
  4273                           ;tacticas.c: 45: }
  4274                           
  4275                           ;tacticas.c: 44: break;
  4276  001C0C  0012               	return	
  4277  001C0E                     l1366:
  4278  001C0E  0101               	movlb	1	; () banked
  4279  001C10  511E               	movf	elegirTactica@certeza& (0+255),w,b
  4280                           
  4281                           ; Switch size 1, requested type "space"
  4282                           ; Number of cases is 2, Range of values is 0 to 1
  4283                           ; switch strategies available:
  4284                           ; Name         Instructions Cycles
  4285                           ; simple_byte            7     4 (average)
  4286                           ;	Chosen strategy is simple_byte
  4287  001C12  0A00               	xorlw	0	; case 0
  4288  001C14  B4D8               	btfsc	status,2,c
  4289  001C16  D7E8               	goto	l1367
  4290  001C18  0A01               	xorlw	1	; case 1
  4291  001C1A  A4D8               	btfss	status,2,c
  4292                           
  4293                           ; BSR set to: 1
  4294                           ;tacticas.c: 46: break;
  4295  001C1C  0012               	return	
  4296  001C1E  D7ED               	goto	l1369
  4297  001C20                     
  4298                           ; BSR set to: 1
  4299                           ;tacticas.c: 48: certeza = findClosest(dist_tacticas_left, 1, distancia);
  4300                           
  4301                           ; BSR set to: 1
  4302  001C20  0ED6               	movlw	low _dist_tacticas_left
  4303  001C22  6F0C               	movwf	findClosest@arr& (0+255),b
  4304  001C24  0E00               	movlw	high _dist_tacticas_left
  4305  001C26  6F0D               	movwf	(findClosest@arr+1)& (0+255),b
  4306  001C28  0E01               	movlw	1
  4307  001C2A  6F0E               	movwf	findClosest@n& (0+255),b
  4308  001C2C  C11C  F10F         	movff	elegirTactica@distancia,findClosest@target
  4309  001C30  EC14  F00B         	call	_findClosest	;wreg free
  4310  001C34  0101               	movlb	1	; () banked
  4311  001C36  6F1E               	movwf	elegirTactica@certeza& (0+255),b
  4312                           
  4313                           ;tacticas.c: 49: switch (certeza)
  4314  001C38  D009               	goto	l1371
  4315  001C3A                     
  4316                           ; BSR set to: 1
  4317                           ;tacticas.c: 52: tactica_elegir(tactica_left_1);
  4318                           
  4319                           ; BSR set to: 1
  4320  001C3A  0EC0               	movlw	low _tactica_left_1
  4321  001C3C  6F00               	movwf	tactica_elegir@tactica_funcion& (0+255),b
  4322  001C3E  0E35               	movlw	high _tactica_left_1
  4323  001C40  6F01               	movwf	(tactica_elegir@tactica_funcion+1)& (0+255),b
  4324  001C42  0E00               	movlw	low (_tactica_left_1 shr (0+16))
  4325  001C44  6F02               	movwf	(tactica_elegir@tactica_funcion+2)& (0+255),b
  4326  001C46  ECCF  F01E         	call	_tactica_elegir	;wreg free
  4327                           
  4328                           ;tacticas.c: 54: }
  4329                           
  4330                           ;tacticas.c: 53: break;
  4331  001C4A  0012               	return	
  4332  001C4C                     l1371:
  4333  001C4C  0101               	movlb	1	; () banked
  4334  001C4E  511E               	movf	elegirTactica@certeza& (0+255),w,b
  4335                           
  4336                           ; Switch size 1, requested type "space"
  4337                           ; Number of cases is 1, Range of values is 0 to 0
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte            4     3 (average)
  4341                           ;	Chosen strategy is simple_byte
  4342  001C50  0A00               	xorlw	0	; case 0
  4343  001C52  A4D8               	btfss	status,2,c
  4344                           
  4345                           ; BSR set to: 1
  4346                           ;tacticas.c: 55: break;
  4347  001C54  0012               	return	
  4348  001C56  D7F1               	goto	l1372
  4349  001C58                     
  4350                           ; BSR set to: 1
  4351                           ;tacticas.c: 57: certeza = findClosest(dist_tacticas_right, 1, distancia);
  4352                           
  4353                           ; BSR set to: 1
  4354  001C58  0ED5               	movlw	low _dist_tacticas_right
  4355  001C5A  6F0C               	movwf	findClosest@arr& (0+255),b
  4356  001C5C  0E00               	movlw	high _dist_tacticas_right
  4357  001C5E  6F0D               	movwf	(findClosest@arr+1)& (0+255),b
  4358  001C60  0E01               	movlw	1
  4359  001C62  6F0E               	movwf	findClosest@n& (0+255),b
  4360  001C64  C11C  F10F         	movff	elegirTactica@distancia,findClosest@target
  4361  001C68  EC14  F00B         	call	_findClosest	;wreg free
  4362  001C6C  0101               	movlb	1	; () banked
  4363  001C6E  6F1E               	movwf	elegirTactica@certeza& (0+255),b
  4364                           
  4365                           ;tacticas.c: 58: switch (certeza)
  4366  001C70  D009               	goto	l1375
  4367  001C72                     
  4368                           ; BSR set to: 1
  4369                           ;tacticas.c: 61: tactica_elegir(tactica_right_1);
  4370                           
  4371                           ; BSR set to: 1
  4372  001C72  0E68               	movlw	low _tactica_right_1
  4373  001C74  6F00               	movwf	tactica_elegir@tactica_funcion& (0+255),b
  4374  001C76  0E36               	movlw	high _tactica_right_1
  4375  001C78  6F01               	movwf	(tactica_elegir@tactica_funcion+1)& (0+255),b
  4376  001C7A  0E00               	movlw	low (_tactica_right_1 shr (0+16))
  4377  001C7C  6F02               	movwf	(tactica_elegir@tactica_funcion+2)& (0+255),b
  4378  001C7E  ECCF  F01E         	call	_tactica_elegir	;wreg free
  4379                           
  4380                           ;tacticas.c: 63: }
  4381                           
  4382                           ;tacticas.c: 62: break;
  4383  001C82  0012               	return	
  4384  001C84                     l1375:
  4385  001C84  0101               	movlb	1	; () banked
  4386  001C86  511E               	movf	elegirTactica@certeza& (0+255),w,b
  4387                           
  4388                           ; Switch size 1, requested type "space"
  4389                           ; Number of cases is 1, Range of values is 0 to 0
  4390                           ; switch strategies available:
  4391                           ; Name         Instructions Cycles
  4392                           ; simple_byte            4     3 (average)
  4393                           ;	Chosen strategy is simple_byte
  4394  001C88  0A00               	xorlw	0	; case 0
  4395  001C8A  A4D8               	btfss	status,2,c
  4396                           
  4397                           ; BSR set to: 1
  4398                           ;tacticas.c: 65: }
  4399                           
  4400                           ; BSR set to: 1
  4401                           ;tacticas.c: 64: break;
  4402  001C8C  0012               	return	
  4403  001C8E  D7F1               	goto	l1376
  4404  001C90                     l1359:
  4405                           
  4406                           ; BSR set to: 1
  4407  001C90  0101               	movlb	1	; () banked
  4408  001C92  511D               	movf	elegirTactica@lado& (0+255),w,b
  4409                           
  4410                           ; Switch size 1, requested type "space"
  4411                           ; Number of cases is 4, Range of values is 0 to 3
  4412                           ; switch strategies available:
  4413                           ; Name         Instructions Cycles
  4414                           ; simple_byte           13     7 (average)
  4415                           ;	Chosen strategy is simple_byte
  4416  001C94  0A00               	xorlw	0	; case 0
  4417  001C96  B4D8               	btfsc	status,2,c
  4418  001C98  D77D               	goto	l1360
  4419  001C9A  0A01               	xorlw	1	; case 1
  4420  001C9C  B4D8               	btfsc	status,2,c
  4421  001C9E  D797               	goto	l1365
  4422  001CA0  0A03               	xorlw	3	; case 2
  4423  001CA2  B4D8               	btfsc	status,2,c
  4424  001CA4  D7BD               	goto	l1370
  4425  001CA6  0A01               	xorlw	1	; case 3
  4426  001CA8  A4D8               	btfss	status,2,c
  4427  001CAA  0012               	return	
  4428  001CAC  D7D5               	goto	l1374
  4429  001CAE                     __end_of_elegirTactica:
  4430                           	opt stack 0
  4431                           tosu	equ	0xFFF
  4432                           tosh	equ	0xFFE
  4433                           tosl	equ	0xFFD
  4434                           pclath	equ	0xFFA
  4435                           intcon	equ	0xFF2
  4436                           postinc0	equ	0xFEE
  4437                           wreg	equ	0xFE8
  4438                           status	equ	0xFD8
  4439                           
  4440 ;; *************** function _tactica_elegir *****************
  4441 ;; Defined at:
  4442 ;;		line 138 in file "tacticas.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  tactica_func    3    0[BANK1 ] PTR FTN()void 
  4445 ;;		 -> tactica_right_1(1), tactica_left_1(1), tactica_front_2(1), tactica_front_1(1), 
  4446 ;;		 -> tactica_back_1(1), tactica_default(1), 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4458 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4461 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4462 ;;Total ram usage:        3 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:   18
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_tacticas_init
  4469 ;;		_elegirTactica
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text30
  4474  003D9E                     __ptext30:
  4475                           	opt stack 0
  4476  003D9E                     _tactica_elegir:
  4477                           	opt stack 11
  4478                           
  4479                           ;tacticas.c: 140: tactica_elegida = tactica_funcion;
  4480                           
  4481                           ;incstack = 0
  4482  003D9E  C100  F15B         	movff	tactica_elegir@tactica_funcion,_tactica_elegida
  4483  003DA2  C101  F15C         	movff	tactica_elegir@tactica_funcion+1,_tactica_elegida+1
  4484  003DA6  C102  F15D         	movff	tactica_elegir@tactica_funcion+2,_tactica_elegida+2
  4485  003DAA  0012               	return		;funcret
  4486  003DAC                     __end_of_tactica_elegir:
  4487                           	opt stack 0
  4488                           tosu	equ	0xFFF
  4489                           tosh	equ	0xFFE
  4490                           tosl	equ	0xFFD
  4491                           pclath	equ	0xFFA
  4492                           intcon	equ	0xFF2
  4493                           postinc0	equ	0xFEE
  4494                           wreg	equ	0xFE8
  4495                           status	equ	0xFD8
  4496                           
  4497 ;; *************** function _findClosest *****************
  4498 ;; Defined at:
  4499 ;;		line 85 in file "math_routines.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  arr             2   12[BANK1 ] PTR unsigned char 
  4502 ;;		 -> dist_tacticas_back(1), dist_tacticas_front(2), dist_tacticas_right(1), dist_tacticas_left(1), 
  4503 ;;  n               1   14[BANK1 ] unsigned char 
  4504 ;;  target          1   15[BANK1 ] unsigned char 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;  a               1   24[BANK1 ] unsigned char 
  4507 ;;  a               1   23[BANK1 ] unsigned char 
  4508 ;;  mid             1   27[BANK1 ] unsigned char 
  4509 ;;  j               1   26[BANK1 ] unsigned char 
  4510 ;;  i               1   25[BANK1 ] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      unsigned char 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4520 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4521 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4522 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4523 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4524 ;;Total ram usage:       16 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:   19
  4527 ;; This function calls:
  4528 ;;		___awdiv
  4529 ;;		_getClosest
  4530 ;; This function is called by:
  4531 ;;		_elegirTactica
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text31
  4536  001628                     __ptext31:
  4537                           	opt stack 0
  4538  001628                     _findClosest:
  4539                           	opt stack 10
  4540                           
  4541                           ;math_routines.c: 88: if (target <= arr[0])
  4542                           
  4543                           ;incstack = 0
  4544  001628  C10C  FFD9         	movff	findClosest@arr,fsr2l
  4545  00162C  C10D  FFDA         	movff	findClosest@arr+1,fsr2h
  4546  001630  0101               	movlb	1	; () banked
  4547  001632  510F               	movf	findClosest@target& (0+255),w,b
  4548  001634  5CDE               	subwf	postinc2,w,c
  4549  001636  A0D8               	btfss	status,0,c
  4550  001638  D002               	goto	l874
  4551                           
  4552                           ; BSR set to: 1
  4553                           ;math_routines.c: 90: return 0;
  4554  00163A  0E00               	movlw	0
  4555                           
  4556                           ; BSR set to: 1
  4557  00163C  0012               	return	
  4558  00163E                     l874:
  4559                           
  4560                           ; BSR set to: 1
  4561                           ;math_routines.c: 91: if (target >= arr[n - 1])
  4562                           
  4563                           ; BSR set to: 1
  4564  00163E  0EFF               	movlw	255
  4565  001640  6F10               	movwf	??_findClosest& (0+255),b
  4566  001642  0EFF               	movlw	255
  4567  001644  6F11               	movwf	(??_findClosest+1)& (0+255),b
  4568  001646  510E               	movf	findClosest@n& (0+255),w,b
  4569  001648  6F12               	movwf	(??_findClosest+2)& (0+255),b
  4570  00164A  6B13               	clrf	(??_findClosest+3)& (0+255),b
  4571  00164C  5110               	movf	??_findClosest& (0+255),w,b
  4572  00164E  2712               	addwf	(??_findClosest+2)& (0+255),f,b
  4573  001650  5111               	movf	(??_findClosest+1)& (0+255),w,b
  4574  001652  2313               	addwfc	(??_findClosest+3)& (0+255),f,b
  4575  001654  5112               	movf	(??_findClosest+2)& (0+255),w,b
  4576  001656  250C               	addwf	findClosest@arr& (0+255),w,b
  4577  001658  6ED9               	movwf	fsr2l,c
  4578  00165A  5113               	movf	(??_findClosest+3)& (0+255),w,b
  4579  00165C  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4580  00165E  6EDA               	movwf	fsr2h,c
  4581  001660  50DE               	movf	postinc2,w,c
  4582  001662  5D0F               	subwf	findClosest@target& (0+255),w,b
  4583  001664  A0D8               	btfss	status,0,c
  4584  001666  D002               	goto	l876
  4585                           
  4586                           ; BSR set to: 1
  4587                           ;math_routines.c: 93: return n - 1;
  4588  001668  050E               	decf	findClosest@n& (0+255),w,b
  4589                           
  4590                           ; BSR set to: 1
  4591  00166A  0012               	return	
  4592  00166C                     l876:
  4593                           
  4594                           ; BSR set to: 1
  4595                           ;math_routines.c: 96: uint8_t i = 0;
  4596                           
  4597                           ; BSR set to: 1
  4598  00166C  0E00               	movlw	0
  4599  00166E  6F19               	movwf	findClosest@i& (0+255),b
  4600                           
  4601                           ; BSR set to: 1
  4602                           ;math_routines.c: 97: uint8_t j = n;
  4603  001670  C10E  F11A         	movff	findClosest@n,findClosest@j
  4604                           
  4605                           ;math_routines.c: 98: uint8_t mid = 0;
  4606  001674  0E00               	movlw	0
  4607  001676  6F1B               	movwf	findClosest@mid& (0+255),b
  4608                           
  4609                           ;math_routines.c: 100: while (i < j)
  4610  001678  D0D7               	goto	l884
  4611  00167A                     
  4612                           ; BSR set to: 1
  4613                           ;math_routines.c: 101: {
  4614                           ;math_routines.c: 102: mid = (i + j) / 2;
  4615                           
  4616                           ; BSR set to: 1
  4617  00167A  5119               	movf	findClosest@i& (0+255),w,b
  4618  00167C  251A               	addwf	findClosest@j& (0+255),w,b
  4619  00167E  6F00               	movwf	___awdiv@dividend& (0+255),b
  4620  001680  6B01               	clrf	(___awdiv@dividend+1)& (0+255),b
  4621  001682  3701               	rlcf	(___awdiv@dividend+1)& (0+255),f,b
  4622  001684  0E00               	movlw	0
  4623  001686  6F03               	movwf	(___awdiv@divisor+1)& (0+255),b
  4624  001688  0E02               	movlw	2
  4625  00168A  6F02               	movwf	___awdiv@divisor& (0+255),b
  4626  00168C  EC0A  F017         	call	___awdiv	;wreg free
  4627  001690  0101               	movlb	1	; () banked
  4628  001692  5100               	movf	?___awdiv& (0+255),w,b
  4629  001694  6F1B               	movwf	findClosest@mid& (0+255),b
  4630                           
  4631                           ; BSR set to: 1
  4632                           ;math_routines.c: 104: if (arr[mid] == target)
  4633  001696  511B               	movf	findClosest@mid& (0+255),w,b
  4634  001698  0D01               	mullw	1
  4635  00169A  50F3               	movf	prodl,w,c
  4636  00169C  250C               	addwf	findClosest@arr& (0+255),w,b
  4637  00169E  6ED9               	movwf	fsr2l,c
  4638  0016A0  50F4               	movf	prodh,w,c
  4639  0016A2  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4640  0016A4  6EDA               	movwf	fsr2h,c
  4641  0016A6  510F               	movf	findClosest@target& (0+255),w,b
  4642  0016A8  18DE               	xorwf	postinc2,w,c
  4643  0016AA  A4D8               	btfss	status,2,c
  4644  0016AC  D002               	goto	l879
  4645                           
  4646                           ; BSR set to: 1
  4647                           ;math_routines.c: 106: return mid;
  4648  0016AE  511B               	movf	findClosest@mid& (0+255),w,b
  4649                           
  4650                           ; BSR set to: 1
  4651  0016B0  0012               	return	
  4652  0016B2                     l879:
  4653                           
  4654                           ; BSR set to: 1
  4655                           ;math_routines.c: 110: if (target < arr[mid])
  4656                           
  4657                           ; BSR set to: 1
  4658  0016B2  511B               	movf	findClosest@mid& (0+255),w,b
  4659  0016B4  0D01               	mullw	1
  4660  0016B6  50F3               	movf	prodl,w,c
  4661  0016B8  250C               	addwf	findClosest@arr& (0+255),w,b
  4662  0016BA  6ED9               	movwf	fsr2l,c
  4663  0016BC  50F4               	movf	prodh,w,c
  4664  0016BE  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4665  0016C0  6EDA               	movwf	fsr2h,c
  4666  0016C2  50DE               	movf	postinc2,w,c
  4667  0016C4  5D0F               	subwf	findClosest@target& (0+255),w,b
  4668  0016C6  B0D8               	btfsc	status,0,c
  4669  0016C8  D056               	goto	l880
  4670                           
  4671                           ; BSR set to: 1
  4672                           ;math_routines.c: 111: {
  4673                           ;math_routines.c: 115: if (mid > 0 && target > arr[mid - 1])
  4674  0016CA  511B               	movf	findClosest@mid& (0+255),w,b
  4675  0016CC  B4D8               	btfsc	status,2,c
  4676  0016CE  D050               	goto	l883
  4677                           
  4678                           ; BSR set to: 1
  4679  0016D0  0EFF               	movlw	255
  4680  0016D2  6F10               	movwf	??_findClosest& (0+255),b
  4681  0016D4  0EFF               	movlw	255
  4682  0016D6  6F11               	movwf	(??_findClosest+1)& (0+255),b
  4683  0016D8  511B               	movf	findClosest@mid& (0+255),w,b
  4684  0016DA  6F12               	movwf	(??_findClosest+2)& (0+255),b
  4685  0016DC  6B13               	clrf	(??_findClosest+3)& (0+255),b
  4686  0016DE  5110               	movf	??_findClosest& (0+255),w,b
  4687  0016E0  2712               	addwf	(??_findClosest+2)& (0+255),f,b
  4688  0016E2  5111               	movf	(??_findClosest+1)& (0+255),w,b
  4689  0016E4  2313               	addwfc	(??_findClosest+3)& (0+255),f,b
  4690  0016E6  5112               	movf	(??_findClosest+2)& (0+255),w,b
  4691  0016E8  250C               	addwf	findClosest@arr& (0+255),w,b
  4692  0016EA  6ED9               	movwf	fsr2l,c
  4693  0016EC  5113               	movf	(??_findClosest+3)& (0+255),w,b
  4694  0016EE  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4695  0016F0  6EDA               	movwf	fsr2h,c
  4696  0016F2  510F               	movf	findClosest@target& (0+255),w,b
  4697  0016F4  5CDE               	subwf	postinc2,w,c
  4698  0016F6  B0D8               	btfsc	status,0,c
  4699  0016F8  D03B               	goto	l883
  4700                           
  4701                           ; BSR set to: 1
  4702                           ;math_routines.c: 116: {
  4703                           ;math_routines.c: 117: uint8_t a = getClosest(arr[mid - 1], arr[mid], target);
  4704  0016FA  511B               	movf	findClosest@mid& (0+255),w,b
  4705  0016FC  0D01               	mullw	1
  4706  0016FE  50F3               	movf	prodl,w,c
  4707  001700  250C               	addwf	findClosest@arr& (0+255),w,b
  4708  001702  6ED9               	movwf	fsr2l,c
  4709  001704  50F4               	movf	prodh,w,c
  4710  001706  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4711  001708  6EDA               	movwf	fsr2h,c
  4712  00170A  50DF               	movf	indf2,w,c
  4713  00170C  6F00               	movwf	getClosest@val2& (0+255),b
  4714  00170E  C10F  F101         	movff	findClosest@target,getClosest@target
  4715  001712  0EFF               	movlw	255
  4716  001714  6F10               	movwf	??_findClosest& (0+255),b
  4717  001716  0EFF               	movlw	255
  4718  001718  6F11               	movwf	(??_findClosest+1)& (0+255),b
  4719  00171A  511B               	movf	findClosest@mid& (0+255),w,b
  4720  00171C  6F12               	movwf	(??_findClosest+2)& (0+255),b
  4721  00171E  6B13               	clrf	(??_findClosest+3)& (0+255),b
  4722  001720  5110               	movf	??_findClosest& (0+255),w,b
  4723  001722  2712               	addwf	(??_findClosest+2)& (0+255),f,b
  4724  001724  5111               	movf	(??_findClosest+1)& (0+255),w,b
  4725  001726  2313               	addwfc	(??_findClosest+3)& (0+255),f,b
  4726  001728  5112               	movf	(??_findClosest+2)& (0+255),w,b
  4727  00172A  250C               	addwf	findClosest@arr& (0+255),w,b
  4728  00172C  6ED9               	movwf	fsr2l,c
  4729  00172E  5113               	movf	(??_findClosest+3)& (0+255),w,b
  4730  001730  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4731  001732  6EDA               	movwf	fsr2h,c
  4732  001734  50DF               	movf	indf2,w,c
  4733  001736  EC2B  F019         	call	_getClosest
  4734  00173A  0101               	movlb	1	; () banked
  4735  00173C  6F17               	movwf	findClosest@a& (0+255),b
  4736                           
  4737                           ; BSR set to: 1
  4738                           ;math_routines.c: 120: if (a == arr[mid - 1])
  4739  00173E  0EFF               	movlw	255
  4740  001740  6F10               	movwf	??_findClosest& (0+255),b
  4741  001742  0EFF               	movlw	255
  4742  001744  6F11               	movwf	(??_findClosest+1)& (0+255),b
  4743  001746  511B               	movf	findClosest@mid& (0+255),w,b
  4744  001748  6F12               	movwf	(??_findClosest+2)& (0+255),b
  4745  00174A  6B13               	clrf	(??_findClosest+3)& (0+255),b
  4746  00174C  5110               	movf	??_findClosest& (0+255),w,b
  4747  00174E  2712               	addwf	(??_findClosest+2)& (0+255),f,b
  4748  001750  5111               	movf	(??_findClosest+1)& (0+255),w,b
  4749  001752  2313               	addwfc	(??_findClosest+3)& (0+255),f,b
  4750  001754  5112               	movf	(??_findClosest+2)& (0+255),w,b
  4751  001756  250C               	addwf	findClosest@arr& (0+255),w,b
  4752  001758  6ED9               	movwf	fsr2l,c
  4753  00175A  5113               	movf	(??_findClosest+3)& (0+255),w,b
  4754  00175C  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4755  00175E  6EDA               	movwf	fsr2h,c
  4756  001760  5117               	movf	findClosest@a& (0+255),w,b
  4757  001762  18DE               	xorwf	postinc2,w,c
  4758  001764  A4D8               	btfss	status,2,c
  4759  001766  D002               	goto	l882
  4760                           
  4761                           ; BSR set to: 1
  4762                           ;math_routines.c: 121: return mid - 1;
  4763  001768  051B               	decf	findClosest@mid& (0+255),w,b
  4764                           
  4765                           ; BSR set to: 1
  4766  00176A  0012               	return	
  4767  00176C                     l882:
  4768                           
  4769                           ; BSR set to: 1
  4770                           ;math_routines.c: 122: else
  4771                           ;math_routines.c: 123: return mid;
  4772                           
  4773                           ; BSR set to: 1
  4774  00176C  511B               	movf	findClosest@mid& (0+255),w,b
  4775                           
  4776                           ; BSR set to: 1
  4777  00176E  0012               	return	
  4778  001770                     l883:
  4779                           
  4780                           ; BSR set to: 1
  4781                           ;math_routines.c: 124: }
  4782                           ;math_routines.c: 128: j = mid;
  4783                           
  4784                           ; BSR set to: 1
  4785  001770  C11B  F11A         	movff	findClosest@mid,findClosest@j
  4786                           
  4787                           ;math_routines.c: 129: }
  4788  001774  D059               	goto	l884
  4789  001776                     l880:
  4790                           
  4791                           ; BSR set to: 1
  4792                           ;math_routines.c: 130: else
  4793                           ;math_routines.c: 131: {
  4794                           ;math_routines.c: 132: if (mid < n - 1 && target < arr[mid + 1])
  4795                           
  4796                           ; BSR set to: 1
  4797  001776  0EFF               	movlw	255
  4798  001778  6F10               	movwf	??_findClosest& (0+255),b
  4799  00177A  0EFF               	movlw	255
  4800  00177C  6F11               	movwf	(??_findClosest+1)& (0+255),b
  4801  00177E  510E               	movf	findClosest@n& (0+255),w,b
  4802  001780  6F12               	movwf	(??_findClosest+2)& (0+255),b
  4803  001782  6B13               	clrf	(??_findClosest+3)& (0+255),b
  4804  001784  5110               	movf	??_findClosest& (0+255),w,b
  4805  001786  2712               	addwf	(??_findClosest+2)& (0+255),f,b
  4806  001788  5111               	movf	(??_findClosest+1)& (0+255),w,b
  4807  00178A  2313               	addwfc	(??_findClosest+3)& (0+255),f,b
  4808  00178C  511B               	movf	findClosest@mid& (0+255),w,b
  4809  00178E  6F14               	movwf	(??_findClosest+4)& (0+255),b
  4810  001790  6B15               	clrf	(??_findClosest+5)& (0+255),b
  4811  001792  5112               	movf	(??_findClosest+2)& (0+255),w,b
  4812  001794  5D14               	subwf	(??_findClosest+4)& (0+255),w,b
  4813  001796  5115               	movf	(??_findClosest+5)& (0+255),w,b
  4814  001798  0A80               	xorlw	128
  4815  00179A  6F16               	movwf	(??_findClosest+6)& (0+255),b
  4816  00179C  5113               	movf	(??_findClosest+3)& (0+255),w,b
  4817  00179E  0A80               	xorlw	128
  4818  0017A0  5916               	subwfb	(??_findClosest+6)& (0+255),w,b
  4819  0017A2  B0D8               	btfsc	status,0,c
  4820  0017A4  D03F               	goto	l887
  4821                           
  4822                           ; BSR set to: 1
  4823  0017A6  511B               	movf	findClosest@mid& (0+255),w,b
  4824  0017A8  6F10               	movwf	??_findClosest& (0+255),b
  4825  0017AA  6B11               	clrf	(??_findClosest+1)& (0+255),b
  4826  0017AC  0E01               	movlw	1
  4827  0017AE  2710               	addwf	??_findClosest& (0+255),f,b
  4828  0017B0  0E00               	movlw	0
  4829  0017B2  2311               	addwfc	(??_findClosest+1)& (0+255),f,b
  4830  0017B4  5110               	movf	??_findClosest& (0+255),w,b
  4831  0017B6  250C               	addwf	findClosest@arr& (0+255),w,b
  4832  0017B8  6ED9               	movwf	fsr2l,c
  4833  0017BA  5111               	movf	(??_findClosest+1)& (0+255),w,b
  4834  0017BC  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4835  0017BE  6EDA               	movwf	fsr2h,c
  4836  0017C0  50DE               	movf	postinc2,w,c
  4837  0017C2  5D0F               	subwf	findClosest@target& (0+255),w,b
  4838  0017C4  B0D8               	btfsc	status,0,c
  4839  0017C6  D02E               	goto	l887
  4840                           
  4841                           ; BSR set to: 1
  4842                           ;math_routines.c: 133: {
  4843                           ;math_routines.c: 134: uint8_t a = getClosest(arr[mid], arr[mid + 1], target);
  4844  0017C8  511B               	movf	findClosest@mid& (0+255),w,b
  4845  0017CA  6F10               	movwf	??_findClosest& (0+255),b
  4846  0017CC  6B11               	clrf	(??_findClosest+1)& (0+255),b
  4847  0017CE  0E01               	movlw	1
  4848  0017D0  2710               	addwf	??_findClosest& (0+255),f,b
  4849  0017D2  0E00               	movlw	0
  4850  0017D4  2311               	addwfc	(??_findClosest+1)& (0+255),f,b
  4851  0017D6  5110               	movf	??_findClosest& (0+255),w,b
  4852  0017D8  250C               	addwf	findClosest@arr& (0+255),w,b
  4853  0017DA  6ED9               	movwf	fsr2l,c
  4854  0017DC  5111               	movf	(??_findClosest+1)& (0+255),w,b
  4855  0017DE  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4856  0017E0  6EDA               	movwf	fsr2h,c
  4857  0017E2  50DF               	movf	indf2,w,c
  4858  0017E4  6F00               	movwf	getClosest@val2& (0+255),b
  4859  0017E6  C10F  F101         	movff	findClosest@target,getClosest@target
  4860  0017EA  511B               	movf	findClosest@mid& (0+255),w,b
  4861  0017EC  0D01               	mullw	1
  4862  0017EE  50F3               	movf	prodl,w,c
  4863  0017F0  250C               	addwf	findClosest@arr& (0+255),w,b
  4864  0017F2  6ED9               	movwf	fsr2l,c
  4865  0017F4  50F4               	movf	prodh,w,c
  4866  0017F6  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4867  0017F8  6EDA               	movwf	fsr2h,c
  4868  0017FA  50DF               	movf	indf2,w,c
  4869  0017FC  EC2B  F019         	call	_getClosest
  4870  001800  0101               	movlb	1	; () banked
  4871  001802  6F18               	movwf	findClosest@a_2186& (0+255),b
  4872                           
  4873                           ; BSR set to: 1
  4874                           ;math_routines.c: 136: if (a == arr[mid])
  4875  001804  511B               	movf	findClosest@mid& (0+255),w,b
  4876  001806  0D01               	mullw	1
  4877  001808  50F3               	movf	prodl,w,c
  4878  00180A  250C               	addwf	findClosest@arr& (0+255),w,b
  4879  00180C  6ED9               	movwf	fsr2l,c
  4880  00180E  50F4               	movf	prodh,w,c
  4881  001810  210D               	addwfc	(findClosest@arr+1)& (0+255),w,b
  4882  001812  6EDA               	movwf	fsr2h,c
  4883  001814  5118               	movf	findClosest@a_2186& (0+255),w,b
  4884  001816  18DE               	xorwf	postinc2,w,c
  4885  001818  A4D8               	btfss	status,2,c
  4886  00181A  D002               	goto	l886
  4887                           
  4888                           ; BSR set to: 1
  4889                           ;math_routines.c: 137: return mid;
  4890  00181C  511B               	movf	findClosest@mid& (0+255),w,b
  4891                           
  4892                           ; BSR set to: 1
  4893  00181E  0012               	return	
  4894  001820                     l886:
  4895                           
  4896                           ; BSR set to: 1
  4897                           ;math_routines.c: 138: else
  4898                           ;math_routines.c: 139: return mid + 1;
  4899                           
  4900                           ; BSR set to: 1
  4901  001820  291B               	incf	findClosest@mid& (0+255),w,b
  4902                           
  4903                           ; BSR set to: 1
  4904  001822  0012               	return	
  4905  001824                     l887:
  4906                           
  4907                           ; BSR set to: 1
  4908                           ;math_routines.c: 140: }
  4909                           ;math_routines.c: 143: i = mid + 1;
  4910                           
  4911                           ; BSR set to: 1
  4912                           
  4913                           ; BSR set to: 1
  4914  001824  291B               	incf	findClosest@mid& (0+255),w,b
  4915  001826  6F19               	movwf	findClosest@i& (0+255),b
  4916  001828                     l884:
  4917                           
  4918                           ; BSR set to: 1
  4919                           
  4920                           ; BSR set to: 1
  4921  001828  511A               	movf	findClosest@j& (0+255),w,b
  4922  00182A  5D19               	subwf	findClosest@i& (0+255),w,b
  4923  00182C  A0D8               	btfss	status,0,c
  4924  00182E  D725               	goto	l878
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;math_routines.c: 144: }
  4928                           ;math_routines.c: 145: }
  4929                           ;math_routines.c: 149: return mid;
  4930                           
  4931                           ; BSR set to: 1
  4932  001830  511B               	movf	findClosest@mid& (0+255),w,b
  4933  001832  0012               	return	
  4934  001834                     __end_of_findClosest:
  4935                           	opt stack 0
  4936                           tosu	equ	0xFFF
  4937                           tosh	equ	0xFFE
  4938                           tosl	equ	0xFFD
  4939                           pclath	equ	0xFFA
  4940                           prodh	equ	0xFF4
  4941                           prodl	equ	0xFF3
  4942                           intcon	equ	0xFF2
  4943                           postinc0	equ	0xFEE
  4944                           wreg	equ	0xFE8
  4945                           indf2	equ	0xFDF
  4946                           postinc2	equ	0xFDE
  4947                           fsr2h	equ	0xFDA
  4948                           fsr2l	equ	0xFD9
  4949                           status	equ	0xFD8
  4950                           
  4951 ;; *************** function _getClosest *****************
  4952 ;; Defined at:
  4953 ;;		line 158 in file "math_routines.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  val1            1    wreg     unsigned char 
  4956 ;;  val2            1    0[BANK1 ] unsigned char 
  4957 ;;  target          1    1[BANK1 ] unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  val1            1   11[BANK1 ] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      unsigned char 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4969 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4970 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4971 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4972 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4973 ;;Total ram usage:       12 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:   18
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_findClosest
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text32
  4984  003256                     __ptext32:
  4985                           	opt stack 0
  4986  003256                     _getClosest:
  4987                           	opt stack 10
  4988                           
  4989                           ; BSR set to: 1
  4990                           ;incstack = 0
  4991                           ;getClosest@val1 stored from wreg
  4992  003256  0101               	movlb	1	; () banked
  4993  003258  6F0B               	movwf	getClosest@val1& (0+255),b
  4994                           
  4995                           ;math_routines.c: 160: if (target - val1 >= val2 - target)
  4996  00325A  0101               	movlb	1	; () banked
  4997  00325C  5101               	movf	getClosest@target& (0+255),w,b
  4998  00325E  6F02               	movwf	??_getClosest& (0+255),b
  4999  003260  6B03               	clrf	(??_getClosest+1)& (0+255),b
  5000  003262  1F02               	comf	??_getClosest& (0+255),f,b
  5001  003264  1F03               	comf	(??_getClosest+1)& (0+255),f,b
  5002  003266  4B02               	infsnz	??_getClosest& (0+255),f,b
  5003  003268  2B03               	incf	(??_getClosest+1)& (0+255),f,b
  5004  00326A  5100               	movf	getClosest@val2& (0+255),w,b
  5005  00326C  6F04               	movwf	(??_getClosest+2)& (0+255),b
  5006  00326E  6B05               	clrf	(??_getClosest+3)& (0+255),b
  5007  003270  5102               	movf	??_getClosest& (0+255),w,b
  5008  003272  2704               	addwf	(??_getClosest+2)& (0+255),f,b
  5009  003274  5103               	movf	(??_getClosest+1)& (0+255),w,b
  5010  003276  2305               	addwfc	(??_getClosest+3)& (0+255),f,b
  5011  003278  510B               	movf	getClosest@val1& (0+255),w,b
  5012  00327A  6F06               	movwf	(??_getClosest+4)& (0+255),b
  5013  00327C  6B07               	clrf	(??_getClosest+5)& (0+255),b
  5014  00327E  1F06               	comf	(??_getClosest+4)& (0+255),f,b
  5015  003280  1F07               	comf	(??_getClosest+5)& (0+255),f,b
  5016  003282  4B06               	infsnz	(??_getClosest+4)& (0+255),f,b
  5017  003284  2B07               	incf	(??_getClosest+5)& (0+255),f,b
  5018  003286  5101               	movf	getClosest@target& (0+255),w,b
  5019  003288  6F08               	movwf	(??_getClosest+6)& (0+255),b
  5020  00328A  6B09               	clrf	(??_getClosest+7)& (0+255),b
  5021  00328C  5106               	movf	(??_getClosest+4)& (0+255),w,b
  5022  00328E  2708               	addwf	(??_getClosest+6)& (0+255),f,b
  5023  003290  5107               	movf	(??_getClosest+5)& (0+255),w,b
  5024  003292  2309               	addwfc	(??_getClosest+7)& (0+255),f,b
  5025  003294  5104               	movf	(??_getClosest+2)& (0+255),w,b
  5026  003296  5D08               	subwf	(??_getClosest+6)& (0+255),w,b
  5027  003298  5109               	movf	(??_getClosest+7)& (0+255),w,b
  5028  00329A  0A80               	xorlw	128
  5029  00329C  6F0A               	movwf	(??_getClosest+8)& (0+255),b
  5030  00329E  5105               	movf	(??_getClosest+3)& (0+255),w,b
  5031  0032A0  0A80               	xorlw	128
  5032  0032A2  590A               	subwfb	(??_getClosest+8)& (0+255),w,b
  5033  0032A4  A0D8               	btfss	status,0,c
  5034  0032A6  D002               	goto	l891
  5035                           
  5036                           ; BSR set to: 1
  5037                           ;math_routines.c: 161: return val2;
  5038  0032A8  5100               	movf	getClosest@val2& (0+255),w,b
  5039                           
  5040                           ; BSR set to: 1
  5041                           
  5042                           ; BSR set to: 1
  5043  0032AA  0012               	return	
  5044  0032AC                     l891:
  5045                           
  5046                           ; BSR set to: 1
  5047                           ;math_routines.c: 162: else
  5048                           ;math_routines.c: 163: return val1;
  5049                           
  5050                           ; BSR set to: 1
  5051  0032AC  510B               	movf	getClosest@val1& (0+255),w,b
  5052                           
  5053                           ; BSR set to: 1
  5054  0032AE  0012               	return	
  5055  0032B0                     __end_of_getClosest:
  5056                           	opt stack 0
  5057                           tosu	equ	0xFFF
  5058                           tosh	equ	0xFFE
  5059                           tosl	equ	0xFFD
  5060                           pclath	equ	0xFFA
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           intcon	equ	0xFF2
  5064                           postinc0	equ	0xFEE
  5065                           wreg	equ	0xFE8
  5066                           indf2	equ	0xFDF
  5067                           postinc2	equ	0xFDE
  5068                           fsr2h	equ	0xFDA
  5069                           fsr2l	equ	0xFD9
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function ___awdiv *****************
  5073 ;; Defined at:
  5074 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  dividend        2    0[BANK1 ] int 
  5077 ;;  divisor         2    2[BANK1 ] int 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  quotient        2    6[BANK1 ] int 
  5080 ;;  sign            1    5[BANK1 ] unsigned char 
  5081 ;;  counter         1    4[BANK1 ] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  2    0[BANK1 ] int 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5091 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5094 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;Total ram usage:        8 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:   18
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_findClosest
  5102 ;;		_map
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text33
  5107  002E14                     __ptext33:
  5108                           	opt stack 0
  5109  002E14                     ___awdiv:
  5110                           	opt stack 10
  5111                           
  5112                           ; BSR set to: 1
  5113                           ;incstack = 0
  5114  002E14  0E00               	movlw	0
  5115  002E16  0101               	movlb	1	; () banked
  5116  002E18  6F05               	movwf	___awdiv@sign& (0+255),b
  5117                           
  5118                           ; BSR set to: 1
  5119  002E1A  AF03               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5120  002E1C  D006               	goto	l1724
  5121                           
  5122                           ; BSR set to: 1
  5123  002E1E  6D02               	negf	___awdiv@divisor& (0+255),b
  5124  002E20  1F03               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5125  002E22  B0D8               	btfsc	status,0,c
  5126  002E24  2B03               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5127                           
  5128                           ; BSR set to: 1
  5129  002E26  0E01               	movlw	1
  5130  002E28  6F05               	movwf	___awdiv@sign& (0+255),b
  5131  002E2A                     l1724:
  5132                           
  5133                           ; BSR set to: 1
  5134                           
  5135                           ; BSR set to: 1
  5136  002E2A  AF01               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5137  002E2C  D006               	goto	l1725
  5138                           
  5139                           ; BSR set to: 1
  5140  002E2E  6D00               	negf	___awdiv@dividend& (0+255),b
  5141  002E30  1F01               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5142  002E32  B0D8               	btfsc	status,0,c
  5143  002E34  2B01               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5144                           
  5145                           ; BSR set to: 1
  5146  002E36  0E01               	movlw	1
  5147  002E38  1B05               	xorwf	___awdiv@sign& (0+255),f,b
  5148  002E3A                     l1725:
  5149                           
  5150                           ; BSR set to: 1
  5151                           
  5152                           ; BSR set to: 1
  5153  002E3A  0E00               	movlw	0
  5154  002E3C  6F07               	movwf	(___awdiv@quotient+1)& (0+255),b
  5155  002E3E  0E00               	movlw	0
  5156  002E40  6F06               	movwf	___awdiv@quotient& (0+255),b
  5157                           
  5158                           ; BSR set to: 1
  5159  002E42  5102               	movf	___awdiv@divisor& (0+255),w,b
  5160  002E44  1103               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5161  002E46  B4D8               	btfsc	status,2,c
  5162  002E48  D01C               	goto	l1732
  5163                           
  5164                           ; BSR set to: 1
  5165  002E4A  0E01               	movlw	1
  5166  002E4C  6F04               	movwf	___awdiv@counter& (0+255),b
  5167  002E4E  D004               	goto	l1727
  5168  002E50                     
  5169                           ; BSR set to: 1
  5170                           
  5171                           ; BSR set to: 1
  5172  002E50  90D8               	bcf	status,0,c
  5173  002E52  3702               	rlcf	___awdiv@divisor& (0+255),f,b
  5174  002E54  3703               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5175  002E56  2B04               	incf	___awdiv@counter& (0+255),f,b
  5176  002E58                     l1727:
  5177                           
  5178                           ; BSR set to: 1
  5179                           
  5180                           ; BSR set to: 1
  5181  002E58  AF03               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5182  002E5A  D7FA               	goto	l1728
  5183  002E5C                     u6720:
  5184                           
  5185                           ; BSR set to: 1
  5186                           
  5187                           ; BSR set to: 1
  5188                           
  5189                           ; BSR set to: 1
  5190  002E5C  90D8               	bcf	status,0,c
  5191  002E5E  3706               	rlcf	___awdiv@quotient& (0+255),f,b
  5192  002E60  3707               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5193                           
  5194                           ; BSR set to: 1
  5195  002E62  5102               	movf	___awdiv@divisor& (0+255),w,b
  5196  002E64  5D00               	subwf	___awdiv@dividend& (0+255),w,b
  5197  002E66  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5198  002E68  5901               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5199  002E6A  A0D8               	btfss	status,0,c
  5200  002E6C  D005               	goto	l1731
  5201                           
  5202                           ; BSR set to: 1
  5203  002E6E  5102               	movf	___awdiv@divisor& (0+255),w,b
  5204  002E70  5F00               	subwf	___awdiv@dividend& (0+255),f,b
  5205  002E72  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5206  002E74  5B01               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5207                           
  5208                           ; BSR set to: 1
  5209  002E76  8106               	bsf	___awdiv@quotient& (0+255),0,b
  5210  002E78                     l1731:
  5211                           
  5212                           ; BSR set to: 1
  5213                           
  5214                           ; BSR set to: 1
  5215  002E78  90D8               	bcf	status,0,c
  5216  002E7A  3303               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5217  002E7C  3302               	rrcf	___awdiv@divisor& (0+255),f,b
  5218                           
  5219                           ; BSR set to: 1
  5220  002E7E  2F04               	decfsz	___awdiv@counter& (0+255),f,b
  5221  002E80  D7ED               	goto	u6720
  5222  002E82                     l1732:
  5223                           
  5224                           ; BSR set to: 1
  5225                           
  5226                           ; BSR set to: 1
  5227                           
  5228                           ; BSR set to: 1
  5229  002E82  5105               	movf	___awdiv@sign& (0+255),w,b
  5230  002E84  B4D8               	btfsc	status,2,c
  5231  002E86  D004               	goto	l1733
  5232                           
  5233                           ; BSR set to: 1
  5234  002E88  6D06               	negf	___awdiv@quotient& (0+255),b
  5235  002E8A  1F07               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5236  002E8C  B0D8               	btfsc	status,0,c
  5237  002E8E  2B07               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5238  002E90                     l1733:
  5239                           
  5240                           ; BSR set to: 1
  5241                           
  5242                           ; BSR set to: 1
  5243  002E90  C106  F100         	movff	___awdiv@quotient,?___awdiv
  5244  002E94  C107  F101         	movff	___awdiv@quotient+1,?___awdiv+1
  5245  002E98  0012               	return	
  5246  002E9A                     __end_of___awdiv:
  5247                           	opt stack 0
  5248                           tosu	equ	0xFFF
  5249                           tosh	equ	0xFFE
  5250                           tosl	equ	0xFFD
  5251                           pclath	equ	0xFFA
  5252                           prodh	equ	0xFF4
  5253                           prodl	equ	0xFF3
  5254                           intcon	equ	0xFF2
  5255                           postinc0	equ	0xFEE
  5256                           wreg	equ	0xFE8
  5257                           indf2	equ	0xFDF
  5258                           postinc2	equ	0xFDE
  5259                           fsr2h	equ	0xFDA
  5260                           fsr2l	equ	0xFD9
  5261                           status	equ	0xFD8
  5262                           
  5263 ;; *************** function _drv_cny70_init *****************
  5264 ;; Defined at:
  5265 ;;		line 4 in file "drv_cny70.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5283 ;;Total ram usage:        0 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:   19
  5286 ;; This function calls:
  5287 ;;		_IOCBF0_SetInterruptHandler
  5288 ;;		_IOCBF1_SetInterruptHandler
  5289 ;;		_IOCBF2_SetInterruptHandler
  5290 ;;		_IOCBF3_SetInterruptHandler
  5291 ;; This function is called by:
  5292 ;;		_main
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text34
  5297  00335A                     __ptext34:
  5298                           	opt stack 0
  5299  00335A                     _drv_cny70_init:
  5300                           	opt stack 11
  5301                           
  5302                           ;drv_cny70.c: 6: IOCBF0_SetInterruptHandler(borde_isr);
  5303                           
  5304                           ; BSR set to: 1
  5305                           ;incstack = 0
  5306  00335A  0EB0               	movlw	low _borde_isr
  5307  00335C  0101               	movlb	1	; () banked
  5308  00335E  6F00               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler& (0+255),b
  5309  003360  0E32               	movlw	high _borde_isr
  5310  003362  6F01               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5311  003364  0E00               	movlw	low (_borde_isr shr (0+16))
  5312  003366  6F02               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5313  003368  EC07  F01F         	call	_IOCBF0_SetInterruptHandler	;wreg free
  5314                           
  5315                           ;drv_cny70.c: 7: IOCBF1_SetInterruptHandler(borde_isr);
  5316  00336C  0EB0               	movlw	low _borde_isr
  5317  00336E  0101               	movlb	1	; () banked
  5318  003370  6F00               	movwf	IOCBF1_SetInterruptHandler@InterruptHandler& (0+255),b
  5319  003372  0E32               	movlw	high _borde_isr
  5320  003374  6F01               	movwf	(IOCBF1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5321  003376  0E00               	movlw	low (_borde_isr shr (0+16))
  5322  003378  6F02               	movwf	(IOCBF1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5323  00337A  EC00  F01F         	call	_IOCBF1_SetInterruptHandler	;wreg free
  5324                           
  5325                           ;drv_cny70.c: 8: IOCBF2_SetInterruptHandler(borde_isr);
  5326  00337E  0EB0               	movlw	low _borde_isr
  5327  003380  0101               	movlb	1	; () banked
  5328  003382  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
  5329  003384  0E32               	movlw	high _borde_isr
  5330  003386  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5331  003388  0E00               	movlw	low (_borde_isr shr (0+16))
  5332  00338A  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5333  00338C  ECF9  F01E         	call	_IOCBF2_SetInterruptHandler	;wreg free
  5334                           
  5335                           ;drv_cny70.c: 9: IOCBF3_SetInterruptHandler(borde_isr);
  5336  003390  0EB0               	movlw	low _borde_isr
  5337  003392  0101               	movlb	1	; () banked
  5338  003394  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
  5339  003396  0E32               	movlw	high _borde_isr
  5340  003398  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5341  00339A  0E00               	movlw	low (_borde_isr shr (0+16))
  5342  00339C  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5343  00339E  ECF2  F01E         	call	_IOCBF3_SetInterruptHandler	;wreg free
  5344                           
  5345                           ;drv_cny70.c: 10: bordes.frontleft = 0;
  5346  0033A2  905D               	bcf	_bordes,0,c	;volatile
  5347                           
  5348                           ;drv_cny70.c: 11: bordes.frontright = 0;
  5349  0033A4  925D               	bcf	_bordes,1,c	;volatile
  5350                           
  5351                           ;drv_cny70.c: 12: bordes.backleft = 0;
  5352  0033A6  945D               	bcf	_bordes,2,c	;volatile
  5353                           
  5354                           ;drv_cny70.c: 13: bordes.backright = 0;
  5355  0033A8  965D               	bcf	_bordes,3,c	;volatile
  5356  0033AA  0012               	return		;funcret
  5357  0033AC                     __end_of_drv_cny70_init:
  5358                           	opt stack 0
  5359                           tosu	equ	0xFFF
  5360                           tosh	equ	0xFFE
  5361                           tosl	equ	0xFFD
  5362                           pclath	equ	0xFFA
  5363                           prodh	equ	0xFF4
  5364                           prodl	equ	0xFF3
  5365                           intcon	equ	0xFF2
  5366                           postinc0	equ	0xFEE
  5367                           wreg	equ	0xFE8
  5368                           indf2	equ	0xFDF
  5369                           postinc2	equ	0xFDE
  5370                           fsr2h	equ	0xFDA
  5371                           fsr2l	equ	0xFD9
  5372                           status	equ	0xFD8
  5373                           
  5374 ;; *************** function _detectarPosInicio *****************
  5375 ;; Defined at:
  5376 ;;		line 5 in file "logica.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;		None
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  1    wreg      void 
  5383 ;; Registers used:
  5384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;Total ram usage:        0 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:   19
  5397 ;; This function calls:
  5398 ;;		_getLowestDistanceOnSensors_func
  5399 ;; This function is called by:
  5400 ;;		_main
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text35
  5405  003DAC                     __ptext35:
  5406                           	opt stack 0
  5407  003DAC                     _detectarPosInicio:
  5408                           	opt stack 11
  5409                           
  5410                           ;logica.c: 7: getLowestDistanceOnSensors_func();
  5411                           
  5412                           ;incstack = 0
  5413  003DAC  ECA0  F018         	call	_getLowestDistanceOnSensors_func	;wreg free
  5414                           
  5415                           ;logica.c: 8: posInicio.distancia = getLowestDistanceOnSensors.distancia;
  5416  003DB0  C0CA  F0CB         	movff	_getLowestDistanceOnSensors+1,_posInicio
  5417                           
  5418                           ;logica.c: 9: posInicio.lado = getLowestDistanceOnSensors.lado_ID;
  5419  003DB4  C0C9  F0CC         	movff	_getLowestDistanceOnSensors,_posInicio+1
  5420  003DB8  0012               	return		;funcret
  5421  003DBA                     __end_of_detectarPosInicio:
  5422                           	opt stack 0
  5423                           tosu	equ	0xFFF
  5424                           tosh	equ	0xFFE
  5425                           tosl	equ	0xFFD
  5426                           pclath	equ	0xFFA
  5427                           prodh	equ	0xFF4
  5428                           prodl	equ	0xFF3
  5429                           intcon	equ	0xFF2
  5430                           postinc0	equ	0xFEE
  5431                           wreg	equ	0xFE8
  5432                           indf2	equ	0xFDF
  5433                           postinc2	equ	0xFDE
  5434                           fsr2h	equ	0xFDA
  5435                           fsr2l	equ	0xFD9
  5436                           status	equ	0xFD8
  5437                           
  5438 ;; *************** function _getLowestDistanceOnSensors_func *****************
  5439 ;; Defined at:
  5440 ;;		line 12 in file "logica.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  distancias      4    2[BANK1 ] unsigned char [4]
  5445 ;;  i               1    7[BANK1 ] unsigned char 
  5446 ;;  smallest_val    1    6[BANK1 ] unsigned char 
  5447 ;;  ladoMenor       1    1[BANK1 ] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;Total ram usage:        8 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:   18
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_detectarPosInicio
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text36
  5472  003140                     __ptext36:
  5473                           	opt stack 0
  5474  003140                     _getLowestDistanceOnSensors_func:
  5475                           	opt stack 11
  5476                           
  5477                           ;logica.c: 14: uint8_t distancias[4];
  5478                           ;logica.c: 15: distancias[0] = usonic.distancia.back;
  5479                           
  5480                           ;incstack = 0
  5481  003140  C0AE  F102         	movff	_usonic+3,getLowestDistanceOnSensors_func@distancias	;volatile
  5482                           
  5483                           ;logica.c: 16: distancias[1] = usonic.distancia.front;
  5484  003144  C0AD  F103         	movff	_usonic+2,getLowestDistanceOnSensors_func@distancias+1	;volatile
  5485                           
  5486                           ;logica.c: 17: distancias[2] = usonic.distancia.left;
  5487  003148  C0AB  F104         	movff	_usonic,getLowestDistanceOnSensors_func@distancias+2	;volatile
  5488                           
  5489                           ;logica.c: 18: distancias[3] = usonic.distancia.right;
  5490  00314C  C0AC  F105         	movff	_usonic+1,getLowestDistanceOnSensors_func@distancias+3	;volatile
  5491                           
  5492                           ;logica.c: 20: uint8_t smallest_value = (255);
  5493  003150  0101               	movlb	1	; () banked
  5494  003152  6906               	setf	getLowestDistanceOnSensors_func@smallest_value& (0+255),b
  5495                           
  5496                           ; BSR set to: 1
  5497                           ;logica.c: 21: uint8_t ladoMenor;
  5498                           ;logica.c: 22: uint8_t i = 0;
  5499  003154  0E00               	movlw	0
  5500  003156  6F07               	movwf	getLowestDistanceOnSensors_func@i& (0+255),b
  5501  003158                     l7554:
  5502                           
  5503                           ; BSR set to: 1
  5504                           ;logica.c: 23: for (; i < 4; ++i)
  5505  003158  0E03               	movlw	3
  5506  00315A  6507               	cpfsgt	getLowestDistanceOnSensors_func@i& (0+255),b
  5507  00315C  D001               	goto	l1481
  5508  00315E  D01A               	goto	u7090
  5509  003160                     l1481:
  5510                           
  5511                           ; BSR set to: 1
  5512                           ;logica.c: 24: {
  5513                           ;logica.c: 25: if (distancias[i] < smallest_value)
  5514                           
  5515                           ; BSR set to: 1
  5516  003160  5107               	movf	getLowestDistanceOnSensors_func@i& (0+255),w,b
  5517  003162  0D01               	mullw	1
  5518  003164  0E02               	movlw	low getLowestDistanceOnSensors_func@distancias
  5519  003166  24F3               	addwf	prodl,w,c
  5520  003168  6ED9               	movwf	fsr2l,c
  5521  00316A  0E01               	movlw	high getLowestDistanceOnSensors_func@distancias
  5522  00316C  20F4               	addwfc	prodh,w,c
  5523  00316E  6EDA               	movwf	fsr2h,c
  5524  003170  5106               	movf	getLowestDistanceOnSensors_func@smallest_value& (0+255),w,b
  5525  003172  5CDE               	subwf	postinc2,w,c
  5526  003174  B0D8               	btfsc	status,0,c
  5527  003176  D00C               	goto	l1483
  5528                           
  5529                           ; BSR set to: 1
  5530                           ;logica.c: 26: {
  5531                           ;logica.c: 27: smallest_value = distancias[i];
  5532  003178  5107               	movf	getLowestDistanceOnSensors_func@i& (0+255),w,b
  5533  00317A  0D01               	mullw	1
  5534  00317C  0E02               	movlw	low getLowestDistanceOnSensors_func@distancias
  5535  00317E  24F3               	addwf	prodl,w,c
  5536  003180  6ED9               	movwf	fsr2l,c
  5537  003182  0E01               	movlw	high getLowestDistanceOnSensors_func@distancias
  5538  003184  20F4               	addwfc	prodh,w,c
  5539  003186  6EDA               	movwf	fsr2h,c
  5540  003188  50DF               	movf	indf2,w,c
  5541  00318A  6F06               	movwf	getLowestDistanceOnSensors_func@smallest_value& (0+255),b
  5542                           
  5543                           ; BSR set to: 1
  5544                           ;logica.c: 28: ladoMenor = i;
  5545  00318C  C107  F101         	movff	getLowestDistanceOnSensors_func@i,getLowestDistanceOnSensors_func@ladoMenor
  5546  003190                     l1483:
  5547                           
  5548                           ; BSR set to: 1
  5549                           
  5550                           ; BSR set to: 1
  5551  003190  2B07               	incf	getLowestDistanceOnSensors_func@i& (0+255),f,b
  5552  003192  D7E2               	goto	l7554
  5553  003194                     u7090:
  5554                           
  5555                           ; BSR set to: 1
  5556                           ;logica.c: 29: }
  5557                           ;logica.c: 30: }
  5558                           ;logica.c: 32: getLowestDistanceOnSensors.distancia = smallest_value;
  5559  003194  C106  F0CA         	movff	getLowestDistanceOnSensors_func@smallest_value,_getLowestDistanceOnSensors+1
  5560                           
  5561                           ;logica.c: 33: getLowestDistanceOnSensors.lado_ID = ladoMenor;
  5562  003198  C101  F0C9         	movff	getLowestDistanceOnSensors_func@ladoMenor,_getLowestDistanceOnSensors
  5563                           
  5564                           ; BSR set to: 1
  5565  00319C  0012               	return		;funcret
  5566  00319E                     __end_of_getLowestDistanceOnSensors_func:
  5567                           	opt stack 0
  5568                           tosu	equ	0xFFF
  5569                           tosh	equ	0xFFE
  5570                           tosl	equ	0xFFD
  5571                           pclath	equ	0xFFA
  5572                           prodh	equ	0xFF4
  5573                           prodl	equ	0xFF3
  5574                           intcon	equ	0xFF2
  5575                           postinc0	equ	0xFEE
  5576                           wreg	equ	0xFE8
  5577                           indf2	equ	0xFDF
  5578                           postinc2	equ	0xFDE
  5579                           fsr2h	equ	0xFDA
  5580                           fsr2l	equ	0xFD9
  5581                           status	equ	0xFD8
  5582                           
  5583 ;; *************** function _buscarEnemigo *****************
  5584 ;; Defined at:
  5585 ;;		line 53 in file "logica.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  medidas         4   65[BANK1 ] unsigned char [4]
  5590 ;;  current_mili    2   71[BANK1 ] unsigned int 
  5591 ;;  precargaTime    2   69[BANK1 ] unsigned int 
  5592 ;;  i               1   73[BANK1 ] unsigned char 
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      unsigned char 
  5595 ;; Registers used:
  5596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5603 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5604 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5605 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5606 ;;Total ram usage:       11 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; Hardware stack levels required when called:   21
  5609 ;; This function calls:
  5610 ;;		_TMR0_ReadTimer
  5611 ;;		_TMR0_Reload
  5612 ;;		_TMR0_StartTimer
  5613 ;;		_TMR0_StopTimer
  5614 ;;		_TMR0_WriteTimer
  5615 ;;		___ftadd
  5616 ;;		___ftneg
  5617 ;;		___fttol
  5618 ;;		___lwtoft
  5619 ;;		_buscar_t_init
  5620 ;;		_delayTmr
  5621 ;;		_detenerse
  5622 ;;		_motorDe_set
  5623 ;;		_motorIz_set
  5624 ;; This function is called by:
  5625 ;;		_main
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text37
  5630  000F3C                     __ptext37:
  5631                           	opt stack 0
  5632  000F3C                     _buscarEnemigo:
  5633                           	opt stack 9
  5634                           
  5635                           ;logica.c: 55: interrupt_flags.int_delay_activado = 0;
  5636                           
  5637                           ; BSR set to: 1
  5638                           ;incstack = 0
  5639  000F3C  0100               	movlb	0	; () banked
  5640  000F3E  99C4               	bcf	(_interrupt_flags+2)& (0+255),4,b	;volatile
  5641                           
  5642                           ;logica.c: 56: interrupt_flags.borde_activado = 0;
  5643  000F40  97C4               	bcf	(_interrupt_flags+2)& (0+255),3,b	;volatile
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;logica.c: 58: buscar_t_init(&med_front, 1);
  5647  000F42  0E57               	movlw	low _med_front
  5648  000F44  0101               	movlb	1	; () banked
  5649  000F46  6F00               	movwf	buscar_t_init@med& (0+255),b
  5650  000F48  0E01               	movlw	high _med_front
  5651  000F4A  6F01               	movwf	(buscar_t_init@med+1)& (0+255),b
  5652  000F4C  0E01               	movlw	1
  5653  000F4E  6F02               	movwf	buscar_t_init@sensID& (0+255),b
  5654  000F50  EC84  F01B         	call	_buscar_t_init	;wreg free
  5655                           
  5656                           ;logica.c: 59: buscar_t_init(&med_back, 0);
  5657  000F54  0E53               	movlw	low _med_back
  5658  000F56  0101               	movlb	1	; () banked
  5659  000F58  6F00               	movwf	buscar_t_init@med& (0+255),b
  5660  000F5A  0E01               	movlw	high _med_back
  5661  000F5C  6F01               	movwf	(buscar_t_init@med+1)& (0+255),b
  5662  000F5E  0E00               	movlw	0
  5663  000F60  6F02               	movwf	buscar_t_init@sensID& (0+255),b
  5664  000F62  EC84  F01B         	call	_buscar_t_init	;wreg free
  5665                           
  5666                           ;logica.c: 60: buscar_t_init(&med_left, 2);
  5667  000F66  0E4F               	movlw	low _med_left
  5668  000F68  0101               	movlb	1	; () banked
  5669  000F6A  6F00               	movwf	buscar_t_init@med& (0+255),b
  5670  000F6C  0E01               	movlw	high _med_left
  5671  000F6E  6F01               	movwf	(buscar_t_init@med+1)& (0+255),b
  5672  000F70  0E02               	movlw	2
  5673  000F72  6F02               	movwf	buscar_t_init@sensID& (0+255),b
  5674  000F74  EC84  F01B         	call	_buscar_t_init	;wreg free
  5675                           
  5676                           ;logica.c: 61: buscar_t_init(&med_right, 3);
  5677  000F78  0E4B               	movlw	low _med_right
  5678  000F7A  0101               	movlb	1	; () banked
  5679  000F7C  6F00               	movwf	buscar_t_init@med& (0+255),b
  5680  000F7E  0E01               	movlw	high _med_right
  5681  000F80  6F01               	movwf	(buscar_t_init@med+1)& (0+255),b
  5682  000F82  0E03               	movlw	3
  5683  000F84  6F02               	movwf	buscar_t_init@sensID& (0+255),b
  5684  000F86  EC84  F01B         	call	_buscar_t_init	;wreg free
  5685                           
  5686                           ;logica.c: 62: buscar_t_init(&med_final, 0);
  5687  000F8A  0ECF               	movlw	low _med_final
  5688  000F8C  0101               	movlb	1	; () banked
  5689  000F8E  6F00               	movwf	buscar_t_init@med& (0+255),b
  5690  000F90  0E00               	movlw	high _med_final
  5691  000F92  6F01               	movwf	(buscar_t_init@med+1)& (0+255),b
  5692  000F94  0E00               	movlw	0
  5693  000F96  6F02               	movwf	buscar_t_init@sensID& (0+255),b
  5694  000F98  EC84  F01B         	call	_buscar_t_init	;wreg free
  5695                           
  5696                           ;logica.c: 64: uint16_t precargaTimer = 0xFFFF - ((90 * 24.113) / 1.03);
  5697  000F9C  0EF7               	movlw	247
  5698  000F9E  0101               	movlb	1	; () banked
  5699  000FA0  6F46               	movwf	(buscarEnemigo@precargaTimer+1)& (0+255),b
  5700  000FA2  0EC4               	movlw	196
  5701  000FA4  6F45               	movwf	buscarEnemigo@precargaTimer& (0+255),b
  5702                           
  5703                           ; BSR set to: 1
  5704                           ;logica.c: 65: TMR0_WriteTimer(precargaTimer);
  5705  000FA6  C145  F138         	movff	buscarEnemigo@precargaTimer,TMR0_WriteTimer@timerVal
  5706  000FAA  C146  F139         	movff	buscarEnemigo@precargaTimer+1,TMR0_WriteTimer@timerVal+1
  5707  000FAE  EC38  F01F         	call	_TMR0_WriteTimer	;wreg free
  5708                           
  5709                           ;logica.c: 66: TMR0_StartTimer();
  5710  000FB2  EC55  F01F         	call	_TMR0_StartTimer	;wreg free
  5711                           
  5712                           ;logica.c: 68: if (interrupt_flags.sentidoBusqueda)
  5713  000FB6  0100               	movlb	0	; () banked
  5714  000FB8  ABC4               	btfss	(_interrupt_flags+2)& (0+255),5,b	;volatile
  5715  000FBA  D007               	goto	l1490
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;logica.c: 69: {
  5719                           ;logica.c: 70: motorIz_set(2);
  5720  000FBC  0E02               	movlw	2
  5721  000FBE  ECB8  F01B         	call	_motorIz_set
  5722                           
  5723                           ;logica.c: 71: motorDe_set(1);
  5724  000FC2  0E01               	movlw	1
  5725  000FC4  ECD0  F01B         	call	_motorDe_set
  5726                           
  5727                           ;logica.c: 72: } else
  5728  000FC8  D006               	goto	l1491
  5729  000FCA                     l1490:
  5730                           
  5731                           ;logica.c: 73: {
  5732                           ;logica.c: 74: motorIz_set(1);
  5733  000FCA  0E01               	movlw	1
  5734  000FCC  ECB8  F01B         	call	_motorIz_set
  5735                           
  5736                           ;logica.c: 75: motorDe_set(2);
  5737  000FD0  0E02               	movlw	2
  5738  000FD2  ECD0  F01B         	call	_motorDe_set
  5739  000FD6                     l1491:
  5740                           
  5741                           ;logica.c: 76: }
  5742                           ;logica.c: 78: uint16_t current_milis = 0;
  5743  000FD6  0E00               	movlw	0
  5744  000FD8  0101               	movlb	1	; () banked
  5745  000FDA  6F48               	movwf	(buscarEnemigo@current_milis+1)& (0+255),b
  5746  000FDC  0E00               	movlw	0
  5747  000FDE  6F47               	movwf	buscarEnemigo@current_milis& (0+255),b
  5748                           
  5749                           ;logica.c: 80: while (PIR0bits.TMR0IF == 0)
  5750  000FE0  D05A               	goto	l1501
  5751  000FE2                     
  5752                           ;logica.c: 81: {
  5753                           ;logica.c: 82: current_milis = TMR0_ReadTimer() - precargaTimer;
  5754                           
  5755                           ; BSR set to: 1
  5756  000FE2  C145  F13F         	movff	buscarEnemigo@precargaTimer,??_buscarEnemigo
  5757  000FE6  C146  F140         	movff	buscarEnemigo@precargaTimer+1,??_buscarEnemigo+1
  5758  000FEA  0101               	movlb	1	; () banked
  5759  000FEC  1F3F               	comf	??_buscarEnemigo& (0+255),f,b
  5760  000FEE  1F40               	comf	(??_buscarEnemigo+1)& (0+255),f,b
  5761  000FF0  4B3F               	infsnz	??_buscarEnemigo& (0+255),f,b
  5762  000FF2  2B40               	incf	(??_buscarEnemigo+1)& (0+255),f,b
  5763  000FF4  ECAF  F01D         	call	_TMR0_ReadTimer	;wreg free
  5764  000FF8  0101               	movlb	1	; () banked
  5765  000FFA  513F               	movf	??_buscarEnemigo& (0+255),w,b
  5766  000FFC  2500               	addwf	?_TMR0_ReadTimer& (0+255),w,b
  5767  000FFE  6F47               	movwf	buscarEnemigo@current_milis& (0+255),b
  5768  001000  5140               	movf	(??_buscarEnemigo+1)& (0+255),w,b
  5769  001002  2101               	addwfc	(?_TMR0_ReadTimer+1)& (0+255),w,b
  5770  001004  6F48               	movwf	(buscarEnemigo@current_milis+1)& (0+255),b
  5771                           
  5772                           ; BSR set to: 1
  5773                           ;logica.c: 84: if (interrupt_flags.nuevaMuestraFront && usonic.distancia.front > 4)
  5774  001006  0100               	movlb	0	; () banked
  5775  001008  A1C3               	btfss	(_interrupt_flags+1)& (0+255),0,b	;volatile
  5776  00100A  D00F               	goto	l1495
  5777                           
  5778                           ; BSR set to: 0
  5779  00100C  0E04               	movlw	4
  5780  00100E  65AD               	cpfsgt	(_usonic+2)& (0+255),b	;volatile
  5781  001010  D00C               	goto	l1495
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;logica.c: 85: {
  5785                           ;logica.c: 86: interrupt_flags.nuevaMuestraFront = 0;
  5786  001012  91C3               	bcf	(_interrupt_flags+1)& (0+255),0,b	;volatile
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;logica.c: 87: if (usonic.distancia.front <= med_front.distMin)
  5790  001014  51AD               	movf	(_usonic+2)& (0+255),w,b	;volatile
  5791  001016  0101               	movlb	1	; () banked
  5792  001018  5D59               	subwf	(_med_front+2)& (0+255),w,b
  5793  00101A  A0D8               	btfss	status,0,c
  5794  00101C  D006               	goto	l1495
  5795                           
  5796                           ; BSR set to: 1
  5797                           ;logica.c: 88: {
  5798                           ;logica.c: 89: med_front.distMin = usonic.distancia.front;
  5799  00101E  C0AD  F159         	movff	_usonic+2,_med_front+2	;volatile
  5800                           
  5801                           ;logica.c: 90: med_front.milis = current_milis;
  5802  001022  C147  F157         	movff	buscarEnemigo@current_milis,_med_front
  5803  001026  C148  F158         	movff	buscarEnemigo@current_milis+1,_med_front+1
  5804  00102A                     l1495:
  5805                           
  5806                           ;logica.c: 91: }
  5807                           ;logica.c: 92: }
  5808                           ;logica.c: 94: if (interrupt_flags.nuevaMuestraBack && usonic.distancia.back > 4)
  5809                           
  5810                           ; BSR set to: 1
  5811  00102A  0100               	movlb	0	; () banked
  5812  00102C  A3C3               	btfss	(_interrupt_flags+1)& (0+255),1,b	;volatile
  5813  00102E  D00F               	goto	l1497
  5814                           
  5815                           ; BSR set to: 0
  5816  001030  0E04               	movlw	4
  5817  001032  65AE               	cpfsgt	(_usonic+3)& (0+255),b	;volatile
  5818  001034  D00C               	goto	l1497
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;logica.c: 95: {
  5822                           ;logica.c: 96: interrupt_flags.nuevaMuestraBack = 0;
  5823  001036  93C3               	bcf	(_interrupt_flags+1)& (0+255),1,b	;volatile
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;logica.c: 97: if (usonic.distancia.back <= med_back.distMin)
  5827  001038  51AE               	movf	(_usonic+3)& (0+255),w,b	;volatile
  5828  00103A  0101               	movlb	1	; () banked
  5829  00103C  5D55               	subwf	(_med_back+2)& (0+255),w,b
  5830  00103E  A0D8               	btfss	status,0,c
  5831  001040  D006               	goto	l1497
  5832                           
  5833                           ; BSR set to: 1
  5834                           ;logica.c: 98: {
  5835                           ;logica.c: 99: med_back.distMin = usonic.distancia.back;
  5836  001042  C0AE  F155         	movff	_usonic+3,_med_back+2	;volatile
  5837                           
  5838                           ;logica.c: 100: med_back.milis = current_milis;
  5839  001046  C147  F153         	movff	buscarEnemigo@current_milis,_med_back
  5840  00104A  C148  F154         	movff	buscarEnemigo@current_milis+1,_med_back+1
  5841  00104E                     l1497:
  5842                           
  5843                           ;logica.c: 101: }
  5844                           ;logica.c: 102: }
  5845                           ;logica.c: 104: if (interrupt_flags.nuevaMuestraLeft && usonic.distancia.left > 4)
  5846                           
  5847                           ; BSR set to: 1
  5848  00104E  0100               	movlb	0	; () banked
  5849  001050  A5C3               	btfss	(_interrupt_flags+1)& (0+255),2,b	;volatile
  5850  001052  D00F               	goto	l1499
  5851                           
  5852                           ; BSR set to: 0
  5853  001054  0E04               	movlw	4
  5854  001056  65AB               	cpfsgt	_usonic& (0+255),b	;volatile
  5855  001058  D00C               	goto	l1499
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;logica.c: 105: {
  5859                           ;logica.c: 106: interrupt_flags.nuevaMuestraLeft = 0;
  5860  00105A  95C3               	bcf	(_interrupt_flags+1)& (0+255),2,b	;volatile
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;logica.c: 107: if (usonic.distancia.left <= med_left.distMin)
  5864  00105C  51AB               	movf	_usonic& (0+255),w,b	;volatile
  5865  00105E  0101               	movlb	1	; () banked
  5866  001060  5D51               	subwf	(_med_left+2)& (0+255),w,b
  5867  001062  A0D8               	btfss	status,0,c
  5868  001064  D006               	goto	l1499
  5869                           
  5870                           ; BSR set to: 1
  5871                           ;logica.c: 108: {
  5872                           ;logica.c: 109: med_left.distMin = usonic.distancia.left;
  5873  001066  C0AB  F151         	movff	_usonic,_med_left+2	;volatile
  5874                           
  5875                           ;logica.c: 110: med_left.milis = current_milis;
  5876  00106A  C147  F14F         	movff	buscarEnemigo@current_milis,_med_left
  5877  00106E  C148  F150         	movff	buscarEnemigo@current_milis+1,_med_left+1
  5878  001072                     l1499:
  5879                           
  5880                           ;logica.c: 111: }
  5881                           ;logica.c: 112: }
  5882                           ;logica.c: 114: if (interrupt_flags.nuevaMuestraRight && usonic.distancia.right > 4)
  5883                           
  5884                           ; BSR set to: 1
  5885  001072  0100               	movlb	0	; () banked
  5886  001074  A7C3               	btfss	(_interrupt_flags+1)& (0+255),3,b	;volatile
  5887  001076  D00F               	goto	l1501
  5888                           
  5889                           ; BSR set to: 0
  5890  001078  0E04               	movlw	4
  5891  00107A  65AC               	cpfsgt	(_usonic+1)& (0+255),b	;volatile
  5892  00107C  D00C               	goto	l1501
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;logica.c: 115: {
  5896                           ;logica.c: 116: interrupt_flags.nuevaMuestraRight = 0;
  5897  00107E  97C3               	bcf	(_interrupt_flags+1)& (0+255),3,b	;volatile
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;logica.c: 117: if (usonic.distancia.right <= med_right.distMin)
  5901  001080  51AC               	movf	(_usonic+1)& (0+255),w,b	;volatile
  5902  001082  0101               	movlb	1	; () banked
  5903  001084  5D4D               	subwf	(_med_right+2)& (0+255),w,b
  5904  001086  A0D8               	btfss	status,0,c
  5905  001088  D006               	goto	l1501
  5906                           
  5907                           ; BSR set to: 1
  5908                           ;logica.c: 118: {
  5909                           ;logica.c: 119: med_right.distMin = usonic.distancia.right;
  5910  00108A  C0AC  F14D         	movff	_usonic+1,_med_right+2	;volatile
  5911                           
  5912                           ;logica.c: 120: med_right.milis = current_milis;
  5913  00108E  C147  F14B         	movff	buscarEnemigo@current_milis,_med_right
  5914  001092  C148  F14C         	movff	buscarEnemigo@current_milis+1,_med_right+1
  5915  001096                     l1501:
  5916                           
  5917                           ; BSR set to: 1
  5918                           
  5919                           ; BSR set to: 1
  5920  001096  010E               	movlb	14	; () banked
  5921  001098  ABCA               	btfss	202,5,b	;volatile
  5922  00109A  D7A3               	goto	l1493
  5923                           
  5924                           ; BSR set to: 14
  5925                           ;logica.c: 121: }
  5926                           ;logica.c: 122: }
  5927                           ;logica.c: 123: }
  5928                           ;logica.c: 125: PIR0bits.TMR0IF = 0;
  5929  00109C  9BCA               	bcf	202,5,b	;volatile
  5930                           
  5931                           ; BSR set to: 14
  5932                           ;logica.c: 126: TMR0_StopTimer();
  5933  00109E  EC53  F01F         	call	_TMR0_StopTimer	;wreg free
  5934                           
  5935                           ;logica.c: 127: TMR0_Reload();
  5936  0010A2  EC3E  F01F         	call	_TMR0_Reload	;wreg free
  5937                           
  5938                           ;logica.c: 129: detenerse();
  5939  0010A6  ECDD  F01E         	call	_detenerse	;wreg free
  5940                           
  5941                           ;logica.c: 131: uint8_t medidas[4];
  5942                           ;logica.c: 133: medidas[1] = med_front.distMin;
  5943  0010AA  C159  F142         	movff	_med_front+2,buscarEnemigo@medidas+1
  5944                           
  5945                           ;logica.c: 134: medidas[0] = med_back.distMin;
  5946  0010AE  C155  F141         	movff	_med_back+2,buscarEnemigo@medidas
  5947                           
  5948                           ;logica.c: 135: medidas[2] = med_left.distMin;
  5949  0010B2  C151  F143         	movff	_med_left+2,buscarEnemigo@medidas+2
  5950                           
  5951                           ;logica.c: 136: medidas[3] = med_right.distMin;
  5952  0010B6  C14D  F144         	movff	_med_right+2,buscarEnemigo@medidas+3
  5953                           
  5954                           ;logica.c: 138: uint8_t i = 0;
  5955  0010BA  0E00               	movlw	0
  5956  0010BC  0101               	movlb	1	; () banked
  5957  0010BE  6F49               	movwf	buscarEnemigo@i& (0+255),b
  5958  0010C0                     l7830:
  5959                           
  5960                           ; BSR set to: 1
  5961                           ;logica.c: 139: for (; i < 4; ++i)
  5962  0010C0  0E03               	movlw	3
  5963  0010C2  6549               	cpfsgt	buscarEnemigo@i& (0+255),b
  5964  0010C4  D001               	goto	l1503
  5965  0010C6  D01E               	goto	u7440
  5966  0010C8                     l1503:
  5967                           
  5968                           ; BSR set to: 1
  5969                           ;logica.c: 140: {
  5970                           ;logica.c: 141: if (medidas[i] < med_final.distMin)
  5971                           
  5972                           ; BSR set to: 1
  5973  0010C8  5149               	movf	buscarEnemigo@i& (0+255),w,b
  5974  0010CA  0D01               	mullw	1
  5975  0010CC  0E41               	movlw	low buscarEnemigo@medidas
  5976  0010CE  24F3               	addwf	prodl,w,c
  5977  0010D0  6ED9               	movwf	fsr2l,c
  5978  0010D2  0E01               	movlw	high buscarEnemigo@medidas
  5979  0010D4  20F4               	addwfc	prodh,w,c
  5980  0010D6  6EDA               	movwf	fsr2h,c
  5981  0010D8  0100               	movlb	0	; () banked
  5982  0010DA  51D1               	movf	(_med_final+2)& (0+255),w,b
  5983  0010DC  5CDE               	subwf	postinc2,w,c
  5984  0010DE  B0D8               	btfsc	status,0,c
  5985  0010E0  D00E               	goto	l1505
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;logica.c: 142: {
  5989                           ;logica.c: 143: med_final.distMin = medidas[i];
  5990  0010E2  0101               	movlb	1	; () banked
  5991  0010E4  5149               	movf	buscarEnemigo@i& (0+255),w,b
  5992  0010E6  0D01               	mullw	1
  5993  0010E8  0E41               	movlw	low buscarEnemigo@medidas
  5994  0010EA  24F3               	addwf	prodl,w,c
  5995  0010EC  6ED9               	movwf	fsr2l,c
  5996  0010EE  0E01               	movlw	high buscarEnemigo@medidas
  5997  0010F0  20F4               	addwfc	prodh,w,c
  5998  0010F2  6EDA               	movwf	fsr2h,c
  5999  0010F4  50DF               	movf	indf2,w,c
  6000  0010F6  0100               	movlb	0	; () banked
  6001  0010F8  6FD1               	movwf	(_med_final+2)& (0+255),b
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;logica.c: 144: med_final.lado_ID = i;
  6005  0010FA  C149  F0D2         	movff	buscarEnemigo@i,_med_final+3
  6006  0010FE                     l1505:
  6007                           
  6008                           ; BSR set to: 0
  6009                           
  6010                           ; BSR set to: 0
  6011  0010FE  0101               	movlb	1	; () banked
  6012  001100  2B49               	incf	buscarEnemigo@i& (0+255),f,b
  6013  001102  D7DE               	goto	l7830
  6014  001104                     u7440:
  6015                           
  6016                           ; BSR set to: 1
  6017                           ;logica.c: 145: }
  6018                           ;logica.c: 146: }
  6019                           ;logica.c: 148: if (interrupt_flags.sentidoBusqueda)
  6020  001104  0100               	movlb	0	; () banked
  6021  001106  BBC4               	btfsc	(_interrupt_flags+2)& (0+255),5,b	;volatile
  6022  001108  D094               	goto	l1507
  6023  00110A  D139               	goto	l1514
  6024  00110C                     
  6025                           ; BSR set to: 0
  6026                           ;logica.c: 153: med_final.milis = 90 * 24.113 * 1.03 + med_back.milis;
  6027                           
  6028                           ; BSR set to: 0
  6029  00110C  0EB4               	movlw	180
  6030  00110E  0101               	movlb	1	; () banked
  6031  001110  6F20               	movwf	___ftadd@f2& (0+255),b
  6032  001112  0E0B               	movlw	11
  6033  001114  6F21               	movwf	(___ftadd@f2+1)& (0+255),b
  6034  001116  0E45               	movlw	69
  6035  001118  6F22               	movwf	(___ftadd@f2+2)& (0+255),b
  6036  00111A  C153  F108         	movff	_med_back,___lwtoft@c
  6037  00111E  C154  F109         	movff	_med_back+1,___lwtoft@c+1
  6038  001122  EC09  F01D         	call	___lwtoft	;wreg free
  6039  001126  C108  F11D         	movff	?___lwtoft,___ftadd@f1
  6040  00112A  C109  F11E         	movff	?___lwtoft+1,___ftadd@f1+1
  6041  00112E  C10A  F11F         	movff	?___lwtoft+2,___ftadd@f1+2
  6042  001132  EC1A  F00C         	call	___ftadd	;wreg free
  6043  001136  C11D  F129         	movff	?___ftadd,___fttol@f1
  6044  00113A  C11E  F12A         	movff	?___ftadd+1,___fttol@f1+1
  6045  00113E  C11F  F12B         	movff	?___ftadd+2,___fttol@f1+2
  6046  001142  ECDD  F00E         	call	___fttol	;wreg free
  6047  001146  C129  F0CF         	movff	?___fttol,_med_final
  6048  00114A  C12A  F0D0         	movff	?___fttol+1,_med_final+1
  6049                           
  6050                           ;logica.c: 154: motorIz_set(2);
  6051  00114E  0E02               	movlw	2
  6052  001150  ECB8  F01B         	call	_motorIz_set
  6053                           
  6054                           ;logica.c: 155: motorDe_set(1);
  6055  001154  0E01               	movlw	1
  6056  001156  ECD0  F01B         	call	_motorDe_set
  6057                           
  6058                           ;logica.c: 157: break;
  6059  00115A  D11F               	goto	l1516
  6060  00115C                     
  6061                           ;logica.c: 159: med_final.milis = 90 * 24.113 * 1.03 - med_front.milis;
  6062  00115C  0EB4               	movlw	180
  6063  00115E  0101               	movlb	1	; () banked
  6064  001160  6F20               	movwf	___ftadd@f2& (0+255),b
  6065  001162  0E0B               	movlw	11
  6066  001164  6F21               	movwf	(___ftadd@f2+1)& (0+255),b
  6067  001166  0E45               	movlw	69
  6068  001168  6F22               	movwf	(___ftadd@f2+2)& (0+255),b
  6069  00116A  C157  F108         	movff	_med_front,___lwtoft@c
  6070  00116E  C158  F109         	movff	_med_front+1,___lwtoft@c+1
  6071  001172  EC09  F01D         	call	___lwtoft	;wreg free
  6072  001176  C108  F11A         	movff	?___lwtoft,___ftneg@f1
  6073  00117A  C109  F11B         	movff	?___lwtoft+1,___ftneg@f1+1
  6074  00117E  C10A  F11C         	movff	?___lwtoft+2,___ftneg@f1+2
  6075  001182  EC1C  F01D         	call	___ftneg	;wreg free
  6076  001186  C11A  F11D         	movff	?___ftneg,___ftadd@f1
  6077  00118A  C11B  F11E         	movff	?___ftneg+1,___ftadd@f1+1
  6078  00118E  C11C  F11F         	movff	?___ftneg+2,___ftadd@f1+2
  6079  001192  EC1A  F00C         	call	___ftadd	;wreg free
  6080  001196  C11D  F129         	movff	?___ftadd,___fttol@f1
  6081  00119A  C11E  F12A         	movff	?___ftadd+1,___fttol@f1+1
  6082  00119E  C11F  F12B         	movff	?___ftadd+2,___fttol@f1+2
  6083  0011A2  ECDD  F00E         	call	___fttol	;wreg free
  6084  0011A6  C129  F0CF         	movff	?___fttol,_med_final
  6085  0011AA  C12A  F0D0         	movff	?___fttol+1,_med_final+1
  6086                           
  6087                           ;logica.c: 160: motorIz_set(1);
  6088  0011AE  0E01               	movlw	1
  6089  0011B0  ECB8  F01B         	call	_motorIz_set
  6090                           
  6091                           ;logica.c: 161: motorDe_set(2);
  6092  0011B4  0E02               	movlw	2
  6093  0011B6  ECD0  F01B         	call	_motorDe_set
  6094                           
  6095                           ;logica.c: 163: break;
  6096  0011BA  D0EF               	goto	l1516
  6097  0011BC                     l1511:
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;logica.c: 165: med_final.milis = med_left.milis;
  6101  0011BC  C14F  F0CF         	movff	_med_left,_med_final
  6102  0011C0  C150  F0D0         	movff	_med_left+1,_med_final+1
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;logica.c: 166: motorIz_set(2);
  6106  0011C4  0E02               	movlw	2
  6107  0011C6  ECB8  F01B         	call	_motorIz_set
  6108                           
  6109                           ;logica.c: 167: motorDe_set(1);
  6110  0011CA  0E01               	movlw	1
  6111  0011CC  ECD0  F01B         	call	_motorDe_set
  6112                           
  6113                           ;logica.c: 169: break;
  6114  0011D0  D0E4               	goto	l1516
  6115  0011D2                     
  6116                           ;logica.c: 171: med_final.milis = 180 * 24.113 * 1.03 - med_right.milis;
  6117  0011D2  0EB4               	movlw	180
  6118  0011D4  0101               	movlb	1	; () banked
  6119  0011D6  6F20               	movwf	___ftadd@f2& (0+255),b
  6120  0011D8  0E8B               	movlw	139
  6121  0011DA  6F21               	movwf	(___ftadd@f2+1)& (0+255),b
  6122  0011DC  0E45               	movlw	69
  6123  0011DE  6F22               	movwf	(___ftadd@f2+2)& (0+255),b
  6124  0011E0  C14B  F108         	movff	_med_right,___lwtoft@c
  6125  0011E4  C14C  F109         	movff	_med_right+1,___lwtoft@c+1
  6126  0011E8  EC09  F01D         	call	___lwtoft	;wreg free
  6127  0011EC  C108  F11A         	movff	?___lwtoft,___ftneg@f1
  6128  0011F0  C109  F11B         	movff	?___lwtoft+1,___ftneg@f1+1
  6129  0011F4  C10A  F11C         	movff	?___lwtoft+2,___ftneg@f1+2
  6130  0011F8  EC1C  F01D         	call	___ftneg	;wreg free
  6131  0011FC  C11A  F11D         	movff	?___ftneg,___ftadd@f1
  6132  001200  C11B  F11E         	movff	?___ftneg+1,___ftadd@f1+1
  6133  001204  C11C  F11F         	movff	?___ftneg+2,___ftadd@f1+2
  6134  001208  EC1A  F00C         	call	___ftadd	;wreg free
  6135  00120C  C11D  F129         	movff	?___ftadd,___fttol@f1
  6136  001210  C11E  F12A         	movff	?___ftadd+1,___fttol@f1+1
  6137  001214  C11F  F12B         	movff	?___ftadd+2,___fttol@f1+2
  6138  001218  ECDD  F00E         	call	___fttol	;wreg free
  6139  00121C  C129  F0CF         	movff	?___fttol,_med_final
  6140  001220  C12A  F0D0         	movff	?___fttol+1,_med_final+1
  6141                           
  6142                           ;logica.c: 172: motorIz_set(1);
  6143  001224  0E01               	movlw	1
  6144  001226  ECB8  F01B         	call	_motorIz_set
  6145                           
  6146                           ;logica.c: 173: motorDe_set(2);
  6147  00122A  0E02               	movlw	2
  6148  00122C  ECD0  F01B         	call	_motorDe_set
  6149                           
  6150                           ;logica.c: 176: }
  6151                           
  6152                           ;logica.c: 175: break;
  6153  001230  D0B4               	goto	l1516
  6154  001232                     l1507:
  6155  001232  0100               	movlb	0	; () banked
  6156  001234  51D2               	movf	(_med_final+3)& (0+255),w,b
  6157                           
  6158                           ; Switch size 1, requested type "space"
  6159                           ; Number of cases is 4, Range of values is 0 to 3
  6160                           ; switch strategies available:
  6161                           ; Name         Instructions Cycles
  6162                           ; simple_byte           13     7 (average)
  6163                           ;	Chosen strategy is simple_byte
  6164  001236  0A00               	xorlw	0	; case 0
  6165  001238  B4D8               	btfsc	status,2,c
  6166  00123A  D768               	goto	l1508
  6167  00123C  0A01               	xorlw	1	; case 1
  6168  00123E  B4D8               	btfsc	status,2,c
  6169  001240  D78D               	goto	l1510
  6170  001242  0A03               	xorlw	3	; case 2
  6171  001244  B4D8               	btfsc	status,2,c
  6172  001246  D7BA               	goto	l1511
  6173  001248  0A01               	xorlw	1	; case 3
  6174  00124A  B4D8               	btfsc	status,2,c
  6175  00124C  D7C2               	goto	l1512
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;logica.c: 177: }
  6179  00124E  D0A5               	goto	l1516
  6180  001250                     
  6181                           ; BSR set to: 0
  6182                           ;logica.c: 183: med_final.milis = 90 * 24.113 * 1.03 + med_back.milis;
  6183                           
  6184                           ; BSR set to: 0
  6185  001250  0EB4               	movlw	180
  6186  001252  0101               	movlb	1	; () banked
  6187  001254  6F20               	movwf	___ftadd@f2& (0+255),b
  6188  001256  0E0B               	movlw	11
  6189  001258  6F21               	movwf	(___ftadd@f2+1)& (0+255),b
  6190  00125A  0E45               	movlw	69
  6191  00125C  6F22               	movwf	(___ftadd@f2+2)& (0+255),b
  6192  00125E  C153  F108         	movff	_med_back,___lwtoft@c
  6193  001262  C154  F109         	movff	_med_back+1,___lwtoft@c+1
  6194  001266  EC09  F01D         	call	___lwtoft	;wreg free
  6195  00126A  C108  F11D         	movff	?___lwtoft,___ftadd@f1
  6196  00126E  C109  F11E         	movff	?___lwtoft+1,___ftadd@f1+1
  6197  001272  C10A  F11F         	movff	?___lwtoft+2,___ftadd@f1+2
  6198  001276  EC1A  F00C         	call	___ftadd	;wreg free
  6199  00127A  C11D  F129         	movff	?___ftadd,___fttol@f1
  6200  00127E  C11E  F12A         	movff	?___ftadd+1,___fttol@f1+1
  6201  001282  C11F  F12B         	movff	?___ftadd+2,___fttol@f1+2
  6202  001286  ECDD  F00E         	call	___fttol	;wreg free
  6203  00128A  C129  F0CF         	movff	?___fttol,_med_final
  6204  00128E  C12A  F0D0         	movff	?___fttol+1,_med_final+1
  6205                           
  6206                           ;logica.c: 184: motorIz_set(2);
  6207  001292  0E02               	movlw	2
  6208  001294  ECB8  F01B         	call	_motorIz_set
  6209                           
  6210                           ;logica.c: 185: motorDe_set(1);
  6211  001298  0E01               	movlw	1
  6212  00129A  ECD0  F01B         	call	_motorDe_set
  6213                           
  6214                           ;logica.c: 187: break;
  6215  00129E  D07D               	goto	l1516
  6216  0012A0                     
  6217                           ;logica.c: 189: med_final.milis = 90 * 24.113 * 1.03 - med_front.milis;
  6218  0012A0  0EB4               	movlw	180
  6219  0012A2  0101               	movlb	1	; () banked
  6220  0012A4  6F20               	movwf	___ftadd@f2& (0+255),b
  6221  0012A6  0E0B               	movlw	11
  6222  0012A8  6F21               	movwf	(___ftadd@f2+1)& (0+255),b
  6223  0012AA  0E45               	movlw	69
  6224  0012AC  6F22               	movwf	(___ftadd@f2+2)& (0+255),b
  6225  0012AE  C157  F108         	movff	_med_front,___lwtoft@c
  6226  0012B2  C158  F109         	movff	_med_front+1,___lwtoft@c+1
  6227  0012B6  EC09  F01D         	call	___lwtoft	;wreg free
  6228  0012BA  C108  F11A         	movff	?___lwtoft,___ftneg@f1
  6229  0012BE  C109  F11B         	movff	?___lwtoft+1,___ftneg@f1+1
  6230  0012C2  C10A  F11C         	movff	?___lwtoft+2,___ftneg@f1+2
  6231  0012C6  EC1C  F01D         	call	___ftneg	;wreg free
  6232  0012CA  C11A  F11D         	movff	?___ftneg,___ftadd@f1
  6233  0012CE  C11B  F11E         	movff	?___ftneg+1,___ftadd@f1+1
  6234  0012D2  C11C  F11F         	movff	?___ftneg+2,___ftadd@f1+2
  6235  0012D6  EC1A  F00C         	call	___ftadd	;wreg free
  6236  0012DA  C11D  F129         	movff	?___ftadd,___fttol@f1
  6237  0012DE  C11E  F12A         	movff	?___ftadd+1,___fttol@f1+1
  6238  0012E2  C11F  F12B         	movff	?___ftadd+2,___fttol@f1+2
  6239  0012E6  ECDD  F00E         	call	___fttol	;wreg free
  6240  0012EA  C129  F0CF         	movff	?___fttol,_med_final
  6241  0012EE  C12A  F0D0         	movff	?___fttol+1,_med_final+1
  6242                           
  6243                           ;logica.c: 190: motorIz_set(1);
  6244  0012F2  0E01               	movlw	1
  6245  0012F4  ECB8  F01B         	call	_motorIz_set
  6246                           
  6247                           ;logica.c: 191: motorDe_set(2);
  6248  0012F8  0E02               	movlw	2
  6249  0012FA  ECD0  F01B         	call	_motorDe_set
  6250                           
  6251                           ;logica.c: 193: break;
  6252  0012FE  D04D               	goto	l1516
  6253  001300                     
  6254                           ;logica.c: 195: med_final.milis = 180 * 24.113 * 1.03 - med_right.milis;
  6255  001300  0EB4               	movlw	180
  6256  001302  0101               	movlb	1	; () banked
  6257  001304  6F20               	movwf	___ftadd@f2& (0+255),b
  6258  001306  0E8B               	movlw	139
  6259  001308  6F21               	movwf	(___ftadd@f2+1)& (0+255),b
  6260  00130A  0E45               	movlw	69
  6261  00130C  6F22               	movwf	(___ftadd@f2+2)& (0+255),b
  6262  00130E  C14B  F108         	movff	_med_right,___lwtoft@c
  6263  001312  C14C  F109         	movff	_med_right+1,___lwtoft@c+1
  6264  001316  EC09  F01D         	call	___lwtoft	;wreg free
  6265  00131A  C108  F11A         	movff	?___lwtoft,___ftneg@f1
  6266  00131E  C109  F11B         	movff	?___lwtoft+1,___ftneg@f1+1
  6267  001322  C10A  F11C         	movff	?___lwtoft+2,___ftneg@f1+2
  6268  001326  EC1C  F01D         	call	___ftneg	;wreg free
  6269  00132A  C11A  F11D         	movff	?___ftneg,___ftadd@f1
  6270  00132E  C11B  F11E         	movff	?___ftneg+1,___ftadd@f1+1
  6271  001332  C11C  F11F         	movff	?___ftneg+2,___ftadd@f1+2
  6272  001336  EC1A  F00C         	call	___ftadd	;wreg free
  6273  00133A  C11D  F129         	movff	?___ftadd,___fttol@f1
  6274  00133E  C11E  F12A         	movff	?___ftadd+1,___fttol@f1+1
  6275  001342  C11F  F12B         	movff	?___ftadd+2,___fttol@f1+2
  6276  001346  ECDD  F00E         	call	___fttol	;wreg free
  6277  00134A  C129  F0CF         	movff	?___fttol,_med_final
  6278  00134E  C12A  F0D0         	movff	?___fttol+1,_med_final+1
  6279                           
  6280                           ;logica.c: 196: med_final.milis = med_left.milis;
  6281  001352  C14F  F0CF         	movff	_med_left,_med_final
  6282  001356  C150  F0D0         	movff	_med_left+1,_med_final+1
  6283                           
  6284                           ;logica.c: 197: motorIz_set(2);
  6285  00135A  0E02               	movlw	2
  6286  00135C  ECB8  F01B         	call	_motorIz_set
  6287                           
  6288                           ;logica.c: 198: motorDe_set(1);
  6289  001360  0E01               	movlw	1
  6290  001362  ECD0  F01B         	call	_motorDe_set
  6291                           
  6292                           ;logica.c: 200: break;
  6293  001366  D019               	goto	l1516
  6294  001368                     l1519:
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;logica.c: 202: med_final.milis = med_left.milis;
  6298  001368  C14F  F0CF         	movff	_med_left,_med_final
  6299  00136C  C150  F0D0         	movff	_med_left+1,_med_final+1
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;logica.c: 203: motorIz_set(1);
  6303  001370  0E01               	movlw	1
  6304  001372  ECB8  F01B         	call	_motorIz_set
  6305                           
  6306                           ;logica.c: 204: motorDe_set(2);
  6307  001376  0E02               	movlw	2
  6308  001378  ECD0  F01B         	call	_motorDe_set
  6309                           
  6310                           ;logica.c: 207: }
  6311                           
  6312                           ;logica.c: 206: break;
  6313  00137C  D00E               	goto	l1516
  6314  00137E                     l1514:
  6315  00137E  0100               	movlb	0	; () banked
  6316  001380  51D2               	movf	(_med_final+3)& (0+255),w,b
  6317                           
  6318                           ; Switch size 1, requested type "space"
  6319                           ; Number of cases is 4, Range of values is 0 to 3
  6320                           ; switch strategies available:
  6321                           ; Name         Instructions Cycles
  6322                           ; simple_byte           13     7 (average)
  6323                           ;	Chosen strategy is simple_byte
  6324  001382  0A00               	xorlw	0	; case 0
  6325  001384  B4D8               	btfsc	status,2,c
  6326  001386  D764               	goto	l1515
  6327  001388  0A01               	xorlw	1	; case 1
  6328  00138A  B4D8               	btfsc	status,2,c
  6329  00138C  D789               	goto	l1517
  6330  00138E  0A03               	xorlw	3	; case 2
  6331  001390  B4D8               	btfsc	status,2,c
  6332  001392  D7B6               	goto	l1518
  6333  001394  0A01               	xorlw	1	; case 3
  6334  001396  B4D8               	btfsc	status,2,c
  6335  001398  D7E7               	goto	l1519
  6336  00139A                     l1516:
  6337                           
  6338                           ;logica.c: 208: }
  6339                           ;logica.c: 210: delayTmr(med_final.milis);
  6340                           
  6341                           ; BSR set to: 0
  6342                           
  6343                           ; BSR set to: 0
  6344  00139A  C0CF  F13A         	movff	_med_final,delayTmr@miliSegundos
  6345  00139E  C0D0  F13B         	movff	_med_final+1,delayTmr@miliSegundos+1
  6346  0013A2  EC33  F012         	call	_delayTmr	;wreg free
  6347                           
  6348                           ;logica.c: 212: detenerse();
  6349  0013A6  ECDD  F01E         	call	_detenerse	;wreg free
  6350                           
  6351                           ;logica.c: 214: interrupt_flags.sentidoBusqueda = ~interrupt_flags.sentidoBusqueda;
  6352  0013AA  0100               	movlb	0	; () banked
  6353  0013AC  ABC4               	btfss	(_interrupt_flags+2)& (0+255),5,b	;volatile
  6354  0013AE  D002               	goto	u7460
  6355  0013B0  0E01               	movlw	1
  6356  0013B2  D001               	goto	u7466
  6357  0013B4                     u7460:
  6358  0013B4  0E00               	movlw	0
  6359  0013B6                     u7466:
  6360  0013B6  0AFF               	xorlw	255
  6361  0013B8  0101               	movlb	1	; () banked
  6362  0013BA  6F3F               	movwf	??_buscarEnemigo& (0+255),b
  6363  0013BC  3B3F               	swapf	??_buscarEnemigo& (0+255),f,b
  6364  0013BE  473F               	rlncf	??_buscarEnemigo& (0+255),f,b
  6365  0013C0  0100               	movlb	0	; () banked
  6366  0013C2  51C4               	movf	(_interrupt_flags+2)& (0+255),w,b	;volatile
  6367  0013C4  0101               	movlb	1	; () banked
  6368  0013C6  193F               	xorwf	??_buscarEnemigo& (0+255),w,b
  6369  0013C8  0BDF               	andlw	-33
  6370  0013CA  193F               	xorwf	??_buscarEnemigo& (0+255),w,b
  6371  0013CC  0100               	movlb	0	; () banked
  6372  0013CE  6FC4               	movwf	(_interrupt_flags+2)& (0+255),b	;volatile
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;logica.c: 216: interrupt_flags.borde_activado = 1;
  6376  0013D0  87C4               	bsf	(_interrupt_flags+2)& (0+255),3,b	;volatile
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;logica.c: 217: interrupt_flags.borde_detectado = 0;
  6380  0013D2  95C4               	bcf	(_interrupt_flags+2)& (0+255),2,b	;volatile
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;logica.c: 220: if (med_final.distMin <= 50)
  6384  0013D4  0E33               	movlw	51
  6385  0013D6  61D1               	cpfslt	(_med_final+2)& (0+255),b
  6386  0013D8  D002               	goto	l1520
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;logica.c: 221: return 1;
  6390  0013DA  0E01               	movlw	1
  6391                           
  6392                           ; BSR set to: 0
  6393                           
  6394                           ; BSR set to: 0
  6395  0013DC  0012               	return	
  6396  0013DE                     l1520:
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;logica.c: 222: else
  6400                           ;logica.c: 223: return 0;
  6401                           
  6402                           ; BSR set to: 0
  6403  0013DE  0E00               	movlw	0
  6404                           
  6405                           ; BSR set to: 0
  6406  0013E0  0012               	return	
  6407  0013E2                     __end_of_buscarEnemigo:
  6408                           	opt stack 0
  6409                           tosu	equ	0xFFF
  6410                           tosh	equ	0xFFE
  6411                           tosl	equ	0xFFD
  6412                           pclath	equ	0xFFA
  6413                           prodh	equ	0xFF4
  6414                           prodl	equ	0xFF3
  6415                           intcon	equ	0xFF2
  6416                           postinc0	equ	0xFEE
  6417                           wreg	equ	0xFE8
  6418                           indf2	equ	0xFDF
  6419                           postinc2	equ	0xFDE
  6420                           fsr2h	equ	0xFDA
  6421                           fsr2l	equ	0xFD9
  6422                           status	equ	0xFD8
  6423                           
  6424 ;; *************** function _delayTmr *****************
  6425 ;; Defined at:
  6426 ;;		line 199 in file "main.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  miliSegundos    2   58[BANK1 ] unsigned int 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;		None
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      unsigned char 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6440 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6442 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6443 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6444 ;;Total ram usage:        5 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:   20
  6447 ;; This function calls:
  6448 ;;		_TMR0_Reload
  6449 ;;		_TMR0_StartTimer
  6450 ;;		_TMR0_StopTimer
  6451 ;;		_TMR0_WriteTimer
  6452 ;;		___ftadd
  6453 ;;		___ftdiv
  6454 ;;		___ftneg
  6455 ;;		___fttol
  6456 ;;		___lwtoft
  6457 ;;		___wmul
  6458 ;; This function is called by:
  6459 ;;		_marcharAdelanteTiempo
  6460 ;;		_marcharAtrasTiempo
  6461 ;;		_girarXgradosizquierda
  6462 ;;		_girarXgradosderecha
  6463 ;;		_giroLeveIzquierdaAvanzar
  6464 ;;		_giroLeveIzquierdaRetroceder
  6465 ;;		_giroLeveDerechaAvanzar
  6466 ;;		_giroLeveDerechaRetroceder
  6467 ;;		_tactica_back_1
  6468 ;;		_buscarEnemigo
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text38
  6473  002466                     __ptext38:
  6474                           	opt stack 0
  6475  002466                     _delayTmr:
  6476                           	opt stack 7
  6477                           
  6478                           ;main.c: 201: TMR0_WriteTimer(0xFFFF - (miliSegundos / 1.03));
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;incstack = 0
  6482  002466  0EFF               	movlw	255
  6483  002468  0101               	movlb	1	; () banked
  6484  00246A  6F20               	movwf	___ftadd@f2& (0+255),b
  6485  00246C  0E7F               	movlw	127
  6486  00246E  6F21               	movwf	(___ftadd@f2+1)& (0+255),b
  6487  002470  0E47               	movlw	71
  6488  002472  6F22               	movwf	(___ftadd@f2+2)& (0+255),b
  6489  002474  0ED7               	movlw	215
  6490  002476  6F0E               	movwf	___ftdiv@f2& (0+255),b
  6491  002478  0E83               	movlw	131
  6492  00247A  6F0F               	movwf	(___ftdiv@f2+1)& (0+255),b
  6493  00247C  0E3F               	movlw	63
  6494  00247E  6F10               	movwf	(___ftdiv@f2+2)& (0+255),b
  6495  002480  C13A  F108         	movff	delayTmr@miliSegundos,___lwtoft@c
  6496  002484  C13B  F109         	movff	delayTmr@miliSegundos+1,___lwtoft@c+1
  6497  002488  EC09  F01D         	call	___lwtoft	;wreg free
  6498  00248C  C108  F10B         	movff	?___lwtoft,___ftdiv@f1
  6499  002490  C109  F10C         	movff	?___lwtoft+1,___ftdiv@f1+1
  6500  002494  C10A  F10D         	movff	?___lwtoft+2,___ftdiv@f1+2
  6501  002498  ECBF  F011         	call	___ftdiv	;wreg free
  6502  00249C  C10B  F11A         	movff	?___ftdiv,___ftneg@f1
  6503  0024A0  C10C  F11B         	movff	?___ftdiv+1,___ftneg@f1+1
  6504  0024A4  C10D  F11C         	movff	?___ftdiv+2,___ftneg@f1+2
  6505  0024A8  EC1C  F01D         	call	___ftneg	;wreg free
  6506  0024AC  C11A  F11D         	movff	?___ftneg,___ftadd@f1
  6507  0024B0  C11B  F11E         	movff	?___ftneg+1,___ftadd@f1+1
  6508  0024B4  C11C  F11F         	movff	?___ftneg+2,___ftadd@f1+2
  6509  0024B8  EC1A  F00C         	call	___ftadd	;wreg free
  6510  0024BC  C11D  F129         	movff	?___ftadd,___fttol@f1
  6511  0024C0  C11E  F12A         	movff	?___ftadd+1,___fttol@f1+1
  6512  0024C4  C11F  F12B         	movff	?___ftadd+2,___fttol@f1+2
  6513  0024C8  ECDD  F00E         	call	___fttol	;wreg free
  6514  0024CC  C129  F138         	movff	?___fttol,TMR0_WriteTimer@timerVal
  6515  0024D0  C12A  F139         	movff	?___fttol+1,TMR0_WriteTimer@timerVal+1
  6516  0024D4  EC38  F01F         	call	_TMR0_WriteTimer	;wreg free
  6517                           
  6518                           ;main.c: 202: TMR0_StartTimer();
  6519  0024D8  EC55  F01F         	call	_TMR0_StartTimer	;wreg free
  6520                           
  6521                           ;main.c: 203: while (PIR0bits.TMR0IF == 0)
  6522  0024DC  D02D               	goto	l720
  6523  0024DE                     
  6524                           ;main.c: 204: {
  6525                           ;main.c: 205: if ((interrupt_flags.borde_activado * interrupt_flags.borde_detectado) * i
      +                          nterrupt_flags.int_delay_activado)
  6526  0024DE  0100               	movlb	0	; () banked
  6527  0024E0  A5C4               	btfss	(_interrupt_flags+2)& (0+255),2,b	;volatile
  6528  0024E2  D004               	goto	u6490
  6529  0024E4  0101               	movlb	1	; () banked
  6530  0024E6  6B3C               	clrf	??_delayTmr& (0+255),b
  6531  0024E8  2B3C               	incf	??_delayTmr& (0+255),f,b
  6532  0024EA  D002               	goto	u6498
  6533  0024EC                     u6490:
  6534  0024EC  0101               	movlb	1	; () banked
  6535  0024EE  6B3C               	clrf	??_delayTmr& (0+255),b
  6536  0024F0                     u6498:
  6537  0024F0  0100               	movlb	0	; () banked
  6538  0024F2  A7C4               	btfss	(_interrupt_flags+2)& (0+255),3,b	;volatile
  6539  0024F4  D004               	goto	u6500
  6540  0024F6  0101               	movlb	1	; () banked
  6541  0024F8  6B3D               	clrf	(??_delayTmr+1)& (0+255),b
  6542  0024FA  2B3D               	incf	(??_delayTmr+1)& (0+255),f,b
  6543  0024FC  D002               	goto	u6508
  6544  0024FE                     u6500:
  6545  0024FE  0101               	movlb	1	; () banked
  6546  002500  6B3D               	clrf	(??_delayTmr+1)& (0+255),b
  6547  002502                     u6508:
  6548  002502  513D               	movf	(??_delayTmr+1)& (0+255),w,b
  6549  002504  033C               	mulwf	??_delayTmr& (0+255),b
  6550  002506  CFF3 F100          	movff	prodl,___wmul@multiplier
  6551  00250A  CFF4 F101          	movff	prodh,___wmul@multiplier+1
  6552  00250E  0100               	movlb	0	; () banked
  6553  002510  A9C4               	btfss	(_interrupt_flags+2)& (0+255),4,b	;volatile
  6554  002512  D004               	goto	u6510
  6555  002514  0101               	movlb	1	; () banked
  6556  002516  6B3E               	clrf	(??_delayTmr+2)& (0+255),b
  6557  002518  2B3E               	incf	(??_delayTmr+2)& (0+255),f,b
  6558  00251A  D002               	goto	u6518
  6559  00251C                     u6510:
  6560  00251C  0101               	movlb	1	; () banked
  6561  00251E  6B3E               	clrf	(??_delayTmr+2)& (0+255),b
  6562  002520                     u6518:
  6563  002520  513E               	movf	(??_delayTmr+2)& (0+255),w,b
  6564  002522  6F02               	movwf	___wmul@multiplicand& (0+255),b
  6565  002524  6B03               	clrf	(___wmul@multiplicand+1)& (0+255),b
  6566  002526  EC94  F01C         	call	___wmul	;wreg free
  6567  00252A  0101               	movlb	1	; () banked
  6568  00252C  5100               	movf	?___wmul& (0+255),w,b
  6569  00252E  1101               	iorwf	(?___wmul+1)& (0+255),w,b
  6570  002530  B4D8               	btfsc	status,2,c
  6571  002532  D002               	goto	l720
  6572                           
  6573                           ; BSR set to: 1
  6574                           ;main.c: 206: return 1;
  6575  002534  0E01               	movlw	1
  6576                           
  6577                           ; BSR set to: 1
  6578  002536  0012               	return	
  6579  002538                     l720:
  6580                           
  6581                           ; BSR set to: 1
  6582  002538  010E               	movlb	14	; () banked
  6583  00253A  ABCA               	btfss	202,5,b	;volatile
  6584  00253C  D7D0               	goto	l719
  6585                           
  6586                           ; BSR set to: 14
  6587                           ;main.c: 207: }
  6588                           ;main.c: 208: PIR0bits.TMR0IF = 0;
  6589  00253E  9BCA               	bcf	202,5,b	;volatile
  6590                           
  6591                           ; BSR set to: 14
  6592                           ;main.c: 209: TMR0_StopTimer();
  6593  002540  EC53  F01F         	call	_TMR0_StopTimer	;wreg free
  6594                           
  6595                           ;main.c: 210: TMR0_Reload();
  6596  002544  EC3E  F01F         	call	_TMR0_Reload	;wreg free
  6597                           
  6598                           ;main.c: 211: return 0;
  6599  002548  0E00               	movlw	0
  6600  00254A  0012               	return	
  6601  00254C                     __end_of_delayTmr:
  6602                           	opt stack 0
  6603                           tosu	equ	0xFFF
  6604                           tosh	equ	0xFFE
  6605                           tosl	equ	0xFFD
  6606                           pclath	equ	0xFFA
  6607                           prodh	equ	0xFF4
  6608                           prodl	equ	0xFF3
  6609                           intcon	equ	0xFF2
  6610                           postinc0	equ	0xFEE
  6611                           wreg	equ	0xFE8
  6612                           indf2	equ	0xFDF
  6613                           postinc2	equ	0xFDE
  6614                           fsr2h	equ	0xFDA
  6615                           fsr2l	equ	0xFD9
  6616                           status	equ	0xFD8
  6617                           
  6618 ;; *************** function ___wmul *****************
  6619 ;; Defined at:
  6620 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  multiplier      2    0[BANK1 ] unsigned int 
  6623 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  product         2    4[BANK1 ] unsigned int 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  2    0[BANK1 ] unsigned int 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0, prodl, prodh
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6635 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;Total ram usage:        6 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:   18
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_delayTmr
  6646 ;;		_map
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	text39
  6651  003928                     __ptext39:
  6652                           	opt stack 0
  6653  003928                     ___wmul:
  6654                           	opt stack 8
  6655                           
  6656                           ;incstack = 0
  6657  003928  0101               	movlb	1	; () banked
  6658  00392A  5100               	movf	___wmul@multiplier& (0+255),w,b
  6659  00392C  0302               	mulwf	___wmul@multiplicand& (0+255),b
  6660  00392E  CFF3 F104          	movff	prodl,___wmul@product
  6661  003932  CFF4 F105          	movff	prodh,___wmul@product+1
  6662  003936  5100               	movf	___wmul@multiplier& (0+255),w,b
  6663  003938  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6664  00393A  50F3               	movf	prodl,w,c
  6665  00393C  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  6666  00393E  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6667  003940  0302               	mulwf	___wmul@multiplicand& (0+255),b
  6668  003942  50F3               	movf	prodl,w,c
  6669  003944  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  6670                           
  6671                           ; BSR set to: 1
  6672  003946  C104  F100         	movff	___wmul@product,?___wmul
  6673  00394A  C105  F101         	movff	___wmul@product+1,?___wmul+1
  6674  00394E  0012               	return	
  6675  003950                     __end_of___wmul:
  6676                           	opt stack 0
  6677                           tosu	equ	0xFFF
  6678                           tosh	equ	0xFFE
  6679                           tosl	equ	0xFFD
  6680                           pclath	equ	0xFFA
  6681                           prodh	equ	0xFF4
  6682                           prodl	equ	0xFF3
  6683                           intcon	equ	0xFF2
  6684                           postinc0	equ	0xFEE
  6685                           wreg	equ	0xFE8
  6686                           indf2	equ	0xFDF
  6687                           postinc2	equ	0xFDE
  6688                           fsr2h	equ	0xFDA
  6689                           fsr2l	equ	0xFD9
  6690                           status	equ	0xFD8
  6691                           
  6692 ;; *************** function ___lwtoft *****************
  6693 ;; Defined at:
  6694 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  c               2    8[BANK1 ] unsigned int 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  3    8[BANK1 ] float 
  6701 ;; Registers used:
  6702 ;;		wreg, status,2, status,0, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6708 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6711 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6712 ;;Total ram usage:        3 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:   19
  6715 ;; This function calls:
  6716 ;;		___ftpack
  6717 ;; This function is called by:
  6718 ;;		_delayTmr
  6719 ;;		_girarXgradosizquierda
  6720 ;;		_girarXgradosderecha
  6721 ;;		_buscarEnemigo
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           	psect	text40
  6726  003A12                     __ptext40:
  6727                           	opt stack 0
  6728  003A12                     ___lwtoft:
  6729                           	opt stack 7
  6730                           
  6731                           ; BSR set to: 1
  6732                           ;incstack = 0
  6733  003A12  C108  F100         	movff	___lwtoft@c,___ftpack@arg
  6734  003A16  C109  F101         	movff	___lwtoft@c+1,___ftpack@arg+1
  6735  003A1A  0101               	movlb	1	; () banked
  6736  003A1C  6B02               	clrf	(___ftpack@arg+2)& (0+255),b
  6737  003A1E  0E8E               	movlw	142
  6738  003A20  6F03               	movwf	___ftpack@exp& (0+255),b
  6739  003A22  0E00               	movlw	0
  6740  003A24  6F04               	movwf	___ftpack@sign& (0+255),b
  6741  003A26  EC14  F015         	call	___ftpack	;wreg free
  6742  003A2A  C100  F108         	movff	?___ftpack,?___lwtoft
  6743  003A2E  C101  F109         	movff	?___ftpack+1,?___lwtoft+1
  6744  003A32  C102  F10A         	movff	?___ftpack+2,?___lwtoft+2
  6745  003A36  0012               	return	
  6746  003A38                     __end_of___lwtoft:
  6747                           	opt stack 0
  6748                           tosu	equ	0xFFF
  6749                           tosh	equ	0xFFE
  6750                           tosl	equ	0xFFD
  6751                           pclath	equ	0xFFA
  6752                           prodh	equ	0xFF4
  6753                           prodl	equ	0xFF3
  6754                           intcon	equ	0xFF2
  6755                           postinc0	equ	0xFEE
  6756                           wreg	equ	0xFE8
  6757                           indf2	equ	0xFDF
  6758                           postinc2	equ	0xFDE
  6759                           fsr2h	equ	0xFDA
  6760                           fsr2l	equ	0xFD9
  6761                           status	equ	0xFD8
  6762                           
  6763 ;; *************** function ___fttol *****************
  6764 ;; Defined at:
  6765 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  f1              3   41[BANK1 ] float 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  lval            4   51[BANK1 ] unsigned long 
  6770 ;;  exp1            1   55[BANK1 ] unsigned char 
  6771 ;;  sign1           1   50[BANK1 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  4   41[BANK1 ] long 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6781 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6782 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6784 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6785 ;;Total ram usage:       15 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:   18
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_delayTmr
  6792 ;;		_girarXgradosizquierda
  6793 ;;		_girarXgradosderecha
  6794 ;;		_buscarEnemigo
  6795 ;;		_calculateSD
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text41
  6800  001DBA                     __ptext41:
  6801                           	opt stack 0
  6802  001DBA                     ___fttol:
  6803                           	opt stack 8
  6804                           
  6805                           ;incstack = 0
  6806  001DBA  C12B  F12D         	movff	___fttol@f1+2,??___fttol
  6807  001DBE  0101               	movlb	1	; () banked
  6808  001DC0  6B2E               	clrf	(??___fttol+1)& (0+255),b
  6809  001DC2  6B2F               	clrf	(??___fttol+2)& (0+255),b
  6810  001DC4  352A               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6811  001DC6  372D               	rlcf	??___fttol& (0+255),f,b
  6812  001DC8  E301               	bnc	u4441
  6813  001DCA  812E               	bsf	(??___fttol+1)& (0+255),0,b
  6814  001DCC                     u4441:
  6815  001DCC  512D               	movf	??___fttol& (0+255),w,b
  6816  001DCE  6F37               	movwf	___fttol@exp1& (0+255),b
  6817  001DD0  5137               	movf	___fttol@exp1& (0+255),w,b
  6818  001DD2  A4D8               	btfss	status,2,c
  6819  001DD4  D009               	goto	l1871
  6820                           
  6821                           ; BSR set to: 1
  6822  001DD6  0E00               	movlw	0
  6823  001DD8  6F29               	movwf	?___fttol& (0+255),b
  6824  001DDA  0E00               	movlw	0
  6825  001DDC  6F2A               	movwf	(?___fttol+1)& (0+255),b
  6826  001DDE  0E00               	movlw	0
  6827  001DE0  6F2B               	movwf	(?___fttol+2)& (0+255),b
  6828  001DE2  0E00               	movlw	0
  6829  001DE4  6F2C               	movwf	(?___fttol+3)& (0+255),b
  6830                           
  6831                           ; BSR set to: 1
  6832  001DE6  0012               	return	
  6833  001DE8                     l1871:
  6834                           
  6835                           ; BSR set to: 1
  6836                           
  6837                           ; BSR set to: 1
  6838  001DE8  0E17               	movlw	23
  6839  001DEA  6F2D               	movwf	??___fttol& (0+255),b
  6840  001DEC  C129  F12E         	movff	___fttol@f1,??___fttol+1
  6841  001DF0  C12A  F12F         	movff	___fttol@f1+1,??___fttol+2
  6842  001DF4  C12B  F130         	movff	___fttol@f1+2,??___fttol+3
  6843  001DF8  292D               	incf	??___fttol& (0+255),w,b
  6844  001DFA  6F31               	movwf	(??___fttol+4)& (0+255),b
  6845  001DFC  D004               	goto	u4460
  6846  001DFE                     u4465:
  6847  001DFE  90D8               	bcf	status,0,c
  6848  001E00  3330               	rrcf	(??___fttol+3)& (0+255),f,b
  6849  001E02  332F               	rrcf	(??___fttol+2)& (0+255),f,b
  6850  001E04  332E               	rrcf	(??___fttol+1)& (0+255),f,b
  6851  001E06                     u4460:
  6852  001E06  2F31               	decfsz	(??___fttol+4)& (0+255),f,b
  6853  001E08  D7FA               	goto	u4465
  6854  001E0A  0101               	movlb	1	; () banked
  6855  001E0C  512E               	movf	(??___fttol+1)& (0+255),w,b
  6856  001E0E  6F32               	movwf	___fttol@sign1& (0+255),b
  6857                           
  6858                           ; BSR set to: 1
  6859  001E10  8F2A               	bsf	(___fttol@f1+1)& (0+255),7,b
  6860                           
  6861                           ; BSR set to: 1
  6862  001E12  0EFF               	movlw	255
  6863  001E14  1729               	andwf	___fttol@f1& (0+255),f,b
  6864  001E16  0EFF               	movlw	255
  6865  001E18  172A               	andwf	(___fttol@f1+1)& (0+255),f,b
  6866  001E1A  0E00               	movlw	0
  6867  001E1C  172B               	andwf	(___fttol@f1+2)& (0+255),f,b
  6868                           
  6869                           ; BSR set to: 1
  6870  001E1E  5129               	movf	___fttol@f1& (0+255),w,b
  6871  001E20  6F33               	movwf	___fttol@lval& (0+255),b
  6872  001E22  512A               	movf	(___fttol@f1+1)& (0+255),w,b
  6873  001E24  6F34               	movwf	(___fttol@lval+1)& (0+255),b
  6874  001E26  512B               	movf	(___fttol@f1+2)& (0+255),w,b
  6875  001E28  6F35               	movwf	(___fttol@lval+2)& (0+255),b
  6876  001E2A  6B36               	clrf	(___fttol@lval+3)& (0+255),b
  6877                           
  6878                           ; BSR set to: 1
  6879  001E2C  0E8E               	movlw	142
  6880  001E2E  5F37               	subwf	___fttol@exp1& (0+255),f,b
  6881                           
  6882                           ; BSR set to: 1
  6883  001E30  AF37               	btfss	___fttol@exp1& (0+255),7,b
  6884  001E32  D016               	goto	l1873
  6885                           
  6886                           ; BSR set to: 1
  6887  001E34  5137               	movf	___fttol@exp1& (0+255),w,b
  6888  001E36  0A80               	xorlw	128
  6889  001E38  0F8F               	addlw	143
  6890  001E3A  B0D8               	btfsc	status,0,c
  6891  001E3C  D009               	goto	l1874
  6892                           
  6893                           ; BSR set to: 1
  6894  001E3E  0E00               	movlw	0
  6895  001E40  6F29               	movwf	?___fttol& (0+255),b
  6896  001E42  0E00               	movlw	0
  6897  001E44  6F2A               	movwf	(?___fttol+1)& (0+255),b
  6898  001E46  0E00               	movlw	0
  6899  001E48  6F2B               	movwf	(?___fttol+2)& (0+255),b
  6900  001E4A  0E00               	movlw	0
  6901  001E4C  6F2C               	movwf	(?___fttol+3)& (0+255),b
  6902                           
  6903                           ; BSR set to: 1
  6904  001E4E  0012               	return	
  6905  001E50                     l1874:
  6906                           
  6907                           ; BSR set to: 1
  6908                           
  6909                           ; BSR set to: 1
  6910                           
  6911                           ; BSR set to: 1
  6912  001E50  90D8               	bcf	status,0,c
  6913  001E52  3336               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6914  001E54  3335               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6915  001E56  3334               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6916  001E58  3333               	rrcf	___fttol@lval& (0+255),f,b
  6917                           
  6918                           ; BSR set to: 1
  6919  001E5A  3F37               	incfsz	___fttol@exp1& (0+255),f,b
  6920  001E5C  D7F9               	goto	l1874
  6921                           
  6922                           ; BSR set to: 1
  6923  001E5E  D015               	goto	u4500
  6924  001E60                     l1873:
  6925                           
  6926                           ; BSR set to: 1
  6927                           
  6928                           ; BSR set to: 1
  6929  001E60  0E17               	movlw	23
  6930  001E62  6537               	cpfsgt	___fttol@exp1& (0+255),b
  6931  001E64  D00F               	goto	l1879
  6932                           
  6933                           ; BSR set to: 1
  6934  001E66  0E00               	movlw	0
  6935  001E68  6F29               	movwf	?___fttol& (0+255),b
  6936  001E6A  0E00               	movlw	0
  6937  001E6C  6F2A               	movwf	(?___fttol+1)& (0+255),b
  6938  001E6E  0E00               	movlw	0
  6939  001E70  6F2B               	movwf	(?___fttol+2)& (0+255),b
  6940  001E72  0E00               	movlw	0
  6941  001E74  6F2C               	movwf	(?___fttol+3)& (0+255),b
  6942                           
  6943                           ; BSR set to: 1
  6944  001E76  0012               	return	
  6945  001E78                     
  6946                           ; BSR set to: 1
  6947                           
  6948                           ; BSR set to: 1
  6949  001E78  90D8               	bcf	status,0,c
  6950  001E7A  3733               	rlcf	___fttol@lval& (0+255),f,b
  6951  001E7C  3734               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6952  001E7E  3735               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6953  001E80  3736               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6954  001E82  0737               	decf	___fttol@exp1& (0+255),f,b
  6955  001E84                     l1879:
  6956                           
  6957                           ; BSR set to: 1
  6958                           
  6959                           ; BSR set to: 1
  6960  001E84  5137               	movf	___fttol@exp1& (0+255),w,b
  6961  001E86  A4D8               	btfss	status,2,c
  6962  001E88  D7F7               	goto	l1880
  6963  001E8A                     u4500:
  6964                           
  6965                           ; BSR set to: 1
  6966                           
  6967                           ; BSR set to: 1
  6968                           
  6969                           ; BSR set to: 1
  6970  001E8A  5132               	movf	___fttol@sign1& (0+255),w,b
  6971  001E8C  B4D8               	btfsc	status,2,c
  6972  001E8E  D008               	goto	l1882
  6973                           
  6974                           ; BSR set to: 1
  6975  001E90  1F36               	comf	(___fttol@lval+3)& (0+255),f,b
  6976  001E92  1F35               	comf	(___fttol@lval+2)& (0+255),f,b
  6977  001E94  1F34               	comf	(___fttol@lval+1)& (0+255),f,b
  6978  001E96  6D33               	negf	___fttol@lval& (0+255),b
  6979  001E98  0E00               	movlw	0
  6980  001E9A  2334               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6981  001E9C  2335               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6982  001E9E  2336               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6983  001EA0                     l1882:
  6984                           
  6985                           ; BSR set to: 1
  6986                           
  6987                           ; BSR set to: 1
  6988  001EA0  C133  F129         	movff	___fttol@lval,?___fttol
  6989  001EA4  C134  F12A         	movff	___fttol@lval+1,?___fttol+1
  6990  001EA8  C135  F12B         	movff	___fttol@lval+2,?___fttol+2
  6991  001EAC  C136  F12C         	movff	___fttol@lval+3,?___fttol+3
  6992  001EB0  0012               	return	
  6993  001EB2                     __end_of___fttol:
  6994                           	opt stack 0
  6995                           tosu	equ	0xFFF
  6996                           tosh	equ	0xFFE
  6997                           tosl	equ	0xFFD
  6998                           pclath	equ	0xFFA
  6999                           prodh	equ	0xFF4
  7000                           prodl	equ	0xFF3
  7001                           intcon	equ	0xFF2
  7002                           postinc0	equ	0xFEE
  7003                           wreg	equ	0xFE8
  7004                           indf2	equ	0xFDF
  7005                           postinc2	equ	0xFDE
  7006                           fsr2h	equ	0xFDA
  7007                           fsr2l	equ	0xFD9
  7008                           status	equ	0xFD8
  7009                           
  7010 ;; *************** function ___ftneg *****************
  7011 ;; Defined at:
  7012 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  f1              3   26[BANK1 ] float 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  3   26[BANK1 ] float 
  7019 ;; Registers used:
  7020 ;;		wreg, status,2, status,0
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7026 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7029 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7030 ;;Total ram usage:        3 bytes
  7031 ;; Hardware stack levels used:    1
  7032 ;; Hardware stack levels required when called:   18
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_delayTmr
  7037 ;;		_buscarEnemigo
  7038 ;;		_calculateSD
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           	psect	text42
  7043  003A38                     __ptext42:
  7044                           	opt stack 0
  7045  003A38                     ___ftneg:
  7046                           	opt stack 8
  7047                           
  7048                           ; BSR set to: 1
  7049                           ;incstack = 0
  7050  003A38  0101               	movlb	1	; () banked
  7051  003A3A  511A               	movf	___ftneg@f1& (0+255),w,b
  7052  003A3C  111B               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  7053  003A3E  111C               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  7054  003A40  B4D8               	btfsc	status,2,c
  7055  003A42  D006               	goto	l1861
  7056                           
  7057                           ; BSR set to: 1
  7058  003A44  0E00               	movlw	0
  7059  003A46  1B1A               	xorwf	___ftneg@f1& (0+255),f,b
  7060  003A48  0E00               	movlw	0
  7061  003A4A  1B1B               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  7062  003A4C  0E80               	movlw	128
  7063  003A4E  1B1C               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  7064  003A50                     l1861:
  7065                           
  7066                           ; BSR set to: 1
  7067  003A50  C11A  F11A         	movff	___ftneg@f1,?___ftneg
  7068  003A54  C11B  F11B         	movff	___ftneg@f1+1,?___ftneg+1
  7069  003A58  C11C  F11C         	movff	___ftneg@f1+2,?___ftneg+2
  7070                           
  7071                           ; BSR set to: 1
  7072  003A5C  0012               	return		;funcret
  7073  003A5E                     __end_of___ftneg:
  7074                           	opt stack 0
  7075                           tosu	equ	0xFFF
  7076                           tosh	equ	0xFFE
  7077                           tosl	equ	0xFFD
  7078                           pclath	equ	0xFFA
  7079                           prodh	equ	0xFF4
  7080                           prodl	equ	0xFF3
  7081                           intcon	equ	0xFF2
  7082                           postinc0	equ	0xFEE
  7083                           wreg	equ	0xFE8
  7084                           indf2	equ	0xFDF
  7085                           postinc2	equ	0xFDE
  7086                           fsr2h	equ	0xFDA
  7087                           fsr2l	equ	0xFD9
  7088                           status	equ	0xFD8
  7089                           
  7090 ;; *************** function ___ftdiv *****************
  7091 ;; Defined at:
  7092 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  f1              3   11[BANK1 ] float 
  7095 ;;  f2              3   14[BANK1 ] float 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  f3              3   21[BANK1 ] float 
  7098 ;;  sign            1   25[BANK1 ] unsigned char 
  7099 ;;  exp             1   24[BANK1 ] unsigned char 
  7100 ;;  cntr            1   20[BANK1 ] unsigned char 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  3   11[BANK1 ] float 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7110 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7111 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7112 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7113 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;Total ram usage:       15 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:   19
  7117 ;; This function calls:
  7118 ;;		___ftpack
  7119 ;; This function is called by:
  7120 ;;		_delayTmr
  7121 ;;		_calculateSD
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text43
  7126  00237E                     __ptext43:
  7127                           	opt stack 0
  7128  00237E                     ___ftdiv:
  7129                           	opt stack 7
  7130                           
  7131                           ; BSR set to: 1
  7132                           ;incstack = 0
  7133  00237E  C10D  F111         	movff	___ftdiv@f1+2,??___ftdiv
  7134  002382  0101               	movlb	1	; () banked
  7135  002384  6B12               	clrf	(??___ftdiv+1)& (0+255),b
  7136  002386  6B13               	clrf	(??___ftdiv+2)& (0+255),b
  7137  002388  350C               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  7138  00238A  3711               	rlcf	??___ftdiv& (0+255),f,b
  7139  00238C  E301               	bnc	u6431
  7140  00238E  8112               	bsf	(??___ftdiv+1)& (0+255),0,b
  7141  002390                     u6431:
  7142  002390  5111               	movf	??___ftdiv& (0+255),w,b
  7143  002392  6F18               	movwf	___ftdiv@exp& (0+255),b
  7144  002394  5118               	movf	___ftdiv@exp& (0+255),w,b
  7145  002396  A4D8               	btfss	status,2,c
  7146  002398  D007               	goto	l1835
  7147                           
  7148                           ; BSR set to: 1
  7149  00239A  0E00               	movlw	0
  7150  00239C  6F0B               	movwf	?___ftdiv& (0+255),b
  7151  00239E  0E00               	movlw	0
  7152  0023A0  6F0C               	movwf	(?___ftdiv+1)& (0+255),b
  7153  0023A2  0E00               	movlw	0
  7154  0023A4  6F0D               	movwf	(?___ftdiv+2)& (0+255),b
  7155                           
  7156                           ; BSR set to: 1
  7157  0023A6  0012               	return	
  7158  0023A8                     l1835:
  7159                           
  7160                           ; BSR set to: 1
  7161                           
  7162                           ; BSR set to: 1
  7163  0023A8  C110  F111         	movff	___ftdiv@f2+2,??___ftdiv
  7164  0023AC  6B12               	clrf	(??___ftdiv+1)& (0+255),b
  7165  0023AE  6B13               	clrf	(??___ftdiv+2)& (0+255),b
  7166  0023B0  350F               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  7167  0023B2  3711               	rlcf	??___ftdiv& (0+255),f,b
  7168  0023B4  E301               	bnc	u6451
  7169  0023B6  8112               	bsf	(??___ftdiv+1)& (0+255),0,b
  7170  0023B8                     u6451:
  7171  0023B8  5111               	movf	??___ftdiv& (0+255),w,b
  7172  0023BA  6F19               	movwf	___ftdiv@sign& (0+255),b
  7173  0023BC  5119               	movf	___ftdiv@sign& (0+255),w,b
  7174  0023BE  A4D8               	btfss	status,2,c
  7175  0023C0  D007               	goto	l1837
  7176                           
  7177                           ; BSR set to: 1
  7178  0023C2  0E00               	movlw	0
  7179  0023C4  6F0B               	movwf	?___ftdiv& (0+255),b
  7180  0023C6  0E00               	movlw	0
  7181  0023C8  6F0C               	movwf	(?___ftdiv+1)& (0+255),b
  7182  0023CA  0E00               	movlw	0
  7183  0023CC  6F0D               	movwf	(?___ftdiv+2)& (0+255),b
  7184                           
  7185                           ; BSR set to: 1
  7186  0023CE  0012               	return	
  7187  0023D0                     l1837:
  7188                           
  7189                           ; BSR set to: 1
  7190                           
  7191                           ; BSR set to: 1
  7192  0023D0  0E00               	movlw	0
  7193  0023D2  6F15               	movwf	___ftdiv@f3& (0+255),b
  7194  0023D4  0E00               	movlw	0
  7195  0023D6  6F16               	movwf	(___ftdiv@f3+1)& (0+255),b
  7196  0023D8  0E00               	movlw	0
  7197  0023DA  6F17               	movwf	(___ftdiv@f3+2)& (0+255),b
  7198                           
  7199                           ; BSR set to: 1
  7200  0023DC  5119               	movf	___ftdiv@sign& (0+255),w,b
  7201  0023DE  0F89               	addlw	137
  7202  0023E0  5F18               	subwf	___ftdiv@exp& (0+255),f,b
  7203                           
  7204                           ; BSR set to: 1
  7205  0023E2  C10D  F119         	movff	___ftdiv@f1+2,___ftdiv@sign
  7206                           
  7207                           ; BSR set to: 1
  7208  0023E6  5110               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7209  0023E8  1B19               	xorwf	___ftdiv@sign& (0+255),f,b
  7210                           
  7211                           ; BSR set to: 1
  7212  0023EA  0E80               	movlw	128
  7213  0023EC  1719               	andwf	___ftdiv@sign& (0+255),f,b
  7214                           
  7215                           ; BSR set to: 1
  7216  0023EE  8F0C               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  7217                           
  7218                           ; BSR set to: 1
  7219  0023F0  0EFF               	movlw	255
  7220  0023F2  170B               	andwf	___ftdiv@f1& (0+255),f,b
  7221  0023F4  0EFF               	movlw	255
  7222  0023F6  170C               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  7223  0023F8  0E00               	movlw	0
  7224  0023FA  170D               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  7225                           
  7226                           ; BSR set to: 1
  7227  0023FC  8F0F               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  7228                           
  7229                           ; BSR set to: 1
  7230  0023FE  0EFF               	movlw	255
  7231  002400  170E               	andwf	___ftdiv@f2& (0+255),f,b
  7232  002402  0EFF               	movlw	255
  7233  002404  170F               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  7234  002406  0E00               	movlw	0
  7235  002408  1710               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  7236                           
  7237                           ; BSR set to: 1
  7238  00240A  0E18               	movlw	24
  7239  00240C  6F14               	movwf	___ftdiv@cntr& (0+255),b
  7240  00240E                     
  7241                           ; BSR set to: 1
  7242                           
  7243                           ; BSR set to: 1
  7244  00240E  90D8               	bcf	status,0,c
  7245  002410  3715               	rlcf	___ftdiv@f3& (0+255),f,b
  7246  002412  3716               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  7247  002414  3717               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  7248                           
  7249                           ; BSR set to: 1
  7250  002416  510E               	movf	___ftdiv@f2& (0+255),w,b
  7251  002418  5D0B               	subwf	___ftdiv@f1& (0+255),w,b
  7252  00241A  510F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7253  00241C  590C               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  7254  00241E  5110               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7255  002420  590D               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  7256  002422  A0D8               	btfss	status,0,c
  7257  002424  D007               	goto	l1839
  7258                           
  7259                           ; BSR set to: 1
  7260  002426  510E               	movf	___ftdiv@f2& (0+255),w,b
  7261  002428  5F0B               	subwf	___ftdiv@f1& (0+255),f,b
  7262  00242A  510F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7263  00242C  5B0C               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  7264  00242E  5110               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7265  002430  5B0D               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  7266                           
  7267                           ; BSR set to: 1
  7268  002432  8115               	bsf	___ftdiv@f3& (0+255),0,b
  7269  002434                     l1839:
  7270                           
  7271                           ; BSR set to: 1
  7272  002434  90D8               	bcf	status,0,c
  7273  002436  370B               	rlcf	___ftdiv@f1& (0+255),f,b
  7274  002438  370C               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  7275  00243A  370D               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  7276                           
  7277                           ; BSR set to: 1
  7278  00243C  2F14               	decfsz	___ftdiv@cntr& (0+255),f,b
  7279  00243E  D7E7               	goto	l1838
  7280                           
  7281                           ; BSR set to: 1
  7282                           
  7283                           ; BSR set to: 1
  7284  002440  C115  F100         	movff	___ftdiv@f3,___ftpack@arg
  7285  002444  C116  F101         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7286  002448  C117  F102         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7287  00244C  C118  F103         	movff	___ftdiv@exp,___ftpack@exp
  7288  002450  C119  F104         	movff	___ftdiv@sign,___ftpack@sign
  7289  002454  EC14  F015         	call	___ftpack	;wreg free
  7290  002458  C100  F10B         	movff	?___ftpack,?___ftdiv
  7291  00245C  C101  F10C         	movff	?___ftpack+1,?___ftdiv+1
  7292  002460  C102  F10D         	movff	?___ftpack+2,?___ftdiv+2
  7293  002464  0012               	return	
  7294  002466                     __end_of___ftdiv:
  7295                           	opt stack 0
  7296                           tosu	equ	0xFFF
  7297                           tosh	equ	0xFFE
  7298                           tosl	equ	0xFFD
  7299                           pclath	equ	0xFFA
  7300                           prodh	equ	0xFF4
  7301                           prodl	equ	0xFF3
  7302                           intcon	equ	0xFF2
  7303                           postinc0	equ	0xFEE
  7304                           wreg	equ	0xFE8
  7305                           indf2	equ	0xFDF
  7306                           postinc2	equ	0xFDE
  7307                           fsr2h	equ	0xFDA
  7308                           fsr2l	equ	0xFD9
  7309                           status	equ	0xFD8
  7310                           
  7311 ;; *************** function ___ftadd *****************
  7312 ;; Defined at:
  7313 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  f1              3   29[BANK1 ] float 
  7316 ;;  f2              3   32[BANK1 ] float 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  exp1            1   40[BANK1 ] unsigned char 
  7319 ;;  exp2            1   39[BANK1 ] unsigned char 
  7320 ;;  sign            1   38[BANK1 ] unsigned char 
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  3   29[BANK1 ] float 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0, cstack
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7330 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7331 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7332 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7333 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7334 ;;Total ram usage:       12 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:   19
  7337 ;; This function calls:
  7338 ;;		___ftpack
  7339 ;; This function is called by:
  7340 ;;		_delayTmr
  7341 ;;		_buscarEnemigo
  7342 ;;		_calculateSD
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text44
  7347  001834                     __ptext44:
  7348                           	opt stack 0
  7349  001834                     ___ftadd:
  7350                           	opt stack 7
  7351                           
  7352                           ;incstack = 0
  7353  001834  C11F  F123         	movff	___ftadd@f1+2,??___ftadd
  7354  001838  0101               	movlb	1	; () banked
  7355  00183A  6B24               	clrf	(??___ftadd+1)& (0+255),b
  7356  00183C  6B25               	clrf	(??___ftadd+2)& (0+255),b
  7357  00183E  351E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7358  001840  3723               	rlcf	??___ftadd& (0+255),f,b
  7359  001842  E301               	bnc	u6221
  7360  001844  8124               	bsf	(??___ftadd+1)& (0+255),0,b
  7361  001846                     u6221:
  7362  001846  5123               	movf	??___ftadd& (0+255),w,b
  7363  001848  6F28               	movwf	___ftadd@exp1& (0+255),b
  7364  00184A  C122  F123         	movff	___ftadd@f2+2,??___ftadd
  7365  00184E  6B24               	clrf	(??___ftadd+1)& (0+255),b
  7366  001850  6B25               	clrf	(??___ftadd+2)& (0+255),b
  7367  001852  3521               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7368  001854  3723               	rlcf	??___ftadd& (0+255),f,b
  7369  001856  E301               	bnc	u6231
  7370  001858  8124               	bsf	(??___ftadd+1)& (0+255),0,b
  7371  00185A                     u6231:
  7372  00185A  5123               	movf	??___ftadd& (0+255),w,b
  7373  00185C  6F27               	movwf	___ftadd@exp2& (0+255),b
  7374                           
  7375                           ; BSR set to: 1
  7376  00185E  5128               	movf	___ftadd@exp1& (0+255),w,b
  7377  001860  B4D8               	btfsc	status,2,c
  7378  001862  D00B               	goto	u6260
  7379                           
  7380                           ; BSR set to: 1
  7381  001864  5127               	movf	___ftadd@exp2& (0+255),w,b
  7382  001866  5D28               	subwf	___ftadd@exp1& (0+255),w,b
  7383  001868  B0D8               	btfsc	status,0,c
  7384  00186A  D00E               	goto	l1802
  7385                           
  7386                           ; BSR set to: 1
  7387  00186C  5128               	movf	___ftadd@exp1& (0+255),w,b
  7388  00186E  0800               	sublw	0
  7389  001870  2527               	addwf	___ftadd@exp2& (0+255),w,b
  7390  001872  6F23               	movwf	??___ftadd& (0+255),b
  7391  001874  0E18               	movlw	24
  7392  001876  6523               	cpfsgt	??___ftadd& (0+255),b
  7393  001878  D007               	goto	l1802
  7394  00187A                     u6260:
  7395                           
  7396                           ; BSR set to: 1
  7397  00187A  C120  F11D         	movff	___ftadd@f2,?___ftadd
  7398  00187E  C121  F11E         	movff	___ftadd@f2+1,?___ftadd+1
  7399  001882  C122  F11F         	movff	___ftadd@f2+2,?___ftadd+2
  7400  001886  0012               	return	
  7401  001888                     l1802:
  7402                           
  7403                           ; BSR set to: 1
  7404                           
  7405                           ; BSR set to: 1
  7406  001888  5127               	movf	___ftadd@exp2& (0+255),w,b
  7407  00188A  B4D8               	btfsc	status,2,c
  7408  00188C  D00B               	goto	u6290
  7409                           
  7410                           ; BSR set to: 1
  7411  00188E  5128               	movf	___ftadd@exp1& (0+255),w,b
  7412  001890  5D27               	subwf	___ftadd@exp2& (0+255),w,b
  7413  001892  B0D8               	btfsc	status,0,c
  7414  001894  D00E               	goto	l1806
  7415                           
  7416                           ; BSR set to: 1
  7417  001896  5127               	movf	___ftadd@exp2& (0+255),w,b
  7418  001898  0800               	sublw	0
  7419  00189A  2528               	addwf	___ftadd@exp1& (0+255),w,b
  7420  00189C  6F23               	movwf	??___ftadd& (0+255),b
  7421  00189E  0E18               	movlw	24
  7422  0018A0  6523               	cpfsgt	??___ftadd& (0+255),b
  7423  0018A2  D007               	goto	l1806
  7424  0018A4                     u6290:
  7425                           
  7426                           ; BSR set to: 1
  7427  0018A4  C11D  F11D         	movff	___ftadd@f1,?___ftadd
  7428  0018A8  C11E  F11E         	movff	___ftadd@f1+1,?___ftadd+1
  7429  0018AC  C11F  F11F         	movff	___ftadd@f1+2,?___ftadd+2
  7430  0018B0  0012               	return	
  7431  0018B2                     l1806:
  7432                           
  7433                           ; BSR set to: 1
  7434                           
  7435                           ; BSR set to: 1
  7436  0018B2  0E06               	movlw	6
  7437  0018B4  6F26               	movwf	___ftadd@sign& (0+255),b
  7438                           
  7439                           ; BSR set to: 1
  7440  0018B6  BF1F               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  7441                           
  7442                           ; BSR set to: 1
  7443  0018B8  8F26               	bsf	___ftadd@sign& (0+255),7,b
  7444                           
  7445                           ; BSR set to: 1
  7446                           
  7447                           ; BSR set to: 1
  7448  0018BA  BF22               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  7449                           
  7450                           ; BSR set to: 1
  7451  0018BC  8D26               	bsf	___ftadd@sign& (0+255),6,b
  7452                           
  7453                           ; BSR set to: 1
  7454  0018BE  8F1E               	bsf	(___ftadd@f1+1)& (0+255),7,b
  7455                           
  7456                           ; BSR set to: 1
  7457  0018C0  0EFF               	movlw	255
  7458  0018C2  171D               	andwf	___ftadd@f1& (0+255),f,b
  7459  0018C4  0EFF               	movlw	255
  7460  0018C6  171E               	andwf	(___ftadd@f1+1)& (0+255),f,b
  7461  0018C8  0E00               	movlw	0
  7462  0018CA  171F               	andwf	(___ftadd@f1+2)& (0+255),f,b
  7463  0018CC  8F21               	bsf	(___ftadd@f2+1)& (0+255),7,b
  7464                           
  7465                           ; BSR set to: 1
  7466  0018CE  0EFF               	movlw	255
  7467  0018D0  1720               	andwf	___ftadd@f2& (0+255),f,b
  7468  0018D2  0EFF               	movlw	255
  7469  0018D4  1721               	andwf	(___ftadd@f2+1)& (0+255),f,b
  7470  0018D6  0E00               	movlw	0
  7471  0018D8  1722               	andwf	(___ftadd@f2+2)& (0+255),f,b
  7472                           
  7473                           ; BSR set to: 1
  7474  0018DA  5127               	movf	___ftadd@exp2& (0+255),w,b
  7475  0018DC  5D28               	subwf	___ftadd@exp1& (0+255),w,b
  7476  0018DE  B0D8               	btfsc	status,0,c
  7477  0018E0  D01B               	goto	l1811
  7478  0018E2                     u6320:
  7479                           
  7480                           ; BSR set to: 1
  7481                           
  7482                           ; BSR set to: 1
  7483  0018E2  90D8               	bcf	status,0,c
  7484  0018E4  3720               	rlcf	___ftadd@f2& (0+255),f,b
  7485  0018E6  3721               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7486  0018E8  3722               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7487  0018EA  0727               	decf	___ftadd@exp2& (0+255),f,b
  7488                           
  7489                           ; BSR set to: 1
  7490  0018EC  5128               	movf	___ftadd@exp1& (0+255),w,b
  7491  0018EE  1927               	xorwf	___ftadd@exp2& (0+255),w,b
  7492  0018F0  B4D8               	btfsc	status,2,c
  7493  0018F2  D00D               	goto	l1816
  7494                           
  7495                           ; BSR set to: 1
  7496  0018F4  0726               	decf	___ftadd@sign& (0+255),f,b
  7497  0018F6  C126  F123         	movff	___ftadd@sign,??___ftadd
  7498  0018FA  0E07               	movlw	7
  7499  0018FC  1723               	andwf	??___ftadd& (0+255),f,b
  7500  0018FE  B4D8               	btfsc	status,2,c
  7501  001900  D006               	goto	l1816
  7502  001902  D7EF               	goto	u6320
  7503  001904                     
  7504                           ; BSR set to: 1
  7505                           
  7506                           ; BSR set to: 1
  7507  001904  90D8               	bcf	status,0,c
  7508  001906  331F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7509  001908  331E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7510  00190A  331D               	rrcf	___ftadd@f1& (0+255),f,b
  7511  00190C  2B28               	incf	___ftadd@exp1& (0+255),f,b
  7512  00190E                     l1816:
  7513                           
  7514                           ; BSR set to: 1
  7515                           
  7516                           ; BSR set to: 1
  7517  00190E  5127               	movf	___ftadd@exp2& (0+255),w,b
  7518  001910  1928               	xorwf	___ftadd@exp1& (0+255),w,b
  7519  001912  B4D8               	btfsc	status,2,c
  7520  001914  D01F               	goto	u6390
  7521  001916  D7F6               	goto	l1817
  7522  001918                     l1811:
  7523                           
  7524                           ; BSR set to: 1
  7525                           
  7526                           ; BSR set to: 1
  7527  001918  5128               	movf	___ftadd@exp1& (0+255),w,b
  7528  00191A  5D27               	subwf	___ftadd@exp2& (0+255),w,b
  7529  00191C  B0D8               	btfsc	status,0,c
  7530  00191E  D01A               	goto	u6390
  7531  001920                     u6360:
  7532                           
  7533                           ; BSR set to: 1
  7534                           
  7535                           ; BSR set to: 1
  7536  001920  90D8               	bcf	status,0,c
  7537  001922  371D               	rlcf	___ftadd@f1& (0+255),f,b
  7538  001924  371E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7539  001926  371F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7540  001928  0728               	decf	___ftadd@exp1& (0+255),f,b
  7541                           
  7542                           ; BSR set to: 1
  7543  00192A  5128               	movf	___ftadd@exp1& (0+255),w,b
  7544  00192C  1927               	xorwf	___ftadd@exp2& (0+255),w,b
  7545  00192E  B4D8               	btfsc	status,2,c
  7546  001930  D00D               	goto	l1825
  7547                           
  7548                           ; BSR set to: 1
  7549  001932  0726               	decf	___ftadd@sign& (0+255),f,b
  7550  001934  C126  F123         	movff	___ftadd@sign,??___ftadd
  7551  001938  0E07               	movlw	7
  7552  00193A  1723               	andwf	??___ftadd& (0+255),f,b
  7553  00193C  B4D8               	btfsc	status,2,c
  7554  00193E  D006               	goto	l1825
  7555  001940  D7EF               	goto	u6360
  7556  001942                     
  7557                           ; BSR set to: 1
  7558                           
  7559                           ; BSR set to: 1
  7560  001942  90D8               	bcf	status,0,c
  7561  001944  3322               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7562  001946  3321               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7563  001948  3320               	rrcf	___ftadd@f2& (0+255),f,b
  7564  00194A  2B27               	incf	___ftadd@exp2& (0+255),f,b
  7565  00194C                     l1825:
  7566                           
  7567                           ; BSR set to: 1
  7568                           
  7569                           ; BSR set to: 1
  7570  00194C  5127               	movf	___ftadd@exp2& (0+255),w,b
  7571  00194E  1928               	xorwf	___ftadd@exp1& (0+255),w,b
  7572  001950  A4D8               	btfss	status,2,c
  7573  001952  D7F7               	goto	l1826
  7574  001954                     u6390:
  7575                           
  7576                           ; BSR set to: 1
  7577                           
  7578                           ; BSR set to: 1
  7579                           
  7580                           ; BSR set to: 1
  7581  001954  AF26               	btfss	___ftadd@sign& (0+255),7,b
  7582  001956  D00C               	goto	l1828
  7583                           
  7584                           ; BSR set to: 1
  7585  001958  0EFF               	movlw	255
  7586  00195A  1B1D               	xorwf	___ftadd@f1& (0+255),f,b
  7587  00195C  0EFF               	movlw	255
  7588  00195E  1B1E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7589  001960  0EFF               	movlw	255
  7590  001962  1B1F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7591  001964  0E01               	movlw	1
  7592  001966  271D               	addwf	___ftadd@f1& (0+255),f,b
  7593  001968  0E00               	movlw	0
  7594  00196A  231E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7595  00196C  0E00               	movlw	0
  7596  00196E  231F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7597  001970                     l1828:
  7598                           
  7599                           ; BSR set to: 1
  7600  001970  AD26               	btfss	___ftadd@sign& (0+255),6,b
  7601  001972  D00C               	goto	l1829
  7602                           
  7603                           ; BSR set to: 1
  7604  001974  0EFF               	movlw	255
  7605  001976  1B20               	xorwf	___ftadd@f2& (0+255),f,b
  7606  001978  0EFF               	movlw	255
  7607  00197A  1B21               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7608  00197C  0EFF               	movlw	255
  7609  00197E  1B22               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7610  001980  0E01               	movlw	1
  7611  001982  2720               	addwf	___ftadd@f2& (0+255),f,b
  7612  001984  0E00               	movlw	0
  7613  001986  2321               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7614  001988  0E00               	movlw	0
  7615  00198A  2322               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7616  00198C                     l1829:
  7617                           
  7618                           ; BSR set to: 1
  7619                           
  7620                           ; BSR set to: 1
  7621  00198C  0E00               	movlw	0
  7622  00198E  6F26               	movwf	___ftadd@sign& (0+255),b
  7623                           
  7624                           ; BSR set to: 1
  7625  001990  511D               	movf	___ftadd@f1& (0+255),w,b
  7626  001992  2720               	addwf	___ftadd@f2& (0+255),f,b
  7627  001994  511E               	movf	(___ftadd@f1+1)& (0+255),w,b
  7628  001996  2321               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7629  001998  511F               	movf	(___ftadd@f1+2)& (0+255),w,b
  7630  00199A  2322               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7631                           
  7632                           ; BSR set to: 1
  7633  00199C  AF22               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7634  00199E  D00E               	goto	l1830
  7635                           
  7636                           ; BSR set to: 1
  7637  0019A0  0EFF               	movlw	255
  7638  0019A2  1B20               	xorwf	___ftadd@f2& (0+255),f,b
  7639  0019A4  0EFF               	movlw	255
  7640  0019A6  1B21               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7641  0019A8  0EFF               	movlw	255
  7642  0019AA  1B22               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7643  0019AC  0E01               	movlw	1
  7644  0019AE  2720               	addwf	___ftadd@f2& (0+255),f,b
  7645  0019B0  0E00               	movlw	0
  7646  0019B2  2321               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7647  0019B4  0E00               	movlw	0
  7648  0019B6  2322               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7649                           
  7650                           ; BSR set to: 1
  7651  0019B8  0E01               	movlw	1
  7652  0019BA  6F26               	movwf	___ftadd@sign& (0+255),b
  7653  0019BC                     l1830:
  7654                           
  7655                           ; BSR set to: 1
  7656                           
  7657                           ; BSR set to: 1
  7658  0019BC  C120  F100         	movff	___ftadd@f2,___ftpack@arg
  7659  0019C0  C121  F101         	movff	___ftadd@f2+1,___ftpack@arg+1
  7660  0019C4  C122  F102         	movff	___ftadd@f2+2,___ftpack@arg+2
  7661  0019C8  C128  F103         	movff	___ftadd@exp1,___ftpack@exp
  7662  0019CC  C126  F104         	movff	___ftadd@sign,___ftpack@sign
  7663  0019D0  EC14  F015         	call	___ftpack	;wreg free
  7664  0019D4  C100  F11D         	movff	?___ftpack,?___ftadd
  7665  0019D8  C101  F11E         	movff	?___ftpack+1,?___ftadd+1
  7666  0019DC  C102  F11F         	movff	?___ftpack+2,?___ftadd+2
  7667  0019E0  0012               	return	
  7668  0019E2                     __end_of___ftadd:
  7669                           	opt stack 0
  7670                           tosu	equ	0xFFF
  7671                           tosh	equ	0xFFE
  7672                           tosl	equ	0xFFD
  7673                           pclath	equ	0xFFA
  7674                           prodh	equ	0xFF4
  7675                           prodl	equ	0xFF3
  7676                           intcon	equ	0xFF2
  7677                           postinc0	equ	0xFEE
  7678                           wreg	equ	0xFE8
  7679                           indf2	equ	0xFDF
  7680                           postinc2	equ	0xFDE
  7681                           fsr2h	equ	0xFDA
  7682                           fsr2l	equ	0xFD9
  7683                           status	equ	0xFD8
  7684                           
  7685 ;; *************** function ___ftpack *****************
  7686 ;; Defined at:
  7687 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  arg             3    0[BANK1 ] unsigned um
  7690 ;;  exp             1    3[BANK1 ] unsigned char 
  7691 ;;  sign            1    4[BANK1 ] unsigned char 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;		None
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  3    0[BANK1 ] float 
  7696 ;; Registers used:
  7697 ;;		wreg, status,2, status,0
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7703 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7705 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7706 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7707 ;;Total ram usage:        8 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:   18
  7710 ;; This function calls:
  7711 ;;		Nothing
  7712 ;; This function is called by:
  7713 ;;		___ftadd
  7714 ;;		___ftdiv
  7715 ;;		___ftmul
  7716 ;;		___lwtoft
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text45
  7721  002A28                     __ptext45:
  7722                           	opt stack 0
  7723  002A28                     ___ftpack:
  7724                           	opt stack 7
  7725                           
  7726                           ;incstack = 0
  7727  002A28  0101               	movlb	1	; () banked
  7728  002A2A  5103               	movf	___ftpack@exp& (0+255),w,b
  7729  002A2C  B4D8               	btfsc	status,2,c
  7730  002A2E  D005               	goto	u6130
  7731                           
  7732                           ; BSR set to: 1
  7733  002A30  5100               	movf	___ftpack@arg& (0+255),w,b
  7734  002A32  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  7735  002A34  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  7736  002A36  A4D8               	btfss	status,2,c
  7737  002A38  D00C               	goto	l1771
  7738  002A3A                     u6130:
  7739                           
  7740                           ; BSR set to: 1
  7741                           
  7742                           ; BSR set to: 1
  7743  002A3A  0E00               	movlw	0
  7744  002A3C  6F00               	movwf	?___ftpack& (0+255),b
  7745  002A3E  0E00               	movlw	0
  7746  002A40  6F01               	movwf	(?___ftpack+1)& (0+255),b
  7747  002A42  0E00               	movlw	0
  7748  002A44  6F02               	movwf	(?___ftpack+2)& (0+255),b
  7749                           
  7750                           ; BSR set to: 1
  7751  002A46  0012               	return	
  7752  002A48                     
  7753                           ; BSR set to: 1
  7754                           
  7755                           ; BSR set to: 1
  7756  002A48  2B03               	incf	___ftpack@exp& (0+255),f,b
  7757  002A4A  90D8               	bcf	status,0,c
  7758  002A4C  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7759  002A4E  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7760  002A50  3300               	rrcf	___ftpack@arg& (0+255),f,b
  7761  002A52                     l1771:
  7762                           
  7763                           ; BSR set to: 1
  7764                           
  7765                           ; BSR set to: 1
  7766  002A52  0E00               	movlw	0
  7767  002A54  1500               	andwf	___ftpack@arg& (0+255),w,b
  7768  002A56  6F05               	movwf	??___ftpack& (0+255),b
  7769  002A58  0E00               	movlw	0
  7770  002A5A  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7771  002A5C  6F06               	movwf	(??___ftpack+1)& (0+255),b
  7772  002A5E  0EFE               	movlw	254
  7773  002A60  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7774  002A62  6F07               	movwf	(??___ftpack+2)& (0+255),b
  7775  002A64  5105               	movf	??___ftpack& (0+255),w,b
  7776  002A66  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
  7777  002A68  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
  7778  002A6A  B4D8               	btfsc	status,2,c
  7779  002A6C  D00C               	goto	l1774
  7780  002A6E  D7EC               	goto	l1772
  7781  002A70                     
  7782                           ; BSR set to: 1
  7783                           
  7784                           ; BSR set to: 1
  7785  002A70  2B03               	incf	___ftpack@exp& (0+255),f,b
  7786                           
  7787                           ; BSR set to: 1
  7788  002A72  0E01               	movlw	1
  7789  002A74  2700               	addwf	___ftpack@arg& (0+255),f,b
  7790  002A76  0E00               	movlw	0
  7791  002A78  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  7792  002A7A  0E00               	movlw	0
  7793  002A7C  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  7794  002A7E  90D8               	bcf	status,0,c
  7795  002A80  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7796  002A82  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7797  002A84  3300               	rrcf	___ftpack@arg& (0+255),f,b
  7798  002A86                     l1774:
  7799                           
  7800                           ; BSR set to: 1
  7801                           
  7802                           ; BSR set to: 1
  7803  002A86  0E00               	movlw	0
  7804  002A88  1500               	andwf	___ftpack@arg& (0+255),w,b
  7805  002A8A  6F05               	movwf	??___ftpack& (0+255),b
  7806  002A8C  0E00               	movlw	0
  7807  002A8E  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7808  002A90  6F06               	movwf	(??___ftpack+1)& (0+255),b
  7809  002A92  0EFF               	movlw	255
  7810  002A94  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7811  002A96  6F07               	movwf	(??___ftpack+2)& (0+255),b
  7812  002A98  5105               	movf	??___ftpack& (0+255),w,b
  7813  002A9A  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
  7814  002A9C  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
  7815  002A9E  B4D8               	btfsc	status,2,c
  7816  002AA0  D006               	goto	l1777
  7817  002AA2  D7E6               	goto	l1775
  7818  002AA4                     
  7819                           ; BSR set to: 1
  7820                           
  7821                           ; BSR set to: 1
  7822  002AA4  0703               	decf	___ftpack@exp& (0+255),f,b
  7823  002AA6  90D8               	bcf	status,0,c
  7824  002AA8  3700               	rlcf	___ftpack@arg& (0+255),f,b
  7825  002AAA  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  7826  002AAC  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  7827  002AAE                     l1777:
  7828                           
  7829                           ; BSR set to: 1
  7830                           
  7831                           ; BSR set to: 1
  7832  002AAE  BF01               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  7833  002AB0  D003               	goto	u6170
  7834                           
  7835                           ; BSR set to: 1
  7836  002AB2  0E02               	movlw	2
  7837  002AB4  6103               	cpfslt	___ftpack@exp& (0+255),b
  7838  002AB6  D7F6               	goto	l1778
  7839  002AB8                     u6170:
  7840                           
  7841                           ; BSR set to: 1
  7842                           
  7843                           ; BSR set to: 1
  7844  002AB8  A103               	btfss	___ftpack@exp& (0+255),0,b
  7845                           
  7846                           ; BSR set to: 1
  7847  002ABA  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
  7848                           
  7849                           ; BSR set to: 1
  7850                           
  7851                           ; BSR set to: 1
  7852  002ABC  90D8               	bcf	status,0,c
  7853  002ABE  3303               	rrcf	___ftpack@exp& (0+255),f,b
  7854  002AC0  5103               	movf	___ftpack@exp& (0+255),w,b
  7855  002AC2  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  7856                           
  7857                           ; BSR set to: 1
  7858  002AC4  5104               	movf	___ftpack@sign& (0+255),w,b
  7859  002AC6  A4D8               	btfss	status,2,c
  7860                           
  7861                           ; BSR set to: 1
  7862  002AC8  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
  7863                           
  7864                           ; BSR set to: 1
  7865                           
  7866                           ; BSR set to: 1
  7867  002ACA  C100  F100         	movff	___ftpack@arg,?___ftpack
  7868  002ACE  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
  7869  002AD2  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
  7870  002AD6  0012               	return	
  7871  002AD8                     __end_of___ftpack:
  7872                           	opt stack 0
  7873                           tosu	equ	0xFFF
  7874                           tosh	equ	0xFFE
  7875                           tosl	equ	0xFFD
  7876                           pclath	equ	0xFFA
  7877                           prodh	equ	0xFF4
  7878                           prodl	equ	0xFF3
  7879                           intcon	equ	0xFF2
  7880                           postinc0	equ	0xFEE
  7881                           wreg	equ	0xFE8
  7882                           indf2	equ	0xFDF
  7883                           postinc2	equ	0xFDE
  7884                           fsr2h	equ	0xFDA
  7885                           fsr2l	equ	0xFD9
  7886                           status	equ	0xFD8
  7887                           
  7888 ;; *************** function _TMR0_WriteTimer *****************
  7889 ;; Defined at:
  7890 ;;		line 113 in file "mcc_generated_files/tmr0.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;  timerVal        2   56[BANK1 ] unsigned int 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7904 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7907 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;Total ram usage:        2 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:   18
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_main
  7915 ;;		_delayTmr
  7916 ;;		_buscarEnemigo
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text46
  7921  003E70                     __ptext46:
  7922                           	opt stack 0
  7923  003E70                     _TMR0_WriteTimer:
  7924                           	opt stack 8
  7925                           
  7926                           ;tmr0.c: 116: TMR0H = timerVal >> 8;
  7927                           
  7928                           ; BSR set to: 1
  7929                           ;incstack = 0
  7930  003E70  0101               	movlb	1	; () banked
  7931  003E72  5139               	movf	(TMR0_WriteTimer@timerVal+1)& (0+255),w,b
  7932  003E74  6ED4               	movwf	4052,c	;volatile
  7933                           
  7934                           ; BSR set to: 1
  7935                           ;tmr0.c: 117: TMR0L = (uint8_t) timerVal;
  7936  003E76  C138  FFD3         	movff	TMR0_WriteTimer@timerVal,4051	;volatile
  7937                           
  7938                           ; BSR set to: 1
  7939  003E7A  0012               	return		;funcret
  7940  003E7C                     __end_of_TMR0_WriteTimer:
  7941                           	opt stack 0
  7942                           tosu	equ	0xFFF
  7943                           tosh	equ	0xFFE
  7944                           tosl	equ	0xFFD
  7945                           pclath	equ	0xFFA
  7946                           prodh	equ	0xFF4
  7947                           prodl	equ	0xFF3
  7948                           intcon	equ	0xFF2
  7949                           postinc0	equ	0xFEE
  7950                           wreg	equ	0xFE8
  7951                           indf2	equ	0xFDF
  7952                           postinc2	equ	0xFDE
  7953                           fsr2h	equ	0xFDA
  7954                           fsr2l	equ	0xFD9
  7955                           status	equ	0xFD8
  7956                           
  7957 ;; *************** function _TMR0_StopTimer *****************
  7958 ;; Defined at:
  7959 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		None
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7977 ;;Total ram usage:        0 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:   18
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_main
  7984 ;;		_delayTmr
  7985 ;;		_buscarEnemigo
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	text47
  7990  003EA6                     __ptext47:
  7991                           	opt stack 0
  7992  003EA6                     _TMR0_StopTimer:
  7993                           	opt stack 8
  7994                           
  7995                           ;tmr0.c: 97: T0CON0bits.T0EN = 0;
  7996                           
  7997                           ; BSR set to: 1
  7998                           ;incstack = 0
  7999  003EA6  9ED5               	bcf	4053,7,c	;volatile
  8000  003EA8  0012               	return		;funcret
  8001  003EAA                     __end_of_TMR0_StopTimer:
  8002                           	opt stack 0
  8003                           tosu	equ	0xFFF
  8004                           tosh	equ	0xFFE
  8005                           tosl	equ	0xFFD
  8006                           pclath	equ	0xFFA
  8007                           prodh	equ	0xFF4
  8008                           prodl	equ	0xFF3
  8009                           intcon	equ	0xFF2
  8010                           postinc0	equ	0xFEE
  8011                           wreg	equ	0xFE8
  8012                           indf2	equ	0xFDF
  8013                           postinc2	equ	0xFDE
  8014                           fsr2h	equ	0xFDA
  8015                           fsr2l	equ	0xFD9
  8016                           status	equ	0xFD8
  8017                           
  8018 ;; *************** function _TMR0_StartTimer *****************
  8019 ;; Defined at:
  8020 ;;		line 88 in file "mcc_generated_files/tmr0.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;		None
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1    wreg      void 
  8027 ;; Registers used:
  8028 ;;		None
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8038 ;;Total ram usage:        0 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:   18
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_main
  8045 ;;		_delayTmr
  8046 ;;		_buscarEnemigo
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	text48
  8051  003EAA                     __ptext48:
  8052                           	opt stack 0
  8053  003EAA                     _TMR0_StartTimer:
  8054                           	opt stack 8
  8055                           
  8056                           ;tmr0.c: 91: T0CON0bits.T0EN = 1;
  8057                           
  8058                           ;incstack = 0
  8059  003EAA  8ED5               	bsf	4053,7,c	;volatile
  8060  003EAC  0012               	return		;funcret
  8061  003EAE                     __end_of_TMR0_StartTimer:
  8062                           	opt stack 0
  8063                           tosu	equ	0xFFF
  8064                           tosh	equ	0xFFE
  8065                           tosl	equ	0xFFD
  8066                           pclath	equ	0xFFA
  8067                           prodh	equ	0xFF4
  8068                           prodl	equ	0xFF3
  8069                           intcon	equ	0xFF2
  8070                           postinc0	equ	0xFEE
  8071                           wreg	equ	0xFE8
  8072                           indf2	equ	0xFDF
  8073                           postinc2	equ	0xFDE
  8074                           fsr2h	equ	0xFDA
  8075                           fsr2l	equ	0xFD9
  8076                           status	equ	0xFD8
  8077                           
  8078 ;; *************** function _TMR0_Reload *****************
  8079 ;; Defined at:
  8080 ;;		line 120 in file "mcc_generated_files/tmr0.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;		None
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;		None
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, status,2
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8098 ;;Total ram usage:        0 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:   18
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		_main
  8105 ;;		_delayTmr
  8106 ;;		_buscarEnemigo
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text49
  8111  003E7C                     __ptext49:
  8112                           	opt stack 0
  8113  003E7C                     _TMR0_Reload:
  8114                           	opt stack 8
  8115                           
  8116                           ;tmr0.c: 123: TMR0H = timer0ReloadVal16bit >> 8;
  8117                           
  8118                           ;incstack = 0
  8119  003E7C  0100               	movlb	0	; () banked
  8120  003E7E  51F0               	movf	(_timer0ReloadVal16bit+1)& (0+255),w,b	;volatile
  8121  003E80  6ED4               	movwf	4052,c	;volatile
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;tmr0.c: 124: TMR0L = (uint8_t) timer0ReloadVal16bit;
  8125  003E82  C0EF  FFD3         	movff	_timer0ReloadVal16bit,4051	;volatile
  8126                           
  8127                           ; BSR set to: 0
  8128  003E86  0012               	return		;funcret
  8129  003E88                     __end_of_TMR0_Reload:
  8130                           	opt stack 0
  8131                           tosu	equ	0xFFF
  8132                           tosh	equ	0xFFE
  8133                           tosl	equ	0xFFD
  8134                           pclath	equ	0xFFA
  8135                           prodh	equ	0xFF4
  8136                           prodl	equ	0xFF3
  8137                           intcon	equ	0xFF2
  8138                           postinc0	equ	0xFEE
  8139                           wreg	equ	0xFE8
  8140                           indf2	equ	0xFDF
  8141                           postinc2	equ	0xFDE
  8142                           fsr2h	equ	0xFDA
  8143                           fsr2l	equ	0xFD9
  8144                           status	equ	0xFD8
  8145                           
  8146 ;; *************** function _buscar_t_init *****************
  8147 ;; Defined at:
  8148 ;;		line 46 in file "logica.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  med             2    0[BANK1 ] PTR struct buscar_t
  8151 ;;		 -> med_right(4), med_left(4), med_back(4), med_front(4), 
  8152 ;;		 -> med_final(4), 
  8153 ;;  sensID          1    2[BANK1 ] unsigned char 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;		None
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  1    wreg      void 
  8158 ;; Registers used:
  8159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8165 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8168 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8169 ;;Total ram usage:        3 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:   18
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_buscarEnemigo
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           	psect	text50
  8180  003708                     __ptext50:
  8181                           	opt stack 0
  8182  003708                     _buscar_t_init:
  8183                           	opt stack 11
  8184                           
  8185                           ;logica.c: 48: med->distMin = (255);
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;incstack = 0
  8189  003708  0101               	movlb	1	; () banked
  8190  00370A  EE20 F002          	lfsr	2,2
  8191  00370E  5100               	movf	buscar_t_init@med& (0+255),w,b
  8192  003710  26D9               	addwf	fsr2l,f,c
  8193  003712  5101               	movf	(buscar_t_init@med+1)& (0+255),w,b
  8194  003714  22DA               	addwfc	fsr2h,f,c
  8195  003716  0EFF               	movlw	255
  8196  003718  6EDF               	movwf	indf2,c
  8197                           
  8198                           ; BSR set to: 1
  8199                           ;logica.c: 49: med->milis = 0;
  8200  00371A  C100  FFD9         	movff	buscar_t_init@med,fsr2l
  8201  00371E  C101  FFDA         	movff	buscar_t_init@med+1,fsr2h
  8202  003722  0E00               	movlw	0
  8203  003724  6EDE               	movwf	postinc2,c
  8204  003726  0E00               	movlw	0
  8205  003728  6EDD               	movwf	postdec2,c
  8206                           
  8207                           ; BSR set to: 1
  8208                           ;logica.c: 50: med->lado_ID = sensID;
  8209  00372A  EE20 F003          	lfsr	2,3
  8210  00372E  5100               	movf	buscar_t_init@med& (0+255),w,b
  8211  003730  26D9               	addwf	fsr2l,f,c
  8212  003732  5101               	movf	(buscar_t_init@med+1)& (0+255),w,b
  8213  003734  22DA               	addwfc	fsr2h,f,c
  8214  003736  C102  FFDF         	movff	buscar_t_init@sensID,indf2
  8215                           
  8216                           ; BSR set to: 1
  8217  00373A  0012               	return		;funcret
  8218  00373C                     __end_of_buscar_t_init:
  8219                           	opt stack 0
  8220                           tosu	equ	0xFFF
  8221                           tosh	equ	0xFFE
  8222                           tosl	equ	0xFFD
  8223                           pclath	equ	0xFFA
  8224                           prodh	equ	0xFF4
  8225                           prodl	equ	0xFF3
  8226                           intcon	equ	0xFF2
  8227                           postinc0	equ	0xFEE
  8228                           wreg	equ	0xFE8
  8229                           indf2	equ	0xFDF
  8230                           postinc2	equ	0xFDE
  8231                           postdec2	equ	0xFDD
  8232                           fsr2h	equ	0xFDA
  8233                           fsr2l	equ	0xFD9
  8234                           status	equ	0xFD8
  8235                           
  8236 ;; *************** function _TMR0_ReadTimer *****************
  8237 ;; Defined at:
  8238 ;;		line 100 in file "mcc_generated_files/tmr0.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;		None
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  readVal         2    4[BANK1 ] unsigned int 
  8243 ;;  readValHigh     1    7[BANK1 ] unsigned char 
  8244 ;;  readValLow      1    6[BANK1 ] unsigned char 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  2    0[BANK1 ] unsigned int 
  8247 ;; Registers used:
  8248 ;;		wreg, status,2
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8254 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8255 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8256 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8257 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8258 ;;Total ram usage:        8 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; Hardware stack levels required when called:   18
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		_main
  8265 ;;		_buscarEnemigo
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text51
  8270  003B5E                     __ptext51:
  8271                           	opt stack 0
  8272  003B5E                     _TMR0_ReadTimer:
  8273                           	opt stack 11
  8274                           
  8275                           ;tmr0.c: 102: uint16_t readVal;
  8276                           ;tmr0.c: 103: uint8_t readValLow;
  8277                           ;tmr0.c: 104: uint8_t readValHigh;
  8278                           ;tmr0.c: 106: readValLow = TMR0L;
  8279                           
  8280                           ; BSR set to: 1
  8281                           ;incstack = 0
  8282  003B5E  CFD3 F106          	movff	4051,TMR0_ReadTimer@readValLow	;volatile
  8283                           
  8284                           ;tmr0.c: 107: readValHigh = TMR0H;
  8285  003B62  CFD4 F107          	movff	4052,TMR0_ReadTimer@readValHigh	;volatile
  8286                           
  8287                           ;tmr0.c: 108: readVal = ((uint16_t)readValHigh << 8) + readValLow;
  8288  003B66  0101               	movlb	1	; () banked
  8289  003B68  5107               	movf	TMR0_ReadTimer@readValHigh& (0+255),w,b
  8290  003B6A  6F02               	movwf	??_TMR0_ReadTimer& (0+255),b
  8291  003B6C  5106               	movf	TMR0_ReadTimer@readValLow& (0+255),w,b
  8292  003B6E  6F04               	movwf	TMR0_ReadTimer@readVal& (0+255),b
  8293  003B70  C102  F105         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  8294                           
  8295                           ; BSR set to: 1
  8296                           ;tmr0.c: 110: return readVal;
  8297  003B74  C104  F100         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  8298  003B78  C105  F101         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  8299  003B7C  0012               	return	
  8300  003B7E                     __end_of_TMR0_ReadTimer:
  8301                           	opt stack 0
  8302                           tosu	equ	0xFFF
  8303                           tosh	equ	0xFFE
  8304                           tosl	equ	0xFFD
  8305                           pclath	equ	0xFFA
  8306                           prodh	equ	0xFF4
  8307                           prodl	equ	0xFF3
  8308                           intcon	equ	0xFF2
  8309                           postinc0	equ	0xFEE
  8310                           wreg	equ	0xFE8
  8311                           indf2	equ	0xFDF
  8312                           postinc2	equ	0xFDE
  8313                           postdec2	equ	0xFDD
  8314                           fsr2h	equ	0xFDA
  8315                           fsr2l	equ	0xFD9
  8316                           status	equ	0xFD8
  8317                           
  8318 ;; *************** function _atacar *****************
  8319 ;; Defined at:
  8320 ;;		line 158 in file "main.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  pararAtaque     1    4[BANK1 ] unsigned char 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8335 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8336 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8337 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;Total ram usage:        4 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:   20
  8341 ;; This function calls:
  8342 ;;		_detenerse
  8343 ;;		_marcharAdelante
  8344 ;; This function is called by:
  8345 ;;		_main
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text52
  8350  002D80                     __ptext52:
  8351                           	opt stack 0
  8352  002D80                     _atacar:
  8353                           	opt stack 10
  8354                           
  8355                           ;main.c: 160: uint8_t pararAtaque = 0;
  8356                           
  8357                           ; BSR set to: 1
  8358                           ;incstack = 0
  8359  002D80  0E00               	movlw	0
  8360  002D82  0101               	movlb	1	; () banked
  8361  002D84  6F04               	movwf	atacar@pararAtaque& (0+255),b
  8362                           
  8363                           ; BSR set to: 1
  8364                           ;main.c: 162: marcharAdelante();
  8365  002D86  ECA6  F01E         	call	_marcharAdelante	;wreg free
  8366                           
  8367                           ;main.c: 163: do { LATDbits.LATD4 = 1; } while(0);
  8368  002D8A  8886               	bsf	3974,4,c	;volatile
  8369                           
  8370                           ;main.c: 164: interrupt_flags.borde_detectado = 0;
  8371  002D8C  0100               	movlb	0	; () banked
  8372  002D8E  95C4               	bcf	(_interrupt_flags+2)& (0+255),2,b	;volatile
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;main.c: 165: interrupt_flags.borde_activado = 1;
  8376  002D90  87C4               	bsf	(_interrupt_flags+2)& (0+255),3,b	;volatile
  8377                           
  8378                           ;main.c: 167: while (pararAtaque + interrupt_flags.borde_detectado + modoNonStop == 0)
  8379  002D92  D017               	goto	l706
  8380  002D94                     l703:
  8381                           
  8382                           ; BSR set to: 1
  8383                           ;main.c: 168: {
  8384                           ;main.c: 169: if (interrupt_flags.nuevaMuestraFront)
  8385  002D94  0100               	movlb	0	; () banked
  8386  002D96  A1C3               	btfss	(_interrupt_flags+1)& (0+255),0,b	;volatile
  8387  002D98  D014               	goto	l706
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;main.c: 170: {
  8391                           ;main.c: 171: interrupt_flags.nuevaMuestraFront = 0;
  8392  002D9A  91C3               	bcf	(_interrupt_flags+1)& (0+255),0,b	;volatile
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;main.c: 172: if (usonic.distancia.front < 5)
  8396  002D9C  0E05               	movlw	5
  8397  002D9E  61AD               	cpfslt	(_usonic+2)& (0+255),b	;volatile
  8398  002DA0  D005               	goto	l705
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;main.c: 173: {
  8402                           ;main.c: 174: modoNonStop = 1;
  8403  002DA2  0E01               	movlw	1
  8404  002DA4  6FCE               	movwf	_modoNonStop& (0+255),b
  8405                           
  8406                           ;main.c: 175: pararAtaque = 1;
  8407  002DA6  0E01               	movlw	1
  8408  002DA8  0101               	movlb	1	; () banked
  8409  002DAA  6F04               	movwf	atacar@pararAtaque& (0+255),b
  8410  002DAC                     l705:
  8411                           
  8412                           ;main.c: 176: }
  8413                           ;main.c: 179: if (med_final.distMin < usonic.distancia.front)
  8414                           
  8415                           ; BSR set to: 1
  8416  002DAC  0100               	movlb	0	; () banked
  8417  002DAE  51AD               	movf	(_usonic+2)& (0+255),w,b	;volatile
  8418  002DB0  5DD1               	subwf	(_med_final+2)& (0+255),w,b
  8419  002DB2  B0D8               	btfsc	status,0,c
  8420  002DB4  D006               	goto	l706
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;main.c: 180: {
  8424                           ;main.c: 181: med_final.distMin = usonic.distancia.front + 30;
  8425  002DB6  51AD               	movf	(_usonic+2)& (0+255),w,b	;volatile
  8426  002DB8  0F1E               	addlw	30
  8427  002DBA  6FD1               	movwf	(_med_final+2)& (0+255),b
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;main.c: 182: pararAtaque = 1;
  8431  002DBC  0E01               	movlw	1
  8432  002DBE  0101               	movlb	1	; () banked
  8433  002DC0  6F04               	movwf	atacar@pararAtaque& (0+255),b
  8434  002DC2                     l706:
  8435                           
  8436                           ; BSR set to: 1
  8437                           
  8438                           ; BSR set to: 1
  8439                           
  8440                           ; BSR set to: 1
  8441  002DC2  0100               	movlb	0	; () banked
  8442  002DC4  A5C4               	btfss	(_interrupt_flags+2)& (0+255),2,b	;volatile
  8443  002DC6  D004               	goto	u7240
  8444  002DC8  0101               	movlb	1	; () banked
  8445  002DCA  6B01               	clrf	??_atacar& (0+255),b
  8446  002DCC  2B01               	incf	??_atacar& (0+255),f,b
  8447  002DCE  D002               	goto	u7248
  8448  002DD0                     u7240:
  8449  002DD0  0101               	movlb	1	; () banked
  8450  002DD2  6B01               	clrf	??_atacar& (0+255),b
  8451  002DD4                     u7248:
  8452  002DD4  5101               	movf	??_atacar& (0+255),w,b
  8453  002DD6  C104  F102         	movff	atacar@pararAtaque,??_atacar+1
  8454  002DDA  6B03               	clrf	(??_atacar+2)& (0+255),b
  8455  002DDC  2702               	addwf	(??_atacar+1)& (0+255),f,b
  8456  002DDE  0E00               	movlw	0
  8457  002DE0  2303               	addwfc	(??_atacar+2)& (0+255),f,b
  8458  002DE2  0100               	movlb	0	; () banked
  8459  002DE4  51CE               	movf	_modoNonStop& (0+255),w,b
  8460  002DE6  0101               	movlb	1	; () banked
  8461  002DE8  2702               	addwf	(??_atacar+1)& (0+255),f,b
  8462  002DEA  0E00               	movlw	0
  8463  002DEC  2303               	addwfc	(??_atacar+2)& (0+255),f,b
  8464  002DEE  5102               	movf	(??_atacar+1)& (0+255),w,b
  8465  002DF0  1103               	iorwf	(??_atacar+2)& (0+255),w,b
  8466  002DF2  B4D8               	btfsc	status,2,c
  8467  002DF4  D7CF               	goto	l703
  8468                           
  8469                           ; BSR set to: 1
  8470                           ;main.c: 183: }
  8471                           ;main.c: 184: }
  8472                           ;main.c: 185: }
  8473                           ;main.c: 187: interrupt_flags.borde_detectado = 0;
  8474  002DF6  0100               	movlb	0	; () banked
  8475  002DF8  95C4               	bcf	(_interrupt_flags+2)& (0+255),2,b	;volatile
  8476  002DFA                     
  8477                           ; BSR set to: 0
  8478                           
  8479                           ; BSR set to: 0
  8480                           
  8481                           ; BSR set to: 0
  8482  002DFA  51CE               	movf	_modoNonStop& (0+255),w,b
  8483  002DFC  B4D8               	btfsc	status,2,c
  8484  002DFE  D002               	goto	u7270
  8485                           
  8486                           ; BSR set to: 0
  8487  002E00  A5C4               	btfss	(_interrupt_flags+2)& (0+255),2,b	;volatile
  8488  002E02  D7FB               	goto	l709
  8489  002E04                     u7270:
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;main.c: 191: interrupt_flags.borde_detectado = 0;
  8493                           
  8494                           ; BSR set to: 0
  8495  002E04  95C4               	bcf	(_interrupt_flags+2)& (0+255),2,b	;volatile
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;main.c: 192: detenerse();
  8499  002E06  ECDD  F01E         	call	_detenerse	;wreg free
  8500                           
  8501                           ;main.c: 193: modoNonStop = 0;
  8502  002E0A  0E00               	movlw	0
  8503  002E0C  0100               	movlb	0	; () banked
  8504  002E0E  6FCE               	movwf	_modoNonStop& (0+255),b
  8505                           
  8506                           ; BSR set to: 0
  8507                           
  8508                           ; BSR set to: 0
  8509                           
  8510                           ;main.c: 194: do { LATDbits.LATD4 = 0; } while(0);
  8511  002E10  9886               	bcf	3974,4,c	;volatile
  8512                           
  8513                           ; BSR set to: 0
  8514  002E12  0012               	return	
  8515  002E14                     __end_of_atacar:
  8516                           	opt stack 0
  8517                           tosu	equ	0xFFF
  8518                           tosh	equ	0xFFE
  8519                           tosl	equ	0xFFD
  8520                           pclath	equ	0xFFA
  8521                           prodh	equ	0xFF4
  8522                           prodl	equ	0xFF3
  8523                           intcon	equ	0xFF2
  8524                           postinc0	equ	0xFEE
  8525                           wreg	equ	0xFE8
  8526                           indf2	equ	0xFDF
  8527                           postinc2	equ	0xFDE
  8528                           postdec2	equ	0xFDD
  8529                           fsr2h	equ	0xFDA
  8530                           fsr2l	equ	0xFD9
  8531                           status	equ	0xFD8
  8532                           
  8533 ;; *************** function _marcharAdelante *****************
  8534 ;; Defined at:
  8535 ;;		line 5 in file "api_locomocion.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg, status,2, status,0, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:   19
  8556 ;; This function calls:
  8557 ;;		_motorDe_set
  8558 ;;		_motorIz_set
  8559 ;; This function is called by:
  8560 ;;		_atacar
  8561 ;;		_marcharAdelanteTiempo
  8562 ;;		_giroLeveIzquierdaAvanzar
  8563 ;;		_giroLeveDerechaAvanzar
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text53
  8568  003D4C                     __ptext53:
  8569                           	opt stack 0
  8570  003D4C                     _marcharAdelante:
  8571                           	opt stack 8
  8572                           
  8573                           ;api_locomocion.c: 7: motorIz_set(1);
  8574                           
  8575                           ; BSR set to: 0
  8576                           ;incstack = 0
  8577  003D4C  0E01               	movlw	1
  8578  003D4E  ECB8  F01B         	call	_motorIz_set
  8579                           
  8580                           ;api_locomocion.c: 8: motorDe_set(1);
  8581  003D52  0E01               	movlw	1
  8582  003D54  ECD0  F01B         	call	_motorDe_set
  8583                           
  8584                           ;api_locomocion.c: 9: ultimoMovimiento = 0;
  8585  003D58  0E00               	movlw	0
  8586  003D5A  6E5E               	movwf	_ultimoMovimiento,c
  8587  003D5C  0012               	return		;funcret
  8588  003D5E                     __end_of_marcharAdelante:
  8589                           	opt stack 0
  8590                           tosu	equ	0xFFF
  8591                           tosh	equ	0xFFE
  8592                           tosl	equ	0xFFD
  8593                           pclath	equ	0xFFA
  8594                           prodh	equ	0xFF4
  8595                           prodl	equ	0xFF3
  8596                           intcon	equ	0xFF2
  8597                           postinc0	equ	0xFEE
  8598                           wreg	equ	0xFE8
  8599                           indf2	equ	0xFDF
  8600                           postinc2	equ	0xFDE
  8601                           postdec2	equ	0xFDD
  8602                           fsr2h	equ	0xFDA
  8603                           fsr2l	equ	0xFD9
  8604                           status	equ	0xFD8
  8605                           
  8606 ;; *************** function _detenerse *****************
  8607 ;; Defined at:
  8608 ;;		line 117 in file "api_locomocion.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;		None
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;		None
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  1    wreg      void 
  8615 ;; Registers used:
  8616 ;;		wreg, status,2, status,0, cstack
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8626 ;;Total ram usage:        0 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; Hardware stack levels required when called:   19
  8629 ;; This function calls:
  8630 ;;		_motorDe_set
  8631 ;;		_motorIz_set
  8632 ;; This function is called by:
  8633 ;;		_atacar
  8634 ;;		_marcharAdelanteTiempo
  8635 ;;		_marcharAtrasTiempo
  8636 ;;		_girarXgradosizquierda
  8637 ;;		_girarXgradosderecha
  8638 ;;		_giroLeveIzquierdaAvanzar
  8639 ;;		_giroLeveIzquierdaRetroceder
  8640 ;;		_giroLeveDerechaAvanzar
  8641 ;;		_giroLeveDerechaRetroceder
  8642 ;;		_buscarEnemigo
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text54
  8647  003DBA                     __ptext54:
  8648                           	opt stack 0
  8649  003DBA                     _detenerse:
  8650                           	opt stack 8
  8651                           
  8652                           ;api_locomocion.c: 119: motorIz_set(0);
  8653                           
  8654                           ;incstack = 0
  8655  003DBA  0E00               	movlw	0
  8656  003DBC  ECB8  F01B         	call	_motorIz_set
  8657                           
  8658                           ;api_locomocion.c: 120: motorDe_set(0);
  8659  003DC0  0E00               	movlw	0
  8660  003DC2  ECD0  F01B         	call	_motorDe_set
  8661  003DC6  0012               	return		;funcret
  8662  003DC8                     __end_of_detenerse:
  8663                           	opt stack 0
  8664                           tosu	equ	0xFFF
  8665                           tosh	equ	0xFFE
  8666                           tosl	equ	0xFFD
  8667                           pclath	equ	0xFFA
  8668                           prodh	equ	0xFF4
  8669                           prodl	equ	0xFF3
  8670                           intcon	equ	0xFF2
  8671                           postinc0	equ	0xFEE
  8672                           wreg	equ	0xFE8
  8673                           indf2	equ	0xFDF
  8674                           postinc2	equ	0xFDE
  8675                           postdec2	equ	0xFDD
  8676                           fsr2h	equ	0xFDA
  8677                           fsr2l	equ	0xFD9
  8678                           status	equ	0xFD8
  8679                           
  8680 ;; *************** function _motorIz_set *****************
  8681 ;; Defined at:
  8682 ;;		line 24 in file "drv_motores.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  a               1    wreg     unsigned char 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  a               1    0[BANK1 ] unsigned char 
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  1    wreg      void 
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, status,0
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8697 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8699 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8700 ;;Total ram usage:        1 bytes
  8701 ;; Hardware stack levels used:    1
  8702 ;; Hardware stack levels required when called:   18
  8703 ;; This function calls:
  8704 ;;		Nothing
  8705 ;; This function is called by:
  8706 ;;		_marcharAdelante
  8707 ;;		_marcharAtras
  8708 ;;		_girarXgradosizquierda
  8709 ;;		_girarXgradosderecha
  8710 ;;		_detenerse
  8711 ;;		_buscarEnemigo
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           	psect	text55
  8716  003770                     __ptext55:
  8717                           	opt stack 0
  8718  003770                     _motorIz_set:
  8719                           	opt stack 8
  8720                           
  8721                           ;incstack = 0
  8722                           ;motorIz_set@a stored from wreg
  8723  003770  0101               	movlb	1	; () banked
  8724  003772  6F00               	movwf	motorIz_set@a& (0+255),b
  8725                           
  8726                           ;drv_motores.c: 26: switch (a)
  8727  003774  D009               	goto	l785
  8728  003776                     
  8729                           ;drv_motores.c: 29: do { LATEbits.LATE0 = 0; } while(0);
  8730  003776  9087               	bcf	3975,0,c	;volatile
  8731                           
  8732                           ;drv_motores.c: 30: do { LATAbits.LATA5 = 0; } while(0);
  8733  003778  9A83               	bcf	3971,5,c	;volatile
  8734                           
  8735                           ;drv_motores.c: 31: break;
  8736  00377A  0012               	return	
  8737  00377C                     
  8738                           ;drv_motores.c: 33: do { LATEbits.LATE0 = 0; } while(0);
  8739  00377C  9087               	bcf	3975,0,c	;volatile
  8740                           
  8741                           ;drv_motores.c: 34: do { LATAbits.LATA5 = 1; } while(0);
  8742  00377E  8A83               	bsf	3971,5,c	;volatile
  8743                           
  8744                           ;drv_motores.c: 35: break;
  8745  003780  0012               	return	
  8746  003782                     
  8747                           ;drv_motores.c: 37: do { LATEbits.LATE0 = 1; } while(0);
  8748  003782  8087               	bsf	3975,0,c	;volatile
  8749                           
  8750                           ;drv_motores.c: 38: do { LATAbits.LATA5 = 0; } while(0);
  8751  003784  9A83               	bcf	3971,5,c	;volatile
  8752                           
  8753                           ;drv_motores.c: 40: }
  8754                           
  8755                           ;drv_motores.c: 39: break;
  8756  003786  0012               	return	
  8757  003788                     l785:
  8758  003788  0101               	movlb	1	; () banked
  8759  00378A  5100               	movf	motorIz_set@a& (0+255),w,b
  8760                           
  8761                           ; Switch size 1, requested type "space"
  8762                           ; Number of cases is 3, Range of values is 0 to 2
  8763                           ; switch strategies available:
  8764                           ; Name         Instructions Cycles
  8765                           ; simple_byte           10     6 (average)
  8766                           ;	Chosen strategy is simple_byte
  8767  00378C  0A00               	xorlw	0	; case 0
  8768  00378E  B4D8               	btfsc	status,2,c
  8769  003790  D7F2               	goto	l786
  8770  003792  0A01               	xorlw	1	; case 1
  8771  003794  B4D8               	btfsc	status,2,c
  8772  003796  D7F2               	goto	l792
  8773  003798  0A03               	xorlw	3	; case 2
  8774  00379A  A4D8               	btfss	status,2,c
  8775  00379C  0012               	return	
  8776  00379E  D7F1               	goto	l797
  8777  0037A0                     __end_of_motorIz_set:
  8778                           	opt stack 0
  8779                           tosu	equ	0xFFF
  8780                           tosh	equ	0xFFE
  8781                           tosl	equ	0xFFD
  8782                           pclath	equ	0xFFA
  8783                           prodh	equ	0xFF4
  8784                           prodl	equ	0xFF3
  8785                           intcon	equ	0xFF2
  8786                           postinc0	equ	0xFEE
  8787                           wreg	equ	0xFE8
  8788                           indf2	equ	0xFDF
  8789                           postinc2	equ	0xFDE
  8790                           postdec2	equ	0xFDD
  8791                           fsr2h	equ	0xFDA
  8792                           fsr2l	equ	0xFD9
  8793                           status	equ	0xFD8
  8794                           
  8795 ;; *************** function _motorDe_set *****************
  8796 ;; Defined at:
  8797 ;;		line 4 in file "drv_motores.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  a               1    wreg     unsigned char 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  a               1    0[BANK1 ] unsigned char 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, status,0
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8814 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8815 ;;Total ram usage:        1 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:   18
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_marcharAdelante
  8822 ;;		_marcharAtras
  8823 ;;		_girarXgradosizquierda
  8824 ;;		_girarXgradosderecha
  8825 ;;		_detenerse
  8826 ;;		_buscarEnemigo
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text56
  8831  0037A0                     __ptext56:
  8832                           	opt stack 0
  8833  0037A0                     _motorDe_set:
  8834                           	opt stack 8
  8835                           
  8836                           ;incstack = 0
  8837                           ;motorDe_set@a stored from wreg
  8838  0037A0  0101               	movlb	1	; () banked
  8839  0037A2  6F00               	movwf	motorDe_set@a& (0+255),b
  8840                           
  8841                           ;drv_motores.c: 6: switch (a)
  8842  0037A4  D009               	goto	l765
  8843  0037A6                     
  8844                           ;drv_motores.c: 9: do { LATEbits.LATE2 = 0; } while(0);
  8845  0037A6  9487               	bcf	3975,2,c	;volatile
  8846                           
  8847                           ;drv_motores.c: 10: do { LATEbits.LATE1 = 0; } while(0);
  8848  0037A8  9287               	bcf	3975,1,c	;volatile
  8849                           
  8850                           ;drv_motores.c: 11: break;
  8851  0037AA  0012               	return	
  8852  0037AC                     
  8853                           ;drv_motores.c: 13: do { LATEbits.LATE2 = 1; } while(0);
  8854  0037AC  8487               	bsf	3975,2,c	;volatile
  8855                           
  8856                           ;drv_motores.c: 14: do { LATEbits.LATE1 = 0; } while(0);
  8857  0037AE  9287               	bcf	3975,1,c	;volatile
  8858                           
  8859                           ;drv_motores.c: 15: break;
  8860  0037B0  0012               	return	
  8861  0037B2                     
  8862                           ;drv_motores.c: 17: do { LATEbits.LATE2 = 0; } while(0);
  8863  0037B2  9487               	bcf	3975,2,c	;volatile
  8864                           
  8865                           ;drv_motores.c: 18: do { LATEbits.LATE1 = 1; } while(0);
  8866  0037B4  8287               	bsf	3975,1,c	;volatile
  8867                           
  8868                           ;drv_motores.c: 20: }
  8869                           
  8870                           ;drv_motores.c: 19: break;
  8871  0037B6  0012               	return	
  8872  0037B8                     l765:
  8873  0037B8  0101               	movlb	1	; () banked
  8874  0037BA  5100               	movf	motorDe_set@a& (0+255),w,b
  8875                           
  8876                           ; Switch size 1, requested type "space"
  8877                           ; Number of cases is 3, Range of values is 0 to 2
  8878                           ; switch strategies available:
  8879                           ; Name         Instructions Cycles
  8880                           ; simple_byte           10     6 (average)
  8881                           ;	Chosen strategy is simple_byte
  8882  0037BC  0A00               	xorlw	0	; case 0
  8883  0037BE  B4D8               	btfsc	status,2,c
  8884  0037C0  D7F2               	goto	l766
  8885  0037C2  0A01               	xorlw	1	; case 1
  8886  0037C4  B4D8               	btfsc	status,2,c
  8887  0037C6  D7F5               	goto	l777
  8888  0037C8  0A03               	xorlw	3	; case 2
  8889  0037CA  A4D8               	btfss	status,2,c
  8890  0037CC  0012               	return	
  8891  0037CE  D7EE               	goto	l772
  8892  0037D0                     __end_of_motorDe_set:
  8893                           	opt stack 0
  8894                           tosu	equ	0xFFF
  8895                           tosh	equ	0xFFE
  8896                           tosl	equ	0xFFD
  8897                           pclath	equ	0xFFA
  8898                           prodh	equ	0xFF4
  8899                           prodl	equ	0xFF3
  8900                           intcon	equ	0xFF2
  8901                           postinc0	equ	0xFEE
  8902                           wreg	equ	0xFE8
  8903                           indf2	equ	0xFDF
  8904                           postinc2	equ	0xFDE
  8905                           postdec2	equ	0xFDD
  8906                           fsr2h	equ	0xFDA
  8907                           fsr2l	equ	0xFD9
  8908                           status	equ	0xFD8
  8909                           
  8910 ;; *************** function _TMR0_HasOverflowOccured *****************
  8911 ;; Defined at:
  8912 ;;		line 127 in file "mcc_generated_files/tmr0.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;		None
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      unsigned char 
  8919 ;; Registers used:
  8920 ;;		wreg
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8930 ;;Total ram usage:        0 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:   18
  8933 ;; This function calls:
  8934 ;;		Nothing
  8935 ;; This function is called by:
  8936 ;;		_main
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text57
  8941  003DC8                     __ptext57:
  8942                           	opt stack 0
  8943  003DC8                     _TMR0_HasOverflowOccured:
  8944                           	opt stack 12
  8945                           
  8946                           ;tmr0.c: 130: return(PIR0bits.TMR0IF);
  8947                           
  8948                           ;incstack = 0
  8949  003DC8  010E               	movlb	14	; () banked
  8950  003DCA  ABCA               	btfss	202,5,b	;volatile
  8951  003DCC  D002               	goto	u7180
  8952  003DCE  0E01               	movlw	1
  8953  003DD0  0012               	return	
  8954  003DD2                     u7180:
  8955  003DD2  0E00               	movlw	0
  8956  003DD4  0012               	return	
  8957  003DD6                     __end_of_TMR0_HasOverflowOccured:
  8958                           	opt stack 0
  8959                           tosu	equ	0xFFF
  8960                           tosh	equ	0xFFE
  8961                           tosl	equ	0xFFD
  8962                           pclath	equ	0xFFA
  8963                           prodh	equ	0xFF4
  8964                           prodl	equ	0xFF3
  8965                           intcon	equ	0xFF2
  8966                           postinc0	equ	0xFEE
  8967                           wreg	equ	0xFE8
  8968                           indf2	equ	0xFDF
  8969                           postinc2	equ	0xFDE
  8970                           postdec2	equ	0xFDD
  8971                           fsr2h	equ	0xFDA
  8972                           fsr2l	equ	0xFD9
  8973                           status	equ	0xFD8
  8974                           
  8975 ;; *************** function _SYSTEM_Initialize *****************
  8976 ;; Defined at:
  8977 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;		None
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8995 ;;Total ram usage:        0 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; Hardware stack levels required when called:   20
  8998 ;; This function calls:
  8999 ;;		_INTERRUPT_Initialize
  9000 ;;		_OSCILLATOR_Initialize
  9001 ;;		_PIN_MANAGER_Initialize
  9002 ;;		_PMD_Initialize
  9003 ;;		_PWM3_Initialize
  9004 ;;		_PWM4_Initialize
  9005 ;;		_TMR0_Initialize
  9006 ;;		_TMR1_Initialize
  9007 ;;		_TMR2_Initialize
  9008 ;;		_TMR3_Initialize
  9009 ;;		_TMR5_Initialize
  9010 ;; This function is called by:
  9011 ;;		_main
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text58
  9016  0037D0                     __ptext58:
  9017                           	opt stack 0
  9018  0037D0                     _SYSTEM_Initialize:
  9019                           	opt stack 10
  9020                           
  9021                           ;mcc.c: 52: INTERRUPT_Initialize();
  9022                           
  9023                           ; BSR set to: 14
  9024                           ;incstack = 0
  9025  0037D0  EC0E  F01F         	call	_INTERRUPT_Initialize	;wreg free
  9026                           
  9027                           ;mcc.c: 53: PMD_Initialize();
  9028  0037D4  EC1E  F01E         	call	_PMD_Initialize	;wreg free
  9029                           
  9030                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  9031  0037D8  EC19  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  9032                           
  9033                           ;mcc.c: 55: OSCILLATOR_Initialize();
  9034  0037DC  EC48  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  9035                           
  9036                           ;mcc.c: 56: TMR3_Initialize();
  9037  0037E0  EC24  F01A         	call	_TMR3_Initialize	;wreg free
  9038                           
  9039                           ;mcc.c: 57: PWM4_Initialize();
  9040  0037E4  EC54  F01E         	call	_PWM4_Initialize	;wreg free
  9041                           
  9042                           ;mcc.c: 58: PWM3_Initialize();
  9043  0037E8  EC5F  F01E         	call	_PWM3_Initialize	;wreg free
  9044                           
  9045                           ;mcc.c: 59: TMR2_Initialize();
  9046  0037EC  EC0F  F01E         	call	_TMR2_Initialize	;wreg free
  9047                           
  9048                           ;mcc.c: 60: TMR5_Initialize();
  9049  0037F0  ECD6  F019         	call	_TMR5_Initialize	;wreg free
  9050                           
  9051                           ;mcc.c: 61: TMR1_Initialize();
  9052  0037F4  EC44  F01A         	call	_TMR1_Initialize	;wreg free
  9053                           
  9054                           ;mcc.c: 62: TMR0_Initialize();
  9055  0037F8  EC9E  F01B         	call	_TMR0_Initialize	;wreg free
  9056  0037FC  0012               	return		;funcret
  9057  0037FE                     __end_of_SYSTEM_Initialize:
  9058                           	opt stack 0
  9059                           tosu	equ	0xFFF
  9060                           tosh	equ	0xFFE
  9061                           tosl	equ	0xFFD
  9062                           pclath	equ	0xFFA
  9063                           prodh	equ	0xFF4
  9064                           prodl	equ	0xFF3
  9065                           intcon	equ	0xFF2
  9066                           postinc0	equ	0xFEE
  9067                           wreg	equ	0xFE8
  9068                           indf2	equ	0xFDF
  9069                           postinc2	equ	0xFDE
  9070                           postdec2	equ	0xFDD
  9071                           fsr2h	equ	0xFDA
  9072                           fsr2l	equ	0xFD9
  9073                           status	equ	0xFD8
  9074                           
  9075 ;; *************** function _TMR5_Initialize *****************
  9076 ;; Defined at:
  9077 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;		None
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;		None
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1    wreg      void 
  9084 ;; Registers used:
  9085 ;;		wreg, status,2, status,0, cstack
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9093 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9094 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9095 ;;Total ram usage:        2 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; Hardware stack levels required when called:   19
  9098 ;; This function calls:
  9099 ;;		_TMR5_SetInterruptHandler
  9100 ;; This function is called by:
  9101 ;;		_SYSTEM_Initialize
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           	psect	text59
  9106  0033AC                     __ptext59:
  9107                           	opt stack 0
  9108  0033AC                     _TMR5_Initialize:
  9109                           	opt stack 10
  9110                           
  9111                           ;tmr5.c: 69: T5GCON = 0x00;
  9112                           
  9113                           ;incstack = 0
  9114  0033AC  0E00               	movlw	0
  9115  0033AE  6EC4               	movwf	4036,c	;volatile
  9116                           
  9117                           ;tmr5.c: 72: T5GATE = 0x00;
  9118  0033B0  0E00               	movlw	0
  9119  0033B2  6EC5               	movwf	4037,c	;volatile
  9120                           
  9121                           ;tmr5.c: 75: T5CLK = 0x01;
  9122  0033B4  0E01               	movlw	1
  9123  0033B6  6EC6               	movwf	4038,c	;volatile
  9124                           
  9125                           ;tmr5.c: 78: TMR5H = 0xD8;
  9126  0033B8  0ED8               	movlw	216
  9127  0033BA  6EC2               	movwf	4034,c	;volatile
  9128                           
  9129                           ;tmr5.c: 81: TMR5L = 0xF0;
  9130  0033BC  0EF0               	movlw	240
  9131  0033BE  6EC1               	movwf	4033,c	;volatile
  9132                           
  9133                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9134  0033C0  50C1               	movf	4033,w,c	;volatile
  9135  0033C2  CFC2 F103          	movff	4034,??_TMR5_Initialize	;volatile
  9136  0033C6  0101               	movlb	1	; () banked
  9137  0033C8  6B04               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  9138  0033CA  C103  F104         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  9139  0033CE  6B03               	clrf	??_TMR5_Initialize& (0+255),b
  9140  0033D0  1103               	iorwf	??_TMR5_Initialize& (0+255),w,b
  9141  0033D2  0100               	movlb	0	; () banked
  9142  0033D4  6FED               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  9143  0033D6  0101               	movlb	1	; () banked
  9144  0033D8  5104               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  9145  0033DA  0100               	movlb	0	; () banked
  9146  0033DC  6FEE               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;tmr5.c: 87: PIR4bits.TMR5IF = 0;
  9150  0033DE  010E               	movlb	14	; () banked
  9151  0033E0  99CE               	bcf	206,4,b	;volatile
  9152                           
  9153                           ; BSR set to: 14
  9154                           ;tmr5.c: 90: PIE4bits.TMR5IE = 1;
  9155  0033E2  89C6               	bsf	198,4,b	;volatile
  9156                           
  9157                           ; BSR set to: 14
  9158                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
  9159  0033E4  0EC0               	movlw	low _TMR5_DefaultInterruptHandler
  9160  0033E6  0101               	movlb	1	; () banked
  9161  0033E8  6F00               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
  9162  0033EA  0E3E               	movlw	high _TMR5_DefaultInterruptHandler
  9163  0033EC  6F01               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9164  0033EE  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
  9165  0033F0  6F02               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9166  0033F2  ECEB  F01E         	call	_TMR5_SetInterruptHandler	;wreg free
  9167                           
  9168                           ;tmr5.c: 96: T5CON = 0x31;
  9169  0033F6  0E31               	movlw	49
  9170  0033F8  6EC3               	movwf	4035,c	;volatile
  9171  0033FA  0012               	return		;funcret
  9172  0033FC                     __end_of_TMR5_Initialize:
  9173                           	opt stack 0
  9174                           tosu	equ	0xFFF
  9175                           tosh	equ	0xFFE
  9176                           tosl	equ	0xFFD
  9177                           pclath	equ	0xFFA
  9178                           prodh	equ	0xFF4
  9179                           prodl	equ	0xFF3
  9180                           intcon	equ	0xFF2
  9181                           postinc0	equ	0xFEE
  9182                           wreg	equ	0xFE8
  9183                           indf2	equ	0xFDF
  9184                           postinc2	equ	0xFDE
  9185                           postdec2	equ	0xFDD
  9186                           fsr2h	equ	0xFDA
  9187                           fsr2l	equ	0xFD9
  9188                           status	equ	0xFD8
  9189                           
  9190 ;; *************** function _TMR5_SetInterruptHandler *****************
  9191 ;; Defined at:
  9192 ;;		line 185 in file "mcc_generated_files/tmr5.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  9195 ;;		 -> usonic_tick(1), TMR5_DefaultInterruptHandler(1), 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;		None
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      void 
  9200 ;; Registers used:
  9201 ;;		wreg, status,2, status,0
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9207 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9210 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9211 ;;Total ram usage:        3 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:   18
  9214 ;; This function calls:
  9215 ;;		Nothing
  9216 ;; This function is called by:
  9217 ;;		_TMR5_Initialize
  9218 ;;		_usonic_init
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           	psect	text60
  9223  003DD6                     __ptext60:
  9224                           	opt stack 0
  9225  003DD6                     _TMR5_SetInterruptHandler:
  9226                           	opt stack 11
  9227                           
  9228                           ;tmr5.c: 186: TMR5_InterruptHandler = InterruptHandler;
  9229                           
  9230                           ;incstack = 0
  9231  003DD6  C100  F0D8         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  9232  003DDA  C101  F0D9         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  9233  003DDE  C102  F0DA         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
  9234  003DE2  0012               	return		;funcret
  9235  003DE4                     __end_of_TMR5_SetInterruptHandler:
  9236                           	opt stack 0
  9237                           tosu	equ	0xFFF
  9238                           tosh	equ	0xFFE
  9239                           tosl	equ	0xFFD
  9240                           pclath	equ	0xFFA
  9241                           prodh	equ	0xFF4
  9242                           prodl	equ	0xFF3
  9243                           intcon	equ	0xFF2
  9244                           postinc0	equ	0xFEE
  9245                           wreg	equ	0xFE8
  9246                           indf2	equ	0xFDF
  9247                           postinc2	equ	0xFDE
  9248                           postdec2	equ	0xFDD
  9249                           fsr2h	equ	0xFDA
  9250                           fsr2l	equ	0xFD9
  9251                           status	equ	0xFD8
  9252                           
  9253 ;; *************** function _TMR3_Initialize *****************
  9254 ;; Defined at:
  9255 ;;		line 66 in file "mcc_generated_files/tmr3.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;		None
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;		None
  9260 ;; Return value:  Size  Location     Type
  9261 ;;                  1    wreg      void 
  9262 ;; Registers used:
  9263 ;;		wreg, status,2, status,0
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9271 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9272 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9273 ;;Total ram usage:        2 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; Hardware stack levels required when called:   18
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_SYSTEM_Initialize
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           	psect	text61
  9284  003448                     __ptext61:
  9285                           	opt stack 0
  9286  003448                     _TMR3_Initialize:
  9287                           	opt stack 11
  9288                           
  9289                           ;tmr3.c: 71: T3GCON = 0xD0;
  9290                           
  9291                           ;incstack = 0
  9292  003448  0ED0               	movlw	208
  9293  00344A  6ECA               	movwf	4042,c	;volatile
  9294                           
  9295                           ;tmr3.c: 74: T3GATE = 0x00;
  9296  00344C  0E00               	movlw	0
  9297  00344E  6ECB               	movwf	4043,c	;volatile
  9298                           
  9299                           ;tmr3.c: 77: T3CLK = 0x01;
  9300  003450  0E01               	movlw	1
  9301  003452  6ECC               	movwf	4044,c	;volatile
  9302                           
  9303                           ;tmr3.c: 80: TMR3H = 0x00;
  9304  003454  0E00               	movlw	0
  9305  003456  6EC8               	movwf	4040,c	;volatile
  9306                           
  9307                           ;tmr3.c: 83: TMR3L = 0x00;
  9308  003458  0E00               	movlw	0
  9309  00345A  6EC7               	movwf	4039,c	;volatile
  9310                           
  9311                           ;tmr3.c: 86: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9312  00345C  50C7               	movf	4039,w,c	;volatile
  9313  00345E  CFC8 F100          	movff	4040,??_TMR3_Initialize	;volatile
  9314  003462  0101               	movlb	1	; () banked
  9315  003464  6B01               	clrf	(??_TMR3_Initialize+1)& (0+255),b
  9316  003466  C100  F101         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  9317  00346A  6B00               	clrf	??_TMR3_Initialize& (0+255),b
  9318  00346C  1100               	iorwf	??_TMR3_Initialize& (0+255),w,b
  9319  00346E  0100               	movlb	0	; () banked
  9320  003470  6FF1               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  9321  003472  0101               	movlb	1	; () banked
  9322  003474  5101               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
  9323  003476  0100               	movlb	0	; () banked
  9324  003478  6FF2               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;tmr3.c: 89: PIR4bits.TMR3IF = 0;
  9328  00347A  010E               	movlb	14	; () banked
  9329  00347C  95CE               	bcf	206,2,b	;volatile
  9330                           
  9331                           ; BSR set to: 14
  9332                           ;tmr3.c: 92: PIR5bits.TMR3GIF = 0;
  9333  00347E  93CF               	bcf	207,1,b	;volatile
  9334                           
  9335                           ; BSR set to: 14
  9336                           ;tmr3.c: 95: PIE5bits.TMR3GIE = 1;
  9337  003480  83C7               	bsf	199,1,b	;volatile
  9338                           
  9339                           ; BSR set to: 14
  9340                           ;tmr3.c: 98: T3CON = 0x33;
  9341  003482  0E33               	movlw	51
  9342  003484  6EC9               	movwf	4041,c	;volatile
  9343                           
  9344                           ; BSR set to: 14
  9345  003486  0012               	return		;funcret
  9346  003488                     __end_of_TMR3_Initialize:
  9347                           	opt stack 0
  9348                           tosu	equ	0xFFF
  9349                           tosh	equ	0xFFE
  9350                           tosl	equ	0xFFD
  9351                           pclath	equ	0xFFA
  9352                           prodh	equ	0xFF4
  9353                           prodl	equ	0xFF3
  9354                           intcon	equ	0xFF2
  9355                           postinc0	equ	0xFEE
  9356                           wreg	equ	0xFE8
  9357                           indf2	equ	0xFDF
  9358                           postinc2	equ	0xFDE
  9359                           postdec2	equ	0xFDD
  9360                           fsr2h	equ	0xFDA
  9361                           fsr2l	equ	0xFD9
  9362                           status	equ	0xFD8
  9363                           
  9364 ;; *************** function _TMR2_Initialize *****************
  9365 ;; Defined at:
  9366 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;		None
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      void 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9384 ;;Total ram usage:        0 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:   18
  9387 ;; This function calls:
  9388 ;;		Nothing
  9389 ;; This function is called by:
  9390 ;;		_SYSTEM_Initialize
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text62
  9395  003C1E                     __ptext62:
  9396                           	opt stack 0
  9397  003C1E                     _TMR2_Initialize:
  9398                           	opt stack 11
  9399                           
  9400                           ;tmr2.c: 67: T2CLKCON = 0x01;
  9401                           
  9402                           ; BSR set to: 14
  9403                           ;incstack = 0
  9404  003C1E  0E01               	movlw	1
  9405  003C20  6EBF               	movwf	4031,c	;volatile
  9406                           
  9407                           ;tmr2.c: 70: T2HLT = 0xA0;
  9408  003C22  0EA0               	movlw	160
  9409  003C24  6EBE               	movwf	4030,c	;volatile
  9410                           
  9411                           ;tmr2.c: 73: T2RST = 0x00;
  9412  003C26  0E00               	movlw	0
  9413  003C28  6EC0               	movwf	4032,c	;volatile
  9414                           
  9415                           ;tmr2.c: 76: T2PR = 0x31;
  9416  003C2A  0E31               	movlw	49
  9417  003C2C  6EBC               	movwf	4028,c	;volatile
  9418                           
  9419                           ;tmr2.c: 79: T2TMR = 0x00;
  9420  003C2E  0E00               	movlw	0
  9421  003C30  6EBB               	movwf	4027,c	;volatile
  9422                           
  9423                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
  9424  003C32  010E               	movlb	14	; () banked
  9425  003C34  93CE               	bcf	206,1,b	;volatile
  9426                           
  9427                           ;tmr2.c: 85: T2CON = 0xB0;
  9428  003C36  0EB0               	movlw	176
  9429  003C38  6EBD               	movwf	4029,c	;volatile
  9430                           
  9431                           ; BSR set to: 14
  9432  003C3A  0012               	return		;funcret
  9433  003C3C                     __end_of_TMR2_Initialize:
  9434                           	opt stack 0
  9435                           tosu	equ	0xFFF
  9436                           tosh	equ	0xFFE
  9437                           tosl	equ	0xFFD
  9438                           pclath	equ	0xFFA
  9439                           prodh	equ	0xFF4
  9440                           prodl	equ	0xFF3
  9441                           intcon	equ	0xFF2
  9442                           postinc0	equ	0xFEE
  9443                           wreg	equ	0xFE8
  9444                           indf2	equ	0xFDF
  9445                           postinc2	equ	0xFDE
  9446                           postdec2	equ	0xFDD
  9447                           fsr2h	equ	0xFDA
  9448                           fsr2l	equ	0xFD9
  9449                           status	equ	0xFD8
  9450                           
  9451 ;; *************** function _TMR1_Initialize *****************
  9452 ;; Defined at:
  9453 ;;		line 66 in file "mcc_generated_files/tmr1.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;		None
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		wreg, status,2, status,0
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9469 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9470 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9471 ;;Total ram usage:        2 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:   18
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_SYSTEM_Initialize
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           	psect	text63
  9482  003488                     __ptext63:
  9483                           	opt stack 0
  9484  003488                     _TMR1_Initialize:
  9485                           	opt stack 11
  9486                           
  9487                           ;tmr1.c: 71: T1GCON = 0xD0;
  9488                           
  9489                           ; BSR set to: 14
  9490                           ;incstack = 0
  9491  003488  0ED0               	movlw	208
  9492  00348A  6ED0               	movwf	4048,c	;volatile
  9493                           
  9494                           ;tmr1.c: 74: T1GATE = 0x00;
  9495  00348C  0E00               	movlw	0
  9496  00348E  6ED1               	movwf	4049,c	;volatile
  9497                           
  9498                           ;tmr1.c: 77: T1CLK = 0x01;
  9499  003490  0E01               	movlw	1
  9500  003492  6ED2               	movwf	4050,c	;volatile
  9501                           
  9502                           ;tmr1.c: 80: TMR1H = 0x00;
  9503  003494  0E00               	movlw	0
  9504  003496  6ECE               	movwf	4046,c	;volatile
  9505                           
  9506                           ;tmr1.c: 83: TMR1L = 0x00;
  9507  003498  0E00               	movlw	0
  9508  00349A  6ECD               	movwf	4045,c	;volatile
  9509                           
  9510                           ;tmr1.c: 86: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9511  00349C  50CD               	movf	4045,w,c	;volatile
  9512  00349E  CFCE F100          	movff	4046,??_TMR1_Initialize	;volatile
  9513  0034A2  0101               	movlb	1	; () banked
  9514  0034A4  6B01               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  9515  0034A6  C100  F101         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  9516  0034AA  6B00               	clrf	??_TMR1_Initialize& (0+255),b
  9517  0034AC  1100               	iorwf	??_TMR1_Initialize& (0+255),w,b
  9518  0034AE  0100               	movlb	0	; () banked
  9519  0034B0  6FF3               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  9520  0034B2  0101               	movlb	1	; () banked
  9521  0034B4  5101               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  9522  0034B6  0100               	movlb	0	; () banked
  9523  0034B8  6FF4               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;tmr1.c: 89: PIR4bits.TMR1IF = 0;
  9527  0034BA  010E               	movlb	14	; () banked
  9528  0034BC  91CE               	bcf	206,0,b	;volatile
  9529                           
  9530                           ; BSR set to: 14
  9531                           ;tmr1.c: 92: PIR5bits.TMR1GIF = 0;
  9532  0034BE  91CF               	bcf	207,0,b	;volatile
  9533                           
  9534                           ; BSR set to: 14
  9535                           ;tmr1.c: 95: PIE5bits.TMR1GIE = 1;
  9536  0034C0  81C7               	bsf	199,0,b	;volatile
  9537                           
  9538                           ; BSR set to: 14
  9539                           ;tmr1.c: 98: T1CON = 0x33;
  9540  0034C2  0E33               	movlw	51
  9541  0034C4  6ECF               	movwf	4047,c	;volatile
  9542                           
  9543                           ; BSR set to: 14
  9544  0034C6  0012               	return		;funcret
  9545  0034C8                     __end_of_TMR1_Initialize:
  9546                           	opt stack 0
  9547                           tosu	equ	0xFFF
  9548                           tosh	equ	0xFFE
  9549                           tosl	equ	0xFFD
  9550                           pclath	equ	0xFFA
  9551                           prodh	equ	0xFF4
  9552                           prodl	equ	0xFF3
  9553                           intcon	equ	0xFF2
  9554                           postinc0	equ	0xFEE
  9555                           wreg	equ	0xFE8
  9556                           indf2	equ	0xFDF
  9557                           postinc2	equ	0xFDE
  9558                           postdec2	equ	0xFDD
  9559                           fsr2h	equ	0xFDA
  9560                           fsr2l	equ	0xFD9
  9561                           status	equ	0xFD8
  9562                           
  9563 ;; *************** function _TMR0_Initialize *****************
  9564 ;; Defined at:
  9565 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;		None
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;		None
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg, status,2, status,0
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9581 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9582 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9583 ;;Total ram usage:        2 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:   18
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_SYSTEM_Initialize
  9590 ;; This function uses a non-reentrant model
  9591 ;;
  9592                           
  9593                           	psect	text64
  9594  00373C                     __ptext64:
  9595                           	opt stack 0
  9596  00373C                     _TMR0_Initialize:
  9597                           	opt stack 11
  9598                           
  9599                           ;tmr0.c: 70: T0CON1 = 0x85;
  9600                           
  9601                           ; BSR set to: 14
  9602                           ;incstack = 0
  9603  00373C  0E85               	movlw	133
  9604  00373E  6ED6               	movwf	4054,c	;volatile
  9605                           
  9606                           ;tmr0.c: 73: TMR0H = 0x00;
  9607  003740  0E00               	movlw	0
  9608  003742  6ED4               	movwf	4052,c	;volatile
  9609                           
  9610                           ;tmr0.c: 76: TMR0L = 0x00;
  9611  003744  0E00               	movlw	0
  9612  003746  6ED3               	movwf	4051,c	;volatile
  9613                           
  9614                           ;tmr0.c: 79: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  9615  003748  50D3               	movf	4051,w,c	;volatile
  9616  00374A  CFD4 F100          	movff	4052,??_TMR0_Initialize	;volatile
  9617  00374E  0101               	movlb	1	; () banked
  9618  003750  6B01               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  9619  003752  C100  F101         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  9620  003756  6B00               	clrf	??_TMR0_Initialize& (0+255),b
  9621  003758  1100               	iorwf	??_TMR0_Initialize& (0+255),w,b
  9622  00375A  0100               	movlb	0	; () banked
  9623  00375C  6FEF               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
  9624  00375E  0101               	movlb	1	; () banked
  9625  003760  5101               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  9626  003762  0100               	movlb	0	; () banked
  9627  003764  6FF0               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;tmr0.c: 82: PIR0bits.TMR0IF = 0;
  9631  003766  010E               	movlb	14	; () banked
  9632  003768  9BCA               	bcf	202,5,b	;volatile
  9633                           
  9634                           ; BSR set to: 14
  9635                           ;tmr0.c: 85: T0CON0 = 0x90;
  9636  00376A  0E90               	movlw	144
  9637  00376C  6ED5               	movwf	4053,c	;volatile
  9638                           
  9639                           ; BSR set to: 14
  9640  00376E  0012               	return		;funcret
  9641  003770                     __end_of_TMR0_Initialize:
  9642                           	opt stack 0
  9643                           tosu	equ	0xFFF
  9644                           tosh	equ	0xFFE
  9645                           tosl	equ	0xFFD
  9646                           pclath	equ	0xFFA
  9647                           prodh	equ	0xFF4
  9648                           prodl	equ	0xFF3
  9649                           intcon	equ	0xFF2
  9650                           postinc0	equ	0xFEE
  9651                           wreg	equ	0xFE8
  9652                           indf2	equ	0xFDF
  9653                           postinc2	equ	0xFDE
  9654                           postdec2	equ	0xFDD
  9655                           fsr2h	equ	0xFDA
  9656                           fsr2l	equ	0xFD9
  9657                           status	equ	0xFD8
  9658                           
  9659 ;; *************** function _PWM4_Initialize *****************
  9660 ;; Defined at:
  9661 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;		None
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;		None
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  1    wreg      void 
  9668 ;; Registers used:
  9669 ;;		wreg, status,2
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9679 ;;Total ram usage:        0 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; Hardware stack levels required when called:   18
  9682 ;; This function calls:
  9683 ;;		Nothing
  9684 ;; This function is called by:
  9685 ;;		_SYSTEM_Initialize
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           	psect	text65
  9690  003CA8                     __ptext65:
  9691                           	opt stack 0
  9692  003CA8                     _PWM4_Initialize:
  9693                           	opt stack 11
  9694                           
  9695                           ;pwm4.c: 62: PWM4CON = 0x80;
  9696                           
  9697                           ; BSR set to: 14
  9698                           ;incstack = 0
  9699  003CA8  0E80               	movlw	128
  9700  003CAA  6EA2               	movwf	4002,c	;volatile
  9701                           
  9702                           ;pwm4.c: 65: PWM4DCH = 0x31;
  9703  003CAC  0E31               	movlw	49
  9704  003CAE  6EA1               	movwf	4001,c	;volatile
  9705                           
  9706                           ;pwm4.c: 68: PWM4DCL = 0xC0;
  9707  003CB0  0EC0               	movlw	192
  9708  003CB2  6EA0               	movwf	4000,c	;volatile
  9709                           
  9710                           ;pwm4.c: 71: CCPTMRSbits.P4TSEL = 1;
  9711  003CB4  50AE               	movf	4014,w,c	;volatile
  9712  003CB6  0B3F               	andlw	-193
  9713  003CB8  0940               	iorlw	64
  9714  003CBA  6EAE               	movwf	4014,c	;volatile
  9715  003CBC  0012               	return		;funcret
  9716  003CBE                     __end_of_PWM4_Initialize:
  9717                           	opt stack 0
  9718                           tosu	equ	0xFFF
  9719                           tosh	equ	0xFFE
  9720                           tosl	equ	0xFFD
  9721                           pclath	equ	0xFFA
  9722                           prodh	equ	0xFF4
  9723                           prodl	equ	0xFF3
  9724                           intcon	equ	0xFF2
  9725                           postinc0	equ	0xFEE
  9726                           wreg	equ	0xFE8
  9727                           indf2	equ	0xFDF
  9728                           postinc2	equ	0xFDE
  9729                           postdec2	equ	0xFDD
  9730                           fsr2h	equ	0xFDA
  9731                           fsr2l	equ	0xFD9
  9732                           status	equ	0xFD8
  9733                           
  9734 ;; *************** function _PWM3_Initialize *****************
  9735 ;; Defined at:
  9736 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, status,2
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9754 ;;Total ram usage:        0 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:   18
  9757 ;; This function calls:
  9758 ;;		Nothing
  9759 ;; This function is called by:
  9760 ;;		_SYSTEM_Initialize
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text66
  9765  003CBE                     __ptext66:
  9766                           	opt stack 0
  9767  003CBE                     _PWM3_Initialize:
  9768                           	opt stack 11
  9769                           
  9770                           ;pwm3.c: 62: PWM3CON = 0x80;
  9771                           
  9772                           ;incstack = 0
  9773  003CBE  0E80               	movlw	128
  9774  003CC0  6EA5               	movwf	4005,c	;volatile
  9775                           
  9776                           ;pwm3.c: 65: PWM3DCH = 0x31;
  9777  003CC2  0E31               	movlw	49
  9778  003CC4  6EA4               	movwf	4004,c	;volatile
  9779                           
  9780                           ;pwm3.c: 68: PWM3DCL = 0xC0;
  9781  003CC6  0EC0               	movlw	192
  9782  003CC8  6EA3               	movwf	4003,c	;volatile
  9783                           
  9784                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 1;
  9785  003CCA  50AE               	movf	4014,w,c	;volatile
  9786  003CCC  0BCF               	andlw	-49
  9787  003CCE  0910               	iorlw	16
  9788  003CD0  6EAE               	movwf	4014,c	;volatile
  9789  003CD2  0012               	return		;funcret
  9790  003CD4                     __end_of_PWM3_Initialize:
  9791                           	opt stack 0
  9792                           tosu	equ	0xFFF
  9793                           tosh	equ	0xFFE
  9794                           tosl	equ	0xFFD
  9795                           pclath	equ	0xFFA
  9796                           prodh	equ	0xFF4
  9797                           prodl	equ	0xFF3
  9798                           intcon	equ	0xFF2
  9799                           postinc0	equ	0xFEE
  9800                           wreg	equ	0xFE8
  9801                           indf2	equ	0xFDF
  9802                           postinc2	equ	0xFDE
  9803                           postdec2	equ	0xFDD
  9804                           fsr2h	equ	0xFDA
  9805                           fsr2l	equ	0xFD9
  9806                           status	equ	0xFD8
  9807                           
  9808 ;; *************** function _PMD_Initialize *****************
  9809 ;; Defined at:
  9810 ;;		line 79 in file "mcc_generated_files/mcc.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;		None
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1    wreg      void 
  9817 ;; Registers used:
  9818 ;;		wreg, status,2
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9828 ;;Total ram usage:        0 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:   18
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		_SYSTEM_Initialize
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text67
  9839  003C3C                     __ptext67:
  9840                           	opt stack 0
  9841  003C3C                     _PMD_Initialize:
  9842                           	opt stack 11
  9843                           
  9844                           ;mcc.c: 82: PMD0 = 0x00;
  9845                           
  9846                           ;incstack = 0
  9847  003C3C  0E00               	movlw	0
  9848  003C3E  010E               	movlb	14	; () banked
  9849  003C40  6FE1               	movwf	225,b	;volatile
  9850                           
  9851                           ;mcc.c: 84: PMD1 = 0x00;
  9852  003C42  0E00               	movlw	0
  9853  003C44  6FE2               	movwf	226,b	;volatile
  9854                           
  9855                           ;mcc.c: 86: PMD2 = 0x00;
  9856  003C46  0E00               	movlw	0
  9857  003C48  6FE3               	movwf	227,b	;volatile
  9858                           
  9859                           ;mcc.c: 88: PMD3 = 0x00;
  9860  003C4A  0E00               	movlw	0
  9861  003C4C  6FE4               	movwf	228,b	;volatile
  9862                           
  9863                           ;mcc.c: 90: PMD4 = 0x00;
  9864  003C4E  0E00               	movlw	0
  9865  003C50  6FE5               	movwf	229,b	;volatile
  9866                           
  9867                           ;mcc.c: 92: PMD5 = 0x00;
  9868  003C52  0E00               	movlw	0
  9869  003C54  6FE6               	movwf	230,b	;volatile
  9870                           
  9871                           ; BSR set to: 14
  9872  003C56  0012               	return		;funcret
  9873  003C58                     __end_of_PMD_Initialize:
  9874                           	opt stack 0
  9875                           tosu	equ	0xFFF
  9876                           tosh	equ	0xFFE
  9877                           tosl	equ	0xFFD
  9878                           pclath	equ	0xFFA
  9879                           prodh	equ	0xFF4
  9880                           prodl	equ	0xFF3
  9881                           intcon	equ	0xFF2
  9882                           postinc0	equ	0xFEE
  9883                           wreg	equ	0xFE8
  9884                           indf2	equ	0xFDF
  9885                           postinc2	equ	0xFDE
  9886                           postdec2	equ	0xFDD
  9887                           fsr2h	equ	0xFDA
  9888                           fsr2l	equ	0xFD9
  9889                           status	equ	0xFD8
  9890                           
  9891 ;; *************** function _PIN_MANAGER_Initialize *****************
  9892 ;; Defined at:
  9893 ;;		line 62 in file "mcc_generated_files/pin_manager.c"
  9894 ;; Parameters:    Size  Location     Type
  9895 ;;		None
  9896 ;; Auto vars:     Size  Location     Type
  9897 ;;		None
  9898 ;; Return value:  Size  Location     Type
  9899 ;;                  1    wreg      void 
  9900 ;; Registers used:
  9901 ;;		wreg, status,2, status,0, cstack
  9902 ;; Tracked objects:
  9903 ;;		On entry : 0/0
  9904 ;;		On exit  : 0/0
  9905 ;;		Unchanged: 0/0
  9906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9911 ;;Total ram usage:        0 bytes
  9912 ;; Hardware stack levels used:    1
  9913 ;; Hardware stack levels required when called:   19
  9914 ;; This function calls:
  9915 ;;		_IOCBF0_SetInterruptHandler
  9916 ;;		_IOCBF1_SetInterruptHandler
  9917 ;;		_IOCBF2_SetInterruptHandler
  9918 ;;		_IOCBF3_SetInterruptHandler
  9919 ;; This function is called by:
  9920 ;;		_SYSTEM_Initialize
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           	psect	text68
  9925  002632                     __ptext68:
  9926                           	opt stack 0
  9927  002632                     _PIN_MANAGER_Initialize:
  9928                           	opt stack 10
  9929                           
  9930                           ;pin_manager.c: 67: LATE = 0x00;
  9931                           
  9932                           ; BSR set to: 14
  9933                           ;incstack = 0
  9934  002632  0E00               	movlw	0
  9935  002634  6E87               	movwf	3975,c	;volatile
  9936                           
  9937                           ;pin_manager.c: 68: LATD = 0x00;
  9938  002636  0E00               	movlw	0
  9939  002638  6E86               	movwf	3974,c	;volatile
  9940                           
  9941                           ;pin_manager.c: 69: LATA = 0x00;
  9942  00263A  0E00               	movlw	0
  9943  00263C  6E83               	movwf	3971,c	;volatile
  9944                           
  9945                           ;pin_manager.c: 70: LATB = 0x00;
  9946  00263E  0E00               	movlw	0
  9947  002640  6E84               	movwf	3972,c	;volatile
  9948                           
  9949                           ;pin_manager.c: 71: LATC = 0x00;
  9950  002642  0E00               	movlw	0
  9951  002644  6E85               	movwf	3973,c	;volatile
  9952                           
  9953                           ;pin_manager.c: 76: TRISE = 0x00;
  9954  002646  0E00               	movlw	0
  9955  002648  6E8C               	movwf	3980,c	;volatile
  9956                           
  9957                           ;pin_manager.c: 77: TRISA = 0xC7;
  9958  00264A  0EC7               	movlw	199
  9959  00264C  6E88               	movwf	3976,c	;volatile
  9960                           
  9961                           ;pin_manager.c: 78: TRISB = 0xFF;
  9962  00264E  6889               	setf	3977,c	;volatile
  9963                           
  9964                           ;pin_manager.c: 79: TRISC = 0xFF;
  9965  002650  688A               	setf	3978,c	;volatile
  9966                           
  9967                           ;pin_manager.c: 80: TRISD = 0x00;
  9968  002652  0E00               	movlw	0
  9969  002654  6E8B               	movwf	3979,c	;volatile
  9970                           
  9971                           ;pin_manager.c: 85: ANSELD = 0x00;
  9972  002656  0E00               	movlw	0
  9973  002658  010F               	movlb	15	; () banked
  9974  00265A  6F26               	movwf	38,b	;volatile
  9975                           
  9976                           ;pin_manager.c: 86: ANSELC = 0x19;
  9977  00265C  0E19               	movlw	25
  9978  00265E  6F21               	movwf	33,b	;volatile
  9979                           
  9980                           ;pin_manager.c: 87: ANSELB = 0xC0;
  9981  002660  0EC0               	movlw	192
  9982  002662  6F19               	movwf	25,b	;volatile
  9983                           
  9984                           ;pin_manager.c: 88: ANSELE = 0x00;
  9985  002664  0E00               	movlw	0
  9986  002666  6F2E               	movwf	46,b	;volatile
  9987                           
  9988                           ;pin_manager.c: 89: ANSELA = 0x07;
  9989  002668  0E07               	movlw	7
  9990  00266A  6F11               	movwf	17,b	;volatile
  9991                           
  9992                           ;pin_manager.c: 94: WPUD = 0x00;
  9993  00266C  0E00               	movlw	0
  9994  00266E  6F25               	movwf	37,b	;volatile
  9995                           
  9996                           ;pin_manager.c: 95: WPUE = 0x00;
  9997  002670  0E00               	movlw	0
  9998  002672  6F2D               	movwf	45,b	;volatile
  9999                           
 10000                           ;pin_manager.c: 96: WPUB = 0x00;
 10001  002674  0E00               	movlw	0
 10002  002676  6F18               	movwf	24,b	;volatile
 10003                           
 10004                           ;pin_manager.c: 97: WPUA = 0x00;
 10005  002678  0E00               	movlw	0
 10006  00267A  6F10               	movwf	16,b	;volatile
 10007                           
 10008                           ;pin_manager.c: 98: WPUC = 0x00;
 10009  00267C  0E00               	movlw	0
 10010  00267E  6F20               	movwf	32,b	;volatile
 10011                           
 10012                           ;pin_manager.c: 103: ODCONE = 0x00;
 10013  002680  0E00               	movlw	0
 10014  002682  6F2C               	movwf	44,b	;volatile
 10015                           
 10016                           ;pin_manager.c: 104: ODCONA = 0x00;
 10017  002684  0E00               	movlw	0
 10018  002686  6F0F               	movwf	15,b	;volatile
 10019                           
 10020                           ;pin_manager.c: 105: ODCONB = 0x00;
 10021  002688  0E00               	movlw	0
 10022  00268A  6F17               	movwf	23,b	;volatile
 10023                           
 10024                           ;pin_manager.c: 106: ODCONC = 0x00;
 10025  00268C  0E00               	movlw	0
 10026  00268E  6F1F               	movwf	31,b	;volatile
 10027                           
 10028                           ;pin_manager.c: 107: ODCOND = 0x00;
 10029  002690  0E00               	movlw	0
 10030  002692  6F24               	movwf	36,b	;volatile
 10031                           
 10032                           ; BSR set to: 15
 10033                           ;pin_manager.c: 114: IOCBFbits.IOCBF0 = 0;
 10034  002694  9112               	bcf	18,0,b	;volatile
 10035                           
 10036                           ; BSR set to: 15
 10037                           ;pin_manager.c: 116: IOCBFbits.IOCBF1 = 0;
 10038  002696  9312               	bcf	18,1,b	;volatile
 10039                           
 10040                           ; BSR set to: 15
 10041                           ;pin_manager.c: 118: IOCBFbits.IOCBF2 = 0;
 10042  002698  9512               	bcf	18,2,b	;volatile
 10043                           
 10044                           ; BSR set to: 15
 10045                           ;pin_manager.c: 120: IOCBFbits.IOCBF3 = 0;
 10046  00269A  9712               	bcf	18,3,b	;volatile
 10047                           
 10048                           ; BSR set to: 15
 10049                           ;pin_manager.c: 122: IOCBNbits.IOCBN0 = 1;
 10050  00269C  8113               	bsf	19,0,b	;volatile
 10051                           
 10052                           ; BSR set to: 15
 10053                           ;pin_manager.c: 124: IOCBNbits.IOCBN1 = 1;
 10054  00269E  8313               	bsf	19,1,b	;volatile
 10055                           
 10056                           ; BSR set to: 15
 10057                           ;pin_manager.c: 126: IOCBNbits.IOCBN2 = 1;
 10058  0026A0  8513               	bsf	19,2,b	;volatile
 10059                           
 10060                           ; BSR set to: 15
 10061                           ;pin_manager.c: 128: IOCBNbits.IOCBN3 = 1;
 10062  0026A2  8713               	bsf	19,3,b	;volatile
 10063                           
 10064                           ; BSR set to: 15
 10065                           ;pin_manager.c: 130: IOCBPbits.IOCBP0 = 1;
 10066  0026A4  8114               	bsf	20,0,b	;volatile
 10067                           
 10068                           ; BSR set to: 15
 10069                           ;pin_manager.c: 132: IOCBPbits.IOCBP1 = 1;
 10070  0026A6  8314               	bsf	20,1,b	;volatile
 10071                           
 10072                           ; BSR set to: 15
 10073                           ;pin_manager.c: 134: IOCBPbits.IOCBP2 = 1;
 10074  0026A8  8514               	bsf	20,2,b	;volatile
 10075                           
 10076                           ; BSR set to: 15
 10077                           ;pin_manager.c: 136: IOCBPbits.IOCBP3 = 1;
 10078  0026AA  8714               	bsf	20,3,b	;volatile
 10079                           
 10080                           ; BSR set to: 15
 10081                           ;pin_manager.c: 141: IOCBF0_SetInterruptHandler(IOCBF0_DefaultInterruptHandler);
 10082  0026AC  0EC2               	movlw	low _IOCBF0_DefaultInterruptHandler
 10083  0026AE  0101               	movlb	1	; () banked
 10084  0026B0  6F00               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler& (0+255),b
 10085  0026B2  0E3E               	movlw	high _IOCBF0_DefaultInterruptHandler
 10086  0026B4  6F01               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10087  0026B6  0E00               	movlw	low (_IOCBF0_DefaultInterruptHandler shr (0+16))
 10088  0026B8  6F02               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10089  0026BA  EC07  F01F         	call	_IOCBF0_SetInterruptHandler	;wreg free
 10090                           
 10091                           ;pin_manager.c: 142: IOCBF1_SetInterruptHandler(IOCBF1_DefaultInterruptHandler);
 10092  0026BE  0EC4               	movlw	low _IOCBF1_DefaultInterruptHandler
 10093  0026C0  0101               	movlb	1	; () banked
 10094  0026C2  6F00               	movwf	IOCBF1_SetInterruptHandler@InterruptHandler& (0+255),b
 10095  0026C4  0E3E               	movlw	high _IOCBF1_DefaultInterruptHandler
 10096  0026C6  6F01               	movwf	(IOCBF1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10097  0026C8  0E00               	movlw	low (_IOCBF1_DefaultInterruptHandler shr (0+16))
 10098  0026CA  6F02               	movwf	(IOCBF1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10099  0026CC  EC00  F01F         	call	_IOCBF1_SetInterruptHandler	;wreg free
 10100                           
 10101                           ;pin_manager.c: 143: IOCBF2_SetInterruptHandler(IOCBF2_DefaultInterruptHandler);
 10102  0026D0  0EC6               	movlw	low _IOCBF2_DefaultInterruptHandler
 10103  0026D2  0101               	movlb	1	; () banked
 10104  0026D4  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
 10105  0026D6  0E3E               	movlw	high _IOCBF2_DefaultInterruptHandler
 10106  0026D8  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10107  0026DA  0E00               	movlw	low (_IOCBF2_DefaultInterruptHandler shr (0+16))
 10108  0026DC  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10109  0026DE  ECF9  F01E         	call	_IOCBF2_SetInterruptHandler	;wreg free
 10110                           
 10111                           ;pin_manager.c: 144: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
 10112  0026E2  0EC8               	movlw	low _IOCBF3_DefaultInterruptHandler
 10113  0026E4  0101               	movlb	1	; () banked
 10114  0026E6  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
 10115  0026E8  0E3E               	movlw	high _IOCBF3_DefaultInterruptHandler
 10116  0026EA  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10117  0026EC  0E00               	movlw	low (_IOCBF3_DefaultInterruptHandler shr (0+16))
 10118  0026EE  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10119  0026F0  ECF2  F01E         	call	_IOCBF3_SetInterruptHandler	;wreg free
 10120                           
 10121                           ;pin_manager.c: 147: PIE0bits.IOCIE = 1;
 10122  0026F4  010E               	movlb	14	; () banked
 10123  0026F6  89C2               	bsf	194,4,b	;volatile
 10124                           
 10125                           ; BSR set to: 14
 10126                           ;pin_manager.c: 150: T3GPPSbits.T3GPPS = 0x11;
 10127  0026F8  81A8               	bsf	168,0,b	;volatile
 10128  0026FA  93A8               	bcf	168,1,b	;volatile
 10129  0026FC  95A8               	bcf	168,2,b	;volatile
 10130  0026FE  97A8               	bcf	168,3,b	;volatile
 10131  002700  89A8               	bsf	168,4,b	;volatile
 10132                           
 10133                           ; BSR set to: 14
 10134                           ;pin_manager.c: 151: T1GPPSbits.T1GPPS = 0x12;
 10135  002702  91A6               	bcf	166,0,b	;volatile
 10136  002704  83A6               	bsf	166,1,b	;volatile
 10137  002706  95A6               	bcf	166,2,b	;volatile
 10138  002708  97A6               	bcf	166,3,b	;volatile
 10139  00270A  89A6               	bsf	166,4,b	;volatile
 10140                           
 10141                           ;pin_manager.c: 152: RA4PPS = 0x07;
 10142  00270C  0E07               	movlw	7
 10143  00270E  6FEB               	movwf	235,b	;volatile
 10144                           
 10145                           ;pin_manager.c: 153: RA3PPS = 0x08;
 10146  002710  0E08               	movlw	8
 10147  002712  6FEA               	movwf	234,b	;volatile
 10148                           
 10149                           ; BSR set to: 14
 10150  002714  0012               	return		;funcret
 10151  002716                     __end_of_PIN_MANAGER_Initialize:
 10152                           	opt stack 0
 10153                           tosu	equ	0xFFF
 10154                           tosh	equ	0xFFE
 10155                           tosl	equ	0xFFD
 10156                           pclath	equ	0xFFA
 10157                           prodh	equ	0xFF4
 10158                           prodl	equ	0xFF3
 10159                           intcon	equ	0xFF2
 10160                           postinc0	equ	0xFEE
 10161                           wreg	equ	0xFE8
 10162                           indf2	equ	0xFDF
 10163                           postinc2	equ	0xFDE
 10164                           postdec2	equ	0xFDD
 10165                           fsr2h	equ	0xFDA
 10166                           fsr2l	equ	0xFD9
 10167                           status	equ	0xFD8
 10168                           
 10169 ;; *************** function _IOCBF3_SetInterruptHandler *****************
 10170 ;; Defined at:
 10171 ;;		line 288 in file "mcc_generated_files/pin_manager.c"
 10172 ;; Parameters:    Size  Location     Type
 10173 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
 10174 ;;		 -> borde_isr(1), IOCBF3_DefaultInterruptHandler(1), 
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;		None
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		wreg, status,2, status,0
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10186 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10189 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10190 ;;Total ram usage:        3 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:   18
 10193 ;; This function calls:
 10194 ;;		Nothing
 10195 ;; This function is called by:
 10196 ;;		_PIN_MANAGER_Initialize
 10197 ;;		_drv_cny70_init
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text69
 10202  003DE4                     __ptext69:
 10203                           	opt stack 0
 10204  003DE4                     _IOCBF3_SetInterruptHandler:
 10205                           	opt stack 11
 10206                           
 10207                           ;pin_manager.c: 289: IOCBF3_InterruptHandler = InterruptHandler;
 10208                           
 10209                           ; BSR set to: 14
 10210                           ;incstack = 0
 10211  003DE4  C100  F0E1         	movff	IOCBF3_SetInterruptHandler@InterruptHandler,_IOCBF3_InterruptHandler
 10212  003DE8  C101  F0E2         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+1,_IOCBF3_InterruptHandler+1
 10213  003DEC  C102  F0E3         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+2,_IOCBF3_InterruptHandler+2
 10214  003DF0  0012               	return		;funcret
 10215  003DF2                     __end_of_IOCBF3_SetInterruptHandler:
 10216                           	opt stack 0
 10217                           tosu	equ	0xFFF
 10218                           tosh	equ	0xFFE
 10219                           tosl	equ	0xFFD
 10220                           pclath	equ	0xFFA
 10221                           prodh	equ	0xFF4
 10222                           prodl	equ	0xFF3
 10223                           intcon	equ	0xFF2
 10224                           postinc0	equ	0xFEE
 10225                           wreg	equ	0xFE8
 10226                           indf2	equ	0xFDF
 10227                           postinc2	equ	0xFDE
 10228                           postdec2	equ	0xFDD
 10229                           fsr2h	equ	0xFDA
 10230                           fsr2l	equ	0xFD9
 10231                           status	equ	0xFD8
 10232                           
 10233 ;; *************** function _IOCBF2_SetInterruptHandler *****************
 10234 ;; Defined at:
 10235 ;;		line 258 in file "mcc_generated_files/pin_manager.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
 10238 ;;		 -> borde_isr(1), IOCBF2_DefaultInterruptHandler(1), 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;		None
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  1    wreg      void 
 10243 ;; Registers used:
 10244 ;;		wreg, status,2, status,0
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10250 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10253 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10254 ;;Total ram usage:        3 bytes
 10255 ;; Hardware stack levels used:    1
 10256 ;; Hardware stack levels required when called:   18
 10257 ;; This function calls:
 10258 ;;		Nothing
 10259 ;; This function is called by:
 10260 ;;		_PIN_MANAGER_Initialize
 10261 ;;		_drv_cny70_init
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265                           	psect	text70
 10266  003DF2                     __ptext70:
 10267                           	opt stack 0
 10268  003DF2                     _IOCBF2_SetInterruptHandler:
 10269                           	opt stack 11
 10270                           
 10271                           ;pin_manager.c: 259: IOCBF2_InterruptHandler = InterruptHandler;
 10272                           
 10273                           ;incstack = 0
 10274  003DF2  C100  F0E4         	movff	IOCBF2_SetInterruptHandler@InterruptHandler,_IOCBF2_InterruptHandler
 10275  003DF6  C101  F0E5         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+1,_IOCBF2_InterruptHandler+1
 10276  003DFA  C102  F0E6         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+2,_IOCBF2_InterruptHandler+2
 10277  003DFE  0012               	return		;funcret
 10278  003E00                     __end_of_IOCBF2_SetInterruptHandler:
 10279                           	opt stack 0
 10280                           tosu	equ	0xFFF
 10281                           tosh	equ	0xFFE
 10282                           tosl	equ	0xFFD
 10283                           pclath	equ	0xFFA
 10284                           prodh	equ	0xFF4
 10285                           prodl	equ	0xFF3
 10286                           intcon	equ	0xFF2
 10287                           postinc0	equ	0xFEE
 10288                           wreg	equ	0xFE8
 10289                           indf2	equ	0xFDF
 10290                           postinc2	equ	0xFDE
 10291                           postdec2	equ	0xFDD
 10292                           fsr2h	equ	0xFDA
 10293                           fsr2l	equ	0xFD9
 10294                           status	equ	0xFD8
 10295                           
 10296 ;; *************** function _IOCBF1_SetInterruptHandler *****************
 10297 ;; Defined at:
 10298 ;;		line 228 in file "mcc_generated_files/pin_manager.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
 10301 ;;		 -> borde_isr(1), IOCBF1_DefaultInterruptHandler(1), 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;		None
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg, status,2, status,0
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10313 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10316 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10317 ;;Total ram usage:        3 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:   18
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_PIN_MANAGER_Initialize
 10324 ;;		_drv_cny70_init
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           
 10328                           	psect	text71
 10329  003E00                     __ptext71:
 10330                           	opt stack 0
 10331  003E00                     _IOCBF1_SetInterruptHandler:
 10332                           	opt stack 11
 10333                           
 10334                           ;pin_manager.c: 229: IOCBF1_InterruptHandler = InterruptHandler;
 10335                           
 10336                           ;incstack = 0
 10337  003E00  C100  F0E7         	movff	IOCBF1_SetInterruptHandler@InterruptHandler,_IOCBF1_InterruptHandler
 10338  003E04  C101  F0E8         	movff	IOCBF1_SetInterruptHandler@InterruptHandler+1,_IOCBF1_InterruptHandler+1
 10339  003E08  C102  F0E9         	movff	IOCBF1_SetInterruptHandler@InterruptHandler+2,_IOCBF1_InterruptHandler+2
 10340  003E0C  0012               	return		;funcret
 10341  003E0E                     __end_of_IOCBF1_SetInterruptHandler:
 10342                           	opt stack 0
 10343                           tosu	equ	0xFFF
 10344                           tosh	equ	0xFFE
 10345                           tosl	equ	0xFFD
 10346                           pclath	equ	0xFFA
 10347                           prodh	equ	0xFF4
 10348                           prodl	equ	0xFF3
 10349                           intcon	equ	0xFF2
 10350                           postinc0	equ	0xFEE
 10351                           wreg	equ	0xFE8
 10352                           indf2	equ	0xFDF
 10353                           postinc2	equ	0xFDE
 10354                           postdec2	equ	0xFDD
 10355                           fsr2h	equ	0xFDA
 10356                           fsr2l	equ	0xFD9
 10357                           status	equ	0xFD8
 10358                           
 10359 ;; *************** function _IOCBF0_SetInterruptHandler *****************
 10360 ;; Defined at:
 10361 ;;		line 198 in file "mcc_generated_files/pin_manager.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
 10364 ;;		 -> borde_isr(1), IOCBF0_DefaultInterruptHandler(1), 
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;		None
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, status,2, status,0
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10376 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10379 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10380 ;;Total ram usage:        3 bytes
 10381 ;; Hardware stack levels used:    1
 10382 ;; Hardware stack levels required when called:   18
 10383 ;; This function calls:
 10384 ;;		Nothing
 10385 ;; This function is called by:
 10386 ;;		_PIN_MANAGER_Initialize
 10387 ;;		_drv_cny70_init
 10388 ;; This function uses a non-reentrant model
 10389 ;;
 10390                           
 10391                           	psect	text72
 10392  003E0E                     __ptext72:
 10393                           	opt stack 0
 10394  003E0E                     _IOCBF0_SetInterruptHandler:
 10395                           	opt stack 11
 10396                           
 10397                           ;pin_manager.c: 199: IOCBF0_InterruptHandler = InterruptHandler;
 10398                           
 10399                           ;incstack = 0
 10400  003E0E  C100  F0EA         	movff	IOCBF0_SetInterruptHandler@InterruptHandler,_IOCBF0_InterruptHandler
 10401  003E12  C101  F0EB         	movff	IOCBF0_SetInterruptHandler@InterruptHandler+1,_IOCBF0_InterruptHandler+1
 10402  003E16  C102  F0EC         	movff	IOCBF0_SetInterruptHandler@InterruptHandler+2,_IOCBF0_InterruptHandler+2
 10403  003E1A  0012               	return		;funcret
 10404  003E1C                     __end_of_IOCBF0_SetInterruptHandler:
 10405                           	opt stack 0
 10406                           tosu	equ	0xFFF
 10407                           tosh	equ	0xFFE
 10408                           tosl	equ	0xFFD
 10409                           pclath	equ	0xFFA
 10410                           prodh	equ	0xFF4
 10411                           prodl	equ	0xFF3
 10412                           intcon	equ	0xFF2
 10413                           postinc0	equ	0xFEE
 10414                           wreg	equ	0xFE8
 10415                           indf2	equ	0xFDF
 10416                           postinc2	equ	0xFDE
 10417                           postdec2	equ	0xFDD
 10418                           fsr2h	equ	0xFDA
 10419                           fsr2l	equ	0xFD9
 10420                           status	equ	0xFD8
 10421                           
 10422 ;; *************** function _OSCILLATOR_Initialize *****************
 10423 ;; Defined at:
 10424 ;;		line 65 in file "mcc_generated_files/mcc.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10442 ;;Total ram usage:        0 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:   18
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		_SYSTEM_Initialize
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452                           	psect	text73
 10453  003C90                     __ptext73:
 10454                           	opt stack 0
 10455  003C90                     _OSCILLATOR_Initialize:
 10456                           	opt stack 11
 10457                           
 10458                           ;mcc.c: 68: OSCCON1 = 0x60;
 10459                           
 10460                           ;incstack = 0
 10461  003C90  0E60               	movlw	96
 10462  003C92  010E               	movlb	14	; () banked
 10463  003C94  6FD8               	movwf	216,b	;volatile
 10464                           
 10465                           ;mcc.c: 70: OSCCON3 = 0x00;
 10466  003C96  0E00               	movlw	0
 10467  003C98  6FDA               	movwf	218,b	;volatile
 10468                           
 10469                           ;mcc.c: 72: OSCEN = 0x00;
 10470  003C9A  0E00               	movlw	0
 10471  003C9C  6FDC               	movwf	220,b	;volatile
 10472                           
 10473                           ;mcc.c: 74: OSCFRQ = 0x06;
 10474  003C9E  0E06               	movlw	6
 10475  003CA0  6FDE               	movwf	222,b	;volatile
 10476                           
 10477                           ;mcc.c: 76: OSCTUNE = 0x00;
 10478  003CA2  0E00               	movlw	0
 10479  003CA4  6FDD               	movwf	221,b	;volatile
 10480                           
 10481                           ; BSR set to: 14
 10482  003CA6  0012               	return		;funcret
 10483  003CA8                     __end_of_OSCILLATOR_Initialize:
 10484                           	opt stack 0
 10485                           tosu	equ	0xFFF
 10486                           tosh	equ	0xFFE
 10487                           tosl	equ	0xFFD
 10488                           pclath	equ	0xFFA
 10489                           prodh	equ	0xFF4
 10490                           prodl	equ	0xFF3
 10491                           intcon	equ	0xFF2
 10492                           postinc0	equ	0xFEE
 10493                           wreg	equ	0xFE8
 10494                           indf2	equ	0xFDF
 10495                           postinc2	equ	0xFDE
 10496                           postdec2	equ	0xFDD
 10497                           fsr2h	equ	0xFDA
 10498                           fsr2l	equ	0xFD9
 10499                           status	equ	0xFD8
 10500                           
 10501 ;; *************** function _INTERRUPT_Initialize *****************
 10502 ;; Defined at:
 10503 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10504 ;; Parameters:    Size  Location     Type
 10505 ;;		None
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;		None
 10508 ;; Return value:  Size  Location     Type
 10509 ;;                  1    wreg      void 
 10510 ;; Registers used:
 10511 ;;		None
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10521 ;;Total ram usage:        0 bytes
 10522 ;; Hardware stack levels used:    1
 10523 ;; Hardware stack levels required when called:   18
 10524 ;; This function calls:
 10525 ;;		Nothing
 10526 ;; This function is called by:
 10527 ;;		_SYSTEM_Initialize
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           	psect	text74
 10532  003E1C                     __ptext74:
 10533                           	opt stack 0
 10534  003E1C                     _INTERRUPT_Initialize:
 10535                           	opt stack 11
 10536                           
 10537                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 10538                           
 10539                           ; BSR set to: 14
 10540                           ;incstack = 0
 10541  003E1C  8AF2               	bsf	intcon,5,c	;volatile
 10542                           
 10543                           ;interrupt_manager.c: 60: IPR5bits.TMR3GIP = 1;
 10544  003E1E  010E               	movlb	14	; () banked
 10545  003E20  83BF               	bsf	191,1,b	;volatile
 10546                           
 10547                           ;interrupt_manager.c: 63: IPR5bits.TMR1GIP = 1;
 10548  003E22  81BF               	bsf	191,0,b	;volatile
 10549                           
 10550                           ;interrupt_manager.c: 66: IPR0bits.IOCIP = 1;
 10551  003E24  89BA               	bsf	186,4,b	;volatile
 10552                           
 10553                           ;interrupt_manager.c: 70: IPR4bits.TMR5IP = 0;
 10554  003E26  99BE               	bcf	190,4,b	;volatile
 10555                           
 10556                           ; BSR set to: 14
 10557  003E28  0012               	return		;funcret
 10558  003E2A                     __end_of_INTERRUPT_Initialize:
 10559                           	opt stack 0
 10560                           tosu	equ	0xFFF
 10561                           tosh	equ	0xFFE
 10562                           tosl	equ	0xFFD
 10563                           pclath	equ	0xFFA
 10564                           prodh	equ	0xFF4
 10565                           prodl	equ	0xFF3
 10566                           intcon	equ	0xFF2
 10567                           postinc0	equ	0xFEE
 10568                           wreg	equ	0xFE8
 10569                           indf2	equ	0xFDF
 10570                           postinc2	equ	0xFDE
 10571                           postdec2	equ	0xFDD
 10572                           fsr2h	equ	0xFDA
 10573                           fsr2l	equ	0xFD9
 10574                           status	equ	0xFD8
 10575                           
 10576 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 10577 ;; Defined at:
 10578 ;;		line 95 in file "mcc_generated_files/interrupt_manager.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10594 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10595 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10596 ;;Total ram usage:       21 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:   17
 10599 ;; This function calls:
 10600 ;;		_TMR5_ISR
 10601 ;; This function is called by:
 10602 ;;		Interrupt level 1
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           	psect	intcodelo
 10607  000018                     __pintcodelo:
 10608                           	opt stack 0
 10609  000018                     _INTERRUPT_InterruptManagerLow:
 10610                           	opt stack 7
 10611                           
 10612                           ; BSR set to: 14
 10613                           ;incstack = 0
 10614  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10615  00001A  CFD8 F096          	movff	status,??_INTERRUPT_InterruptManagerLow
 10616  00001E  CFE8 F097          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 10617  000022  CFE0 F098          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 10618  000026  CFFA F099          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 10619  00002A  CFFB F09A          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 10620  00002E  CFE9 F09B          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 10621  000032  CFEA F09C          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 10622  000036  CFE1 F09D          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 10623  00003A  CFE2 F09E          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 10624  00003E  CFD9 F09F          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 10625  000042  CFDA F0A0          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 10626  000046  CFF3 F0A1          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 10627  00004A  CFF4 F0A2          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 10628  00004E  CFF6 F0A3          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 10629  000052  CFF7 F0A4          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 10630  000056  CFF8 F0A5          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 10631  00005A  CFF5 F0A6          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 10632  00005E  C05F  F0A7         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 10633  000062  C060  F0A8         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 10634  000066  C061  F0A9         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 10635  00006A  C062  F0AA         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 10636                           
 10637                           ;interrupt_manager.c: 98: if(PIE4bits.TMR5IE == 1 && PIR4bits.TMR5IF == 1)
 10638  00006E  010E               	movlb	14	; () banked
 10639  000070  B9C6               	btfsc	198,4,b	;volatile
 10640                           
 10641                           ; BSR set to: 14
 10642  000072  A9CE               	btfss	206,4,b	;volatile
 10643  000074  D002               	goto	i1l262
 10644                           
 10645                           ; BSR set to: 14
 10646                           ;interrupt_manager.c: 99: {
 10647                           ;interrupt_manager.c: 100: TMR5_ISR();
 10648  000076  EC6A  F01E         	call	_TMR5_ISR	;wreg free
 10649  00007A                     i1l262:
 10650                           
 10651                           ;interrupt_manager.c: 102: else
 10652                           ;interrupt_manager.c: 103: {
 10653  00007A  C0AA  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 10654  00007E  C0A9  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 10655  000082  C0A8  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 10656  000086  C0A7  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 10657  00008A  C0A6  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 10658  00008E  C0A5  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 10659  000092  C0A4  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 10660  000096  C0A3  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 10661  00009A  C0A2  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 10662  00009E  C0A1  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 10663  0000A2  C0A0  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 10664  0000A6  C09F  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 10665  0000AA  C09E  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 10666  0000AE  C09D  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 10667  0000B2  C09C  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 10668  0000B6  C09B  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 10669  0000BA  C09A  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 10670  0000BE  C099  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 10671  0000C2  C098  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 10672  0000C6  C097  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 10673  0000CA  C096  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 10674  0000CE  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10675  0000D0  0010               	retfie	
 10676  0000D2                     __end_of_INTERRUPT_InterruptManagerLow:
 10677                           	opt stack 0
 10678                           tosu	equ	0xFFF
 10679                           tosh	equ	0xFFE
 10680                           tosl	equ	0xFFD
 10681                           pclatu	equ	0xFFB
 10682                           pclath	equ	0xFFA
 10683                           tblptru	equ	0xFF8
 10684                           tblptrh	equ	0xFF7
 10685                           tblptrl	equ	0xFF6
 10686                           tablat	equ	0xFF5
 10687                           prodh	equ	0xFF4
 10688                           prodl	equ	0xFF3
 10689                           intcon	equ	0xFF2
 10690                           postinc0	equ	0xFEE
 10691                           fsr0h	equ	0xFEA
 10692                           fsr0l	equ	0xFE9
 10693                           wreg	equ	0xFE8
 10694                           fsr1h	equ	0xFE2
 10695                           fsr1l	equ	0xFE1
 10696                           bsr	equ	0xFE0
 10697                           indf2	equ	0xFDF
 10698                           postinc2	equ	0xFDE
 10699                           postdec2	equ	0xFDD
 10700                           fsr2h	equ	0xFDA
 10701                           fsr2l	equ	0xFD9
 10702                           status	equ	0xFD8
 10703                           
 10704 ;; *************** function _TMR5_ISR *****************
 10705 ;; Defined at:
 10706 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;		None
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10724 ;;Total ram usage:        0 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:   16
 10727 ;; This function calls:
 10728 ;;		_TMR5_CallBack
 10729 ;;		_TMR5_WriteTimer
 10730 ;; This function is called by:
 10731 ;;		_INTERRUPT_InterruptManagerLow
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text76
 10736  003CD4                     __ptext76:
 10737                           	opt stack 0
 10738  003CD4                     _TMR5_ISR:
 10739                           	opt stack 7
 10740                           
 10741                           ;tmr5.c: 168: PIR4bits.TMR5IF = 0;
 10742                           
 10743                           ;incstack = 0
 10744  003CD4  010E               	movlb	14	; () banked
 10745  003CD6  99CE               	bcf	206,4,b	;volatile
 10746                           
 10747                           ; BSR set to: 14
 10748                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 10749  003CD8  C0ED  F060         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 10750  003CDC  C0EE  F061         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 10751  003CE0  ECBF  F01D         	call	_TMR5_WriteTimer	;wreg free
 10752                           
 10753                           ;tmr5.c: 173: TMR5_CallBack();
 10754  003CE4  EC67  F01D         	call	_TMR5_CallBack	;wreg free
 10755  003CE8  0012               	return		;funcret
 10756  003CEA                     __end_of_TMR5_ISR:
 10757                           	opt stack 0
 10758                           tosu	equ	0xFFF
 10759                           tosh	equ	0xFFE
 10760                           tosl	equ	0xFFD
 10761                           pclatu	equ	0xFFB
 10762                           pclath	equ	0xFFA
 10763                           tblptru	equ	0xFF8
 10764                           tblptrh	equ	0xFF7
 10765                           tblptrl	equ	0xFF6
 10766                           tablat	equ	0xFF5
 10767                           prodh	equ	0xFF4
 10768                           prodl	equ	0xFF3
 10769                           intcon	equ	0xFF2
 10770                           postinc0	equ	0xFEE
 10771                           fsr0h	equ	0xFEA
 10772                           fsr0l	equ	0xFE9
 10773                           wreg	equ	0xFE8
 10774                           fsr1h	equ	0xFE2
 10775                           fsr1l	equ	0xFE1
 10776                           bsr	equ	0xFE0
 10777                           indf2	equ	0xFDF
 10778                           postinc2	equ	0xFDE
 10779                           postdec2	equ	0xFDD
 10780                           fsr2h	equ	0xFDA
 10781                           fsr2l	equ	0xFD9
 10782                           status	equ	0xFD8
 10783                           
 10784 ;; *************** function _TMR5_WriteTimer *****************
 10785 ;; Defined at:
 10786 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;  timerVal        2    0[BANK0 ] unsigned int 
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      void 
 10793 ;; Registers used:
 10794 ;;		wreg, status,2
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10803 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10804 ;;Total ram usage:        2 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; Hardware stack levels required when called:   10
 10807 ;; This function calls:
 10808 ;;		Nothing
 10809 ;; This function is called by:
 10810 ;;		_TMR5_ISR
 10811 ;;		_TMR5_Reload
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815                           	psect	text77
 10816  003B7E                     __ptext77:
 10817                           	opt stack 0
 10818  003B7E                     _TMR5_WriteTimer:
 10819                           	opt stack 12
 10820                           
 10821                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 10822                           
 10823                           ;incstack = 0
 10824  003B7E  A4C3               	btfss	4035,2,c	;volatile
 10825  003B80  D008               	goto	i1l555
 10826                           
 10827                           ;tmr5.c: 130: {
 10828                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 10829  003B82  90C3               	bcf	4035,0,c	;volatile
 10830                           
 10831                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 10832  003B84  0100               	movlb	0	; () banked
 10833  003B86  5161               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 10834  003B88  6EC2               	movwf	4034,c	;volatile
 10835                           
 10836                           ; BSR set to: 0
 10837                           ;tmr5.c: 136: TMR5L = timerVal;
 10838  003B8A  C060  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 10842  003B8E  80C3               	bsf	4035,0,c	;volatile
 10843                           
 10844                           ;tmr5.c: 140: }
 10845  003B90  0012               	return	
 10846  003B92                     i1l555:
 10847                           
 10848                           ;tmr5.c: 141: else
 10849                           ;tmr5.c: 142: {
 10850                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 10851                           
 10852                           ; BSR set to: 0
 10853  003B92  0100               	movlb	0	; () banked
 10854  003B94  5161               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 10855  003B96  6EC2               	movwf	4034,c	;volatile
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;tmr5.c: 145: TMR5L = timerVal;
 10859  003B98  C060  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 10860  003B9C  0012               	return	
 10861  003B9E                     __end_of_TMR5_WriteTimer:
 10862                           	opt stack 0
 10863                           tosu	equ	0xFFF
 10864                           tosh	equ	0xFFE
 10865                           tosl	equ	0xFFD
 10866                           pclatu	equ	0xFFB
 10867                           pclath	equ	0xFFA
 10868                           tblptru	equ	0xFF8
 10869                           tblptrh	equ	0xFF7
 10870                           tblptrl	equ	0xFF6
 10871                           tablat	equ	0xFF5
 10872                           prodh	equ	0xFF4
 10873                           prodl	equ	0xFF3
 10874                           intcon	equ	0xFF2
 10875                           postinc0	equ	0xFEE
 10876                           fsr0h	equ	0xFEA
 10877                           fsr0l	equ	0xFE9
 10878                           wreg	equ	0xFE8
 10879                           fsr1h	equ	0xFE2
 10880                           fsr1l	equ	0xFE1
 10881                           bsr	equ	0xFE0
 10882                           indf2	equ	0xFDF
 10883                           postinc2	equ	0xFDE
 10884                           postdec2	equ	0xFDD
 10885                           fsr2h	equ	0xFDA
 10886                           fsr2l	equ	0xFD9
 10887                           status	equ	0xFD8
 10888                           
 10889 ;; *************** function _TMR5_CallBack *****************
 10890 ;; Defined at:
 10891 ;;		line 176 in file "mcc_generated_files/tmr5.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;		None
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1    wreg      void 
 10898 ;; Registers used:
 10899 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:   15
 10912 ;; This function calls:
 10913 ;;		Absolute function
 10914 ;;		_TMR5_DefaultInterruptHandler
 10915 ;;		_usonic_tick
 10916 ;; This function is called by:
 10917 ;;		_TMR5_ISR
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           	psect	text78
 10922  003ACE                     __ptext78:
 10923                           	opt stack 0
 10924  003ACE                     _TMR5_CallBack:
 10925                           	opt stack 7
 10926                           
 10927                           ;tmr5.c: 179: if(TMR5_InterruptHandler)
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;incstack = 0
 10931  003ACE  0100               	movlb	0	; () banked
 10932  003AD0  51D8               	movf	_TMR5_InterruptHandler& (0+255),w,b
 10933  003AD2  11D9               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 10934  003AD4  11DA               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 10935  003AD6  B4D8               	btfsc	status,2,c
 10936  003AD8  0012               	return	
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;tmr5.c: 180: {
 10940                           ;tmr5.c: 181: TMR5_InterruptHandler();
 10941  003ADA  D801               	call	i1u855_28
 10942  003ADC  0012               	return	
 10943  003ADE                     i1u855_28:
 10944  003ADE  0005               	push	
 10945  003AE0  6EFA               	movwf	pclath,c
 10946  003AE2  51D8               	movf	_TMR5_InterruptHandler& (0+255),w,b
 10947  003AE4  6EFD               	movwf	tosl,c
 10948  003AE6  51D9               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 10949  003AE8  6EFE               	movwf	tosh,c
 10950  003AEA  51DA               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 10951  003AEC  6EFF               	movwf	tosu,c
 10952  003AEE  50FA               	movf	pclath,w,c
 10953  003AF0  0012               	return		;indir
 10954  003AF2                     __end_of_TMR5_CallBack:
 10955                           	opt stack 0
 10956                           tosu	equ	0xFFF
 10957                           tosh	equ	0xFFE
 10958                           tosl	equ	0xFFD
 10959                           pclatu	equ	0xFFB
 10960                           pclath	equ	0xFFA
 10961                           tblptru	equ	0xFF8
 10962                           tblptrh	equ	0xFF7
 10963                           tblptrl	equ	0xFF6
 10964                           tablat	equ	0xFF5
 10965                           prodh	equ	0xFF4
 10966                           prodl	equ	0xFF3
 10967                           intcon	equ	0xFF2
 10968                           postinc0	equ	0xFEE
 10969                           fsr0h	equ	0xFEA
 10970                           fsr0l	equ	0xFE9
 10971                           wreg	equ	0xFE8
 10972                           fsr1h	equ	0xFE2
 10973                           fsr1l	equ	0xFE1
 10974                           bsr	equ	0xFE0
 10975                           indf2	equ	0xFDF
 10976                           postinc2	equ	0xFDE
 10977                           postdec2	equ	0xFDD
 10978                           fsr2h	equ	0xFDA
 10979                           fsr2l	equ	0xFD9
 10980                           status	equ	0xFD8
 10981                           
 10982 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 10983 ;; Defined at:
 10984 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;		None
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;		None
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      void 
 10991 ;; Registers used:
 10992 ;;		None
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;Total ram usage:        0 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; Hardware stack levels required when called:   10
 11005 ;; This function calls:
 11006 ;;		Nothing
 11007 ;; This function is called by:
 11008 ;;		_TMR5_Initialize
 11009 ;;		_TMR5_CallBack
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           	psect	text79
 11014  003EC0                     __ptext79:
 11015                           	opt stack 0
 11016  003EC0                     _TMR5_DefaultInterruptHandler:
 11017                           	opt stack 11
 11018                           
 11019                           ;incstack = 0
 11020  003EC0  0012               	return		;funcret
 11021  003EC2                     __end_of_TMR5_DefaultInterruptHandler:
 11022                           	opt stack 0
 11023                           tosu	equ	0xFFF
 11024                           tosh	equ	0xFFE
 11025                           tosl	equ	0xFFD
 11026                           pclatu	equ	0xFFB
 11027                           pclath	equ	0xFFA
 11028                           tblptru	equ	0xFF8
 11029                           tblptrh	equ	0xFF7
 11030                           tblptrl	equ	0xFF6
 11031                           tablat	equ	0xFF5
 11032                           prodh	equ	0xFF4
 11033                           prodl	equ	0xFF3
 11034                           intcon	equ	0xFF2
 11035                           postinc0	equ	0xFEE
 11036                           fsr0h	equ	0xFEA
 11037                           fsr0l	equ	0xFE9
 11038                           wreg	equ	0xFE8
 11039                           fsr1h	equ	0xFE2
 11040                           fsr1l	equ	0xFE1
 11041                           bsr	equ	0xFE0
 11042                           indf2	equ	0xFDF
 11043                           postinc2	equ	0xFDE
 11044                           postdec2	equ	0xFDD
 11045                           fsr2h	equ	0xFDA
 11046                           fsr2l	equ	0xFD9
 11047                           status	equ	0xFD8
 11048                           
 11049 ;; *************** function _usonic_tick *****************
 11050 ;; Defined at:
 11051 ;;		line 53 in file "drv_ultrasonicos.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;		None
 11054 ;; Auto vars:     Size  Location     Type
 11055 ;;		None
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  1    wreg      void 
 11058 ;; Registers used:
 11059 ;;		wreg, status,2, status,0, cstack
 11060 ;; Tracked objects:
 11061 ;;		On entry : 0/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11069 ;;Total ram usage:        0 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:   14
 11072 ;; This function calls:
 11073 ;;		_TMR1_HasOverflowOccured
 11074 ;;		_TMR3_HasOverflowOccured
 11075 ;;		_tomaRealizadaT1G
 11076 ;;		_tomaRealizadaT3G
 11077 ;; This function is called by:
 11078 ;;		_usonic_init
 11079 ;;		_TMR5_CallBack
 11080 ;; This function uses a non-reentrant model
 11081 ;;
 11082                           
 11083                           	psect	text80
 11084  002E9A                     __ptext80:
 11085                           	opt stack 0
 11086  002E9A                     _usonic_tick:
 11087                           	opt stack 7
 11088                           
 11089                           ;drv_ultrasonicos.c: 55: usonic.mamometroT1G++;
 11090                           
 11091                           ;incstack = 0
 11092  002E9A  0100               	movlb	0	; () banked
 11093  002E9C  2BC0               	incf	(_usonic+21)& (0+255),f,b	;volatile
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;drv_ultrasonicos.c: 56: if (usonic.mamometroT1G == 10 || TMR1_HasOverflowOccured())
 11097  002E9E  0E0A               	movlw	10
 11098  002EA0  19C0               	xorwf	(_usonic+21)& (0+255),w,b	;volatile
 11099  002EA2  B4D8               	btfsc	status,2,c
 11100  002EA4  D005               	goto	i1u493_20
 11101                           
 11102                           ; BSR set to: 0
 11103  002EA6  EC1C  F01F         	call	_TMR1_HasOverflowOccured	;wreg free
 11104  002EAA  0900               	iorlw	0
 11105  002EAC  B4D8               	btfsc	status,2,c
 11106  002EAE  D004               	goto	i1l1077
 11107  002EB0                     i1u493_20:
 11108                           
 11109                           ;drv_ultrasonicos.c: 57: {
 11110                           ;drv_ultrasonicos.c: 58: usonic.flags.T1Gmamado = 1;
 11111  002EB0  0100               	movlb	0	; () banked
 11112  002EB2  89BB               	bsf	(_usonic+16)& (0+255),4,b	;volatile
 11113                           
 11114                           ; BSR set to: 0
 11115                           ;drv_ultrasonicos.c: 59: usonic.mamometroT1G = 0;
 11116  002EB4  0E00               	movlw	0
 11117  002EB6  6FC0               	movwf	(_usonic+21)& (0+255),b	;volatile
 11118  002EB8                     i1l1077:
 11119                           
 11120                           ;drv_ultrasonicos.c: 60: }
 11121                           ;drv_ultrasonicos.c: 61: usonic.mamometroT3G++;
 11122                           
 11123                           ; BSR set to: 0
 11124  002EB8  0100               	movlb	0	; () banked
 11125  002EBA  2BC1               	incf	(_usonic+22)& (0+255),f,b	;volatile
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;drv_ultrasonicos.c: 62: if (usonic.mamometroT3G == 10 || TMR3_HasOverflowOccured())
 11129  002EBC  0E0A               	movlw	10
 11130  002EBE  19C1               	xorwf	(_usonic+22)& (0+255),w,b	;volatile
 11131  002EC0  B4D8               	btfsc	status,2,c
 11132  002EC2  D005               	goto	i1u495_20
 11133                           
 11134                           ; BSR set to: 0
 11135  002EC4  EC15  F01F         	call	_TMR3_HasOverflowOccured	;wreg free
 11136  002EC8  0900               	iorlw	0
 11137  002ECA  B4D8               	btfsc	status,2,c
 11138  002ECC  D004               	goto	i1l1080
 11139  002ECE                     i1u495_20:
 11140                           
 11141                           ;drv_ultrasonicos.c: 63: {
 11142                           ;drv_ultrasonicos.c: 64: usonic.flags.T3Gmamado = 1;
 11143  002ECE  0100               	movlb	0	; () banked
 11144  002ED0  8BBB               	bsf	(_usonic+16)& (0+255),5,b	;volatile
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;drv_ultrasonicos.c: 65: usonic.mamometroT3G = 0;
 11148  002ED2  0E00               	movlw	0
 11149  002ED4  6FC1               	movwf	(_usonic+22)& (0+255),b	;volatile
 11150  002ED6                     i1l1080:
 11151                           
 11152                           ;drv_ultrasonicos.c: 66: }
 11153                           ;drv_ultrasonicos.c: 68: if (usonic.flags.pulsoCapturadoT1G || usonic.flags.T1Gmamado)
 11154                           
 11155                           ; BSR set to: 0
 11156  002ED6  0100               	movlb	0	; () banked
 11157  002ED8  B1BB               	btfsc	(_usonic+16)& (0+255),0,b	;volatile
 11158  002EDA  D002               	goto	i1u497_20
 11159                           
 11160                           ; BSR set to: 0
 11161  002EDC  A9BB               	btfss	(_usonic+16)& (0+255),4,b	;volatile
 11162  002EDE  D00D               	goto	i1l1083
 11163  002EE0                     i1u497_20:
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;drv_ultrasonicos.c: 69: {
 11167                           ;drv_ultrasonicos.c: 70: tomaRealizadaT1G(usonic.flags.T1Gmamado);
 11168                           
 11169                           ; BSR set to: 0
 11170  002EE0  A9BB               	btfss	(_usonic+16)& (0+255),4,b	;volatile
 11171  002EE2  D002               	goto	i1u498_20
 11172  002EE4  0E01               	movlw	1
 11173  002EE6  D001               	goto	i1u498_26
 11174  002EE8                     i1u498_20:
 11175  002EE8  0E00               	movlw	0
 11176  002EEA                     i1u498_26:
 11177  002EEA  EC6E  F016         	call	_tomaRealizadaT1G
 11178                           
 11179                           ;drv_ultrasonicos.c: 71: PIR4bits.TMR1IF = 0;
 11180  002EEE  010E               	movlb	14	; () banked
 11181  002EF0  91CE               	bcf	206,0,b	;volatile
 11182                           
 11183                           ; BSR set to: 14
 11184                           ;drv_ultrasonicos.c: 72: usonic.flags.T1Gmamado = 0;
 11185  002EF2  0100               	movlb	0	; () banked
 11186  002EF4  99BB               	bcf	(_usonic+16)& (0+255),4,b	;volatile
 11187                           
 11188                           ; BSR set to: 0
 11189                           ;drv_ultrasonicos.c: 73: usonic.mamometroT1G = 0;
 11190  002EF6  0E00               	movlw	0
 11191  002EF8  6FC0               	movwf	(_usonic+21)& (0+255),b	;volatile
 11192  002EFA                     i1l1083:
 11193                           
 11194                           ; BSR set to: 0
 11195                           ;drv_ultrasonicos.c: 74: }
 11196                           ;drv_ultrasonicos.c: 75: if (usonic.flags.pulsoCapturadoT3G || usonic.flags.T3Gmamado)
 11197                           
 11198                           ; BSR set to: 0
 11199  002EFA  B3BB               	btfsc	(_usonic+16)& (0+255),1,b	;volatile
 11200  002EFC  D002               	goto	i1u500_20
 11201                           
 11202                           ; BSR set to: 0
 11203  002EFE  ABBB               	btfss	(_usonic+16)& (0+255),5,b	;volatile
 11204  002F00  0012               	return	
 11205  002F02                     i1u500_20:
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;drv_ultrasonicos.c: 76: {
 11209                           ;drv_ultrasonicos.c: 77: tomaRealizadaT3G(usonic.flags.T3Gmamado);
 11210                           
 11211                           ; BSR set to: 0
 11212  002F02  ABBB               	btfss	(_usonic+16)& (0+255),5,b	;volatile
 11213  002F04  D002               	goto	i1u501_20
 11214  002F06  0E01               	movlw	1
 11215  002F08  D001               	goto	i1u501_26
 11216  002F0A                     i1u501_20:
 11217  002F0A  0E00               	movlw	0
 11218  002F0C                     i1u501_26:
 11219  002F0C  EC1B  F016         	call	_tomaRealizadaT3G
 11220                           
 11221                           ;drv_ultrasonicos.c: 78: PIR4bits.TMR3IF = 0;
 11222  002F10  010E               	movlb	14	; () banked
 11223  002F12  95CE               	bcf	206,2,b	;volatile
 11224                           
 11225                           ; BSR set to: 14
 11226                           ;drv_ultrasonicos.c: 79: usonic.flags.T3Gmamado = 0;
 11227  002F14  0100               	movlb	0	; () banked
 11228  002F16  9BBB               	bcf	(_usonic+16)& (0+255),5,b	;volatile
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;drv_ultrasonicos.c: 80: usonic.mamometroT3G = 0;
 11232  002F18  0E00               	movlw	0
 11233  002F1A  6FC1               	movwf	(_usonic+22)& (0+255),b	;volatile
 11234  002F1C  0012               	return	
 11235  002F1E                     __end_of_usonic_tick:
 11236                           	opt stack 0
 11237                           tosu	equ	0xFFF
 11238                           tosh	equ	0xFFE
 11239                           tosl	equ	0xFFD
 11240                           pclatu	equ	0xFFB
 11241                           pclath	equ	0xFFA
 11242                           tblptru	equ	0xFF8
 11243                           tblptrh	equ	0xFF7
 11244                           tblptrl	equ	0xFF6
 11245                           tablat	equ	0xFF5
 11246                           prodh	equ	0xFF4
 11247                           prodl	equ	0xFF3
 11248                           intcon	equ	0xFF2
 11249                           postinc0	equ	0xFEE
 11250                           fsr0h	equ	0xFEA
 11251                           fsr0l	equ	0xFE9
 11252                           wreg	equ	0xFE8
 11253                           fsr1h	equ	0xFE2
 11254                           fsr1l	equ	0xFE1
 11255                           bsr	equ	0xFE0
 11256                           indf2	equ	0xFDF
 11257                           postinc2	equ	0xFDE
 11258                           postdec2	equ	0xFDD
 11259                           fsr2h	equ	0xFDA
 11260                           fsr2l	equ	0xFD9
 11261                           status	equ	0xFD8
 11262                           
 11263 ;; *************** function _tomaRealizadaT3G *****************
 11264 ;; Defined at:
 11265 ;;		line 117 in file "drv_ultrasonicos.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;  mamado          1    wreg     unsigned char 
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;  mamado          1   53[BANK0 ] unsigned char 
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1    wreg      void 
 11272 ;; Registers used:
 11273 ;;		wreg, status,2, status,0, cstack
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11283 ;;Total ram usage:        2 bytes
 11284 ;; Hardware stack levels used:    1
 11285 ;; Hardware stack levels required when called:   13
 11286 ;; This function calls:
 11287 ;;		_computarMedicion
 11288 ;;		i1_TMR3_StartSinglePulseAcquisition
 11289 ;;		i1_usonic_trigger
 11290 ;; This function is called by:
 11291 ;;		_usonic_tick
 11292 ;; This function uses a non-reentrant model
 11293 ;;
 11294                           
 11295                           	psect	text81
 11296  002C36                     __ptext81:
 11297                           	opt stack 0
 11298  002C36                     _tomaRealizadaT3G:
 11299                           	opt stack 7
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;incstack = 0
 11303                           ;tomaRealizadaT3G@mamado stored from wreg
 11304  002C36  0100               	movlb	0	; () banked
 11305  002C38  6F95               	movwf	tomaRealizadaT3G@mamado& (0+255),b
 11306                           
 11307                           ;drv_ultrasonicos.c: 119: if (!usonic.flags.modoT3G)
 11308  002C3A  0100               	movlb	0	; () banked
 11309  002C3C  B7BB               	btfsc	(_usonic+16)& (0+255),3,b	;volatile
 11310  002C3E  D01E               	goto	i1l1101
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;drv_ultrasonicos.c: 120: {
 11314                           ;drv_ultrasonicos.c: 121: if (!mamado)
 11315  002C40  5195               	movf	tomaRealizadaT3G@mamado& (0+255),w,b
 11316  002C42  A4D8               	btfss	status,2,c
 11317  002C44  D008               	goto	i1l1102
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;drv_ultrasonicos.c: 122: computarMedicion(2, usonic.pulsoCapturadoT3G);
 11321  002C46  C0BE  F089         	movff	_usonic+19,computarMedicion@anchoPulso	;volatile
 11322  002C4A  C0BF  F08A         	movff	_usonic+20,computarMedicion@anchoPulso+1	;volatile
 11323  002C4E  0E02               	movlw	2
 11324  002C50  ECF1  F009         	call	_computarMedicion
 11325  002C54  D007               	goto	i1l1103
 11326  002C56                     i1l1102:
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;drv_ultrasonicos.c: 123: else
 11330                           ;drv_ultrasonicos.c: 124: {
 11331                           ;drv_ultrasonicos.c: 125: usonic.distancia.left = (255);
 11332  002C56  69AB               	setf	_usonic& (0+255),b	;volatile
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;drv_ultrasonicos.c: 126: usonic.promedio.left = 0;
 11336  002C58  0E00               	movlw	0
 11337  002C5A  6FB4               	movwf	(_usonic+9)& (0+255),b	;volatile
 11338  002C5C  0E00               	movlw	0
 11339  002C5E  6FB3               	movwf	(_usonic+8)& (0+255),b	;volatile
 11340                           
 11341                           ;drv_ultrasonicos.c: 127: usonic.numMuestra.left = 0;
 11342  002C60  0E00               	movlw	0
 11343  002C62  6FAF               	movwf	(_usonic+4)& (0+255),b	;volatile
 11344  002C64                     i1l1103:
 11345                           
 11346                           ;drv_ultrasonicos.c: 128: }
 11347                           ;drv_ultrasonicos.c: 129: T3GPPSbits.T3GPPS = 0x17;
 11348                           
 11349                           ; BSR set to: 0
 11350  002C64  010E               	movlb	14	; () banked
 11351  002C66  81A8               	bsf	168,0,b	;volatile
 11352  002C68  83A8               	bsf	168,1,b	;volatile
 11353  002C6A  85A8               	bsf	168,2,b	;volatile
 11354  002C6C  97A8               	bcf	168,3,b	;volatile
 11355  002C6E  89A8               	bsf	168,4,b	;volatile
 11356                           
 11357                           ; BSR set to: 14
 11358                           ;drv_ultrasonicos.c: 130: usonic_trigger(3);
 11359  002C70  0E03               	movlw	3
 11360  002C72  ECFD  F018         	call	i1_usonic_trigger
 11361                           
 11362                           ;drv_ultrasonicos.c: 131: TMR3_StartSinglePulseAcquisition();
 11363  002C76  EC57  F01F         	call	i1_TMR3_StartSinglePulseAcquisition	;wreg free
 11364                           
 11365                           ;drv_ultrasonicos.c: 132: } else
 11366  002C7A  D01E               	goto	i1l1104
 11367  002C7C                     i1l1101:
 11368                           
 11369                           ;drv_ultrasonicos.c: 133: {
 11370                           ;drv_ultrasonicos.c: 134: if (!mamado)
 11371  002C7C  0100               	movlb	0	; () banked
 11372  002C7E  5195               	movf	tomaRealizadaT3G@mamado& (0+255),w,b
 11373  002C80  A4D8               	btfss	status,2,c
 11374  002C82  D008               	goto	i1l1105
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;drv_ultrasonicos.c: 135: computarMedicion(3, usonic.pulsoCapturadoT3G);
 11378  002C84  C0BE  F089         	movff	_usonic+19,computarMedicion@anchoPulso	;volatile
 11379  002C88  C0BF  F08A         	movff	_usonic+20,computarMedicion@anchoPulso+1	;volatile
 11380  002C8C  0E03               	movlw	3
 11381  002C8E  ECF1  F009         	call	_computarMedicion
 11382  002C92  D007               	goto	i1l1106
 11383  002C94                     i1l1105:
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;drv_ultrasonicos.c: 136: else
 11387                           ;drv_ultrasonicos.c: 137: {
 11388                           ;drv_ultrasonicos.c: 138: usonic.distancia.right = (255);
 11389  002C94  69AC               	setf	(_usonic+1)& (0+255),b	;volatile
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;drv_ultrasonicos.c: 139: usonic.promedio.right = 0;
 11393  002C96  0E00               	movlw	0
 11394  002C98  6FB6               	movwf	(_usonic+11)& (0+255),b	;volatile
 11395  002C9A  0E00               	movlw	0
 11396  002C9C  6FB5               	movwf	(_usonic+10)& (0+255),b	;volatile
 11397                           
 11398                           ;drv_ultrasonicos.c: 140: usonic.numMuestra.right = 0;
 11399  002C9E  0E00               	movlw	0
 11400  002CA0  6FB0               	movwf	(_usonic+5)& (0+255),b	;volatile
 11401  002CA2                     i1l1106:
 11402                           
 11403                           ;drv_ultrasonicos.c: 141: }
 11404                           ;drv_ultrasonicos.c: 142: T3GPPSbits.T3GPPS = 0x16;
 11405                           
 11406                           ; BSR set to: 0
 11407  002CA2  010E               	movlb	14	; () banked
 11408  002CA4  91A8               	bcf	168,0,b	;volatile
 11409  002CA6  83A8               	bsf	168,1,b	;volatile
 11410  002CA8  85A8               	bsf	168,2,b	;volatile
 11411  002CAA  97A8               	bcf	168,3,b	;volatile
 11412  002CAC  89A8               	bsf	168,4,b	;volatile
 11413                           
 11414                           ; BSR set to: 14
 11415                           ;drv_ultrasonicos.c: 143: usonic_trigger(2);
 11416  002CAE  0E02               	movlw	2
 11417  002CB0  ECFD  F018         	call	i1_usonic_trigger
 11418                           
 11419                           ;drv_ultrasonicos.c: 144: TMR3_StartSinglePulseAcquisition();
 11420  002CB4  EC57  F01F         	call	i1_TMR3_StartSinglePulseAcquisition	;wreg free
 11421  002CB8                     i1l1104:
 11422                           
 11423                           ;drv_ultrasonicos.c: 145: }
 11424                           ;drv_ultrasonicos.c: 146: usonic.flags.modoT3G = ~usonic.flags.modoT3G;
 11425  002CB8  0100               	movlb	0	; () banked
 11426  002CBA  A7BB               	btfss	(_usonic+16)& (0+255),3,b	;volatile
 11427  002CBC  D002               	goto	i1u468_20
 11428  002CBE  0E01               	movlw	1
 11429  002CC0  D001               	goto	i1u468_26
 11430  002CC2                     i1u468_20:
 11431  002CC2  0E00               	movlw	0
 11432  002CC4                     i1u468_26:
 11433  002CC4  0AFF               	xorlw	255
 11434  002CC6  6F94               	movwf	??_tomaRealizadaT3G& (0+255),b
 11435  002CC8  4794               	rlncf	??_tomaRealizadaT3G& (0+255),f,b
 11436  002CCA  4794               	rlncf	??_tomaRealizadaT3G& (0+255),f,b
 11437  002CCC  4794               	rlncf	??_tomaRealizadaT3G& (0+255),f,b
 11438  002CCE  51BB               	movf	(_usonic+16)& (0+255),w,b	;volatile
 11439  002CD0  1994               	xorwf	??_tomaRealizadaT3G& (0+255),w,b
 11440  002CD2  0BF7               	andlw	-9
 11441  002CD4  1994               	xorwf	??_tomaRealizadaT3G& (0+255),w,b
 11442  002CD6  6FBB               	movwf	(_usonic+16)& (0+255),b	;volatile
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;drv_ultrasonicos.c: 147: usonic.flags.pulsoCapturadoT3G = 0;
 11446  002CD8  93BB               	bcf	(_usonic+16)& (0+255),1,b	;volatile
 11447                           
 11448                           ; BSR set to: 0
 11449  002CDA  0012               	return		;funcret
 11450  002CDC                     __end_of_tomaRealizadaT3G:
 11451                           	opt stack 0
 11452                           tosu	equ	0xFFF
 11453                           tosh	equ	0xFFE
 11454                           tosl	equ	0xFFD
 11455                           pclatu	equ	0xFFB
 11456                           pclath	equ	0xFFA
 11457                           tblptru	equ	0xFF8
 11458                           tblptrh	equ	0xFF7
 11459                           tblptrl	equ	0xFF6
 11460                           tablat	equ	0xFF5
 11461                           prodh	equ	0xFF4
 11462                           prodl	equ	0xFF3
 11463                           intcon	equ	0xFF2
 11464                           postinc0	equ	0xFEE
 11465                           fsr0h	equ	0xFEA
 11466                           fsr0l	equ	0xFE9
 11467                           wreg	equ	0xFE8
 11468                           fsr1h	equ	0xFE2
 11469                           fsr1l	equ	0xFE1
 11470                           bsr	equ	0xFE0
 11471                           indf2	equ	0xFDF
 11472                           postinc2	equ	0xFDE
 11473                           postdec2	equ	0xFDD
 11474                           fsr2h	equ	0xFDA
 11475                           fsr2l	equ	0xFD9
 11476                           status	equ	0xFD8
 11477                           
 11478 ;; *************** function i1_TMR3_StartSinglePulseAcquisition *****************
 11479 ;; Defined at:
 11480 ;;		line 156 in file "mcc_generated_files/tmr3.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;		None
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;		None
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  1    wreg      void 
 11487 ;; Registers used:
 11488 ;;		None
 11489 ;; Tracked objects:
 11490 ;;		On entry : 0/0
 11491 ;;		On exit  : 0/0
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11498 ;;Total ram usage:        0 bytes
 11499 ;; Hardware stack levels used:    1
 11500 ;; Hardware stack levels required when called:   10
 11501 ;; This function calls:
 11502 ;;		Nothing
 11503 ;; This function is called by:
 11504 ;;		_tomaRealizadaT3G
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           	psect	text82
 11509  003EAE                     __ptext82:
 11510                           	opt stack 0
 11511  003EAE                     i1_TMR3_StartSinglePulseAcquisition:
 11512                           	opt stack 9
 11513                           
 11514                           ;tmr3.c: 158: T3GCONbits.T3GGO = 1;
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;incstack = 0
 11518  003EAE  86CA               	bsf	4042,3,c	;volatile
 11519  003EB0  0012               	return		;funcret
 11520  003EB2                     __end_ofi1_TMR3_StartSinglePulseAcquisition:
 11521                           	opt stack 0
 11522                           tosu	equ	0xFFF
 11523                           tosh	equ	0xFFE
 11524                           tosl	equ	0xFFD
 11525                           pclatu	equ	0xFFB
 11526                           pclath	equ	0xFFA
 11527                           tblptru	equ	0xFF8
 11528                           tblptrh	equ	0xFF7
 11529                           tblptrl	equ	0xFF6
 11530                           tablat	equ	0xFF5
 11531                           prodh	equ	0xFF4
 11532                           prodl	equ	0xFF3
 11533                           intcon	equ	0xFF2
 11534                           postinc0	equ	0xFEE
 11535                           fsr0h	equ	0xFEA
 11536                           fsr0l	equ	0xFE9
 11537                           wreg	equ	0xFE8
 11538                           fsr1h	equ	0xFE2
 11539                           fsr1l	equ	0xFE1
 11540                           bsr	equ	0xFE0
 11541                           indf2	equ	0xFDF
 11542                           postinc2	equ	0xFDE
 11543                           postdec2	equ	0xFDD
 11544                           fsr2h	equ	0xFDA
 11545                           fsr2l	equ	0xFD9
 11546                           status	equ	0xFD8
 11547                           
 11548 ;; *************** function _tomaRealizadaT1G *****************
 11549 ;; Defined at:
 11550 ;;		line 84 in file "drv_ultrasonicos.c"
 11551 ;; Parameters:    Size  Location     Type
 11552 ;;  mamado          1    wreg     unsigned char 
 11553 ;; Auto vars:     Size  Location     Type
 11554 ;;  mamado          1   53[BANK0 ] unsigned char 
 11555 ;; Return value:  Size  Location     Type
 11556 ;;                  1    wreg      void 
 11557 ;; Registers used:
 11558 ;;		wreg, status,2, status,0, cstack
 11559 ;; Tracked objects:
 11560 ;;		On entry : 0/0
 11561 ;;		On exit  : 0/0
 11562 ;;		Unchanged: 0/0
 11563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11567 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11568 ;;Total ram usage:        2 bytes
 11569 ;; Hardware stack levels used:    1
 11570 ;; Hardware stack levels required when called:   13
 11571 ;; This function calls:
 11572 ;;		_computarMedicion
 11573 ;;		i1_TMR1_StartSinglePulseAcquisition
 11574 ;;		i1_usonic_trigger
 11575 ;; This function is called by:
 11576 ;;		_usonic_tick
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           	psect	text83
 11581  002CDC                     __ptext83:
 11582                           	opt stack 0
 11583  002CDC                     _tomaRealizadaT1G:
 11584                           	opt stack 7
 11585                           
 11586                           ;incstack = 0
 11587                           ;tomaRealizadaT1G@mamado stored from wreg
 11588  002CDC  0100               	movlb	0	; () banked
 11589  002CDE  6F95               	movwf	tomaRealizadaT1G@mamado& (0+255),b
 11590                           
 11591                           ;drv_ultrasonicos.c: 86: if (!usonic.flags.modoT1G)
 11592  002CE0  0100               	movlb	0	; () banked
 11593  002CE2  B5BB               	btfsc	(_usonic+16)& (0+255),2,b	;volatile
 11594  002CE4  D01E               	goto	i1l1092
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;drv_ultrasonicos.c: 87: {
 11598                           ;drv_ultrasonicos.c: 88: if (!mamado)
 11599  002CE6  5195               	movf	tomaRealizadaT1G@mamado& (0+255),w,b
 11600  002CE8  A4D8               	btfss	status,2,c
 11601  002CEA  D008               	goto	i1l1093
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;drv_ultrasonicos.c: 89: computarMedicion(0, usonic.pulsoCapturadoT1G);
 11605  002CEC  C0BC  F089         	movff	_usonic+17,computarMedicion@anchoPulso	;volatile
 11606  002CF0  C0BD  F08A         	movff	_usonic+18,computarMedicion@anchoPulso+1	;volatile
 11607  002CF4  0E00               	movlw	0
 11608  002CF6  ECF1  F009         	call	_computarMedicion
 11609  002CFA  D007               	goto	i1l1094
 11610  002CFC                     i1l1093:
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;drv_ultrasonicos.c: 90: else
 11614                           ;drv_ultrasonicos.c: 91: {
 11615                           ;drv_ultrasonicos.c: 92: usonic.distancia.front = (255);
 11616  002CFC  69AD               	setf	(_usonic+2)& (0+255),b	;volatile
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;drv_ultrasonicos.c: 93: usonic.promedio.front = 0;
 11620  002CFE  0E00               	movlw	0
 11621  002D00  6FB8               	movwf	(_usonic+13)& (0+255),b	;volatile
 11622  002D02  0E00               	movlw	0
 11623  002D04  6FB7               	movwf	(_usonic+12)& (0+255),b	;volatile
 11624                           
 11625                           ;drv_ultrasonicos.c: 94: usonic.numMuestra.front = 0;
 11626  002D06  0E00               	movlw	0
 11627  002D08  6FB1               	movwf	(_usonic+6)& (0+255),b	;volatile
 11628  002D0A                     i1l1094:
 11629                           
 11630                           ;drv_ultrasonicos.c: 95: }
 11631                           ;drv_ultrasonicos.c: 96: T1GPPSbits.T1GPPS = 0x11;
 11632                           
 11633                           ; BSR set to: 0
 11634  002D0A  010E               	movlb	14	; () banked
 11635  002D0C  81A6               	bsf	166,0,b	;volatile
 11636  002D0E  93A6               	bcf	166,1,b	;volatile
 11637  002D10  95A6               	bcf	166,2,b	;volatile
 11638  002D12  97A6               	bcf	166,3,b	;volatile
 11639  002D14  89A6               	bsf	166,4,b	;volatile
 11640                           
 11641                           ; BSR set to: 14
 11642                           ;drv_ultrasonicos.c: 97: usonic_trigger(1);
 11643  002D16  0E01               	movlw	1
 11644  002D18  ECFD  F018         	call	i1_usonic_trigger
 11645                           
 11646                           ;drv_ultrasonicos.c: 98: TMR1_StartSinglePulseAcquisition();
 11647  002D1C  EC59  F01F         	call	i1_TMR1_StartSinglePulseAcquisition	;wreg free
 11648                           
 11649                           ;drv_ultrasonicos.c: 99: } else
 11650  002D20  D01E               	goto	i1l1095
 11651  002D22                     i1l1092:
 11652                           
 11653                           ;drv_ultrasonicos.c: 100: {
 11654                           ;drv_ultrasonicos.c: 101: if (!mamado)
 11655  002D22  0100               	movlb	0	; () banked
 11656  002D24  5195               	movf	tomaRealizadaT1G@mamado& (0+255),w,b
 11657  002D26  A4D8               	btfss	status,2,c
 11658  002D28  D008               	goto	i1l1096
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;drv_ultrasonicos.c: 102: computarMedicion(1, usonic.pulsoCapturadoT1G);
 11662  002D2A  C0BC  F089         	movff	_usonic+17,computarMedicion@anchoPulso	;volatile
 11663  002D2E  C0BD  F08A         	movff	_usonic+18,computarMedicion@anchoPulso+1	;volatile
 11664  002D32  0E01               	movlw	1
 11665  002D34  ECF1  F009         	call	_computarMedicion
 11666  002D38  D007               	goto	i1l1097
 11667  002D3A                     i1l1096:
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;drv_ultrasonicos.c: 103: else
 11671                           ;drv_ultrasonicos.c: 104: {
 11672                           ;drv_ultrasonicos.c: 105: usonic.distancia.back = (255);
 11673  002D3A  69AE               	setf	(_usonic+3)& (0+255),b	;volatile
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;drv_ultrasonicos.c: 106: usonic.promedio.back = 0;
 11677  002D3C  0E00               	movlw	0
 11678  002D3E  6FBA               	movwf	(_usonic+15)& (0+255),b	;volatile
 11679  002D40  0E00               	movlw	0
 11680  002D42  6FB9               	movwf	(_usonic+14)& (0+255),b	;volatile
 11681                           
 11682                           ;drv_ultrasonicos.c: 107: usonic.numMuestra.back = 0;
 11683  002D44  0E00               	movlw	0
 11684  002D46  6FB2               	movwf	(_usonic+7)& (0+255),b	;volatile
 11685  002D48                     i1l1097:
 11686                           
 11687                           ;drv_ultrasonicos.c: 108: }
 11688                           ;drv_ultrasonicos.c: 109: T1GPPSbits.T1GPPS = 0x12;
 11689                           
 11690                           ; BSR set to: 0
 11691  002D48  010E               	movlb	14	; () banked
 11692  002D4A  91A6               	bcf	166,0,b	;volatile
 11693  002D4C  83A6               	bsf	166,1,b	;volatile
 11694  002D4E  95A6               	bcf	166,2,b	;volatile
 11695  002D50  97A6               	bcf	166,3,b	;volatile
 11696  002D52  89A6               	bsf	166,4,b	;volatile
 11697                           
 11698                           ; BSR set to: 14
 11699                           ;drv_ultrasonicos.c: 110: usonic_trigger(0);
 11700  002D54  0E00               	movlw	0
 11701  002D56  ECFD  F018         	call	i1_usonic_trigger
 11702                           
 11703                           ;drv_ultrasonicos.c: 111: TMR1_StartSinglePulseAcquisition();
 11704  002D5A  EC59  F01F         	call	i1_TMR1_StartSinglePulseAcquisition	;wreg free
 11705  002D5E                     i1l1095:
 11706                           
 11707                           ;drv_ultrasonicos.c: 112: }
 11708                           ;drv_ultrasonicos.c: 113: usonic.flags.modoT1G = ~usonic.flags.modoT1G;
 11709  002D5E  0100               	movlb	0	; () banked
 11710  002D60  A5BB               	btfss	(_usonic+16)& (0+255),2,b	;volatile
 11711  002D62  D002               	goto	i1u464_20
 11712  002D64  0E01               	movlw	1
 11713  002D66  D001               	goto	i1u464_26
 11714  002D68                     i1u464_20:
 11715  002D68  0E00               	movlw	0
 11716  002D6A                     i1u464_26:
 11717  002D6A  0AFF               	xorlw	255
 11718  002D6C  6F94               	movwf	??_tomaRealizadaT1G& (0+255),b
 11719  002D6E  4794               	rlncf	??_tomaRealizadaT1G& (0+255),f,b
 11720  002D70  4794               	rlncf	??_tomaRealizadaT1G& (0+255),f,b
 11721  002D72  51BB               	movf	(_usonic+16)& (0+255),w,b	;volatile
 11722  002D74  1994               	xorwf	??_tomaRealizadaT1G& (0+255),w,b
 11723  002D76  0BFB               	andlw	-5
 11724  002D78  1994               	xorwf	??_tomaRealizadaT1G& (0+255),w,b
 11725  002D7A  6FBB               	movwf	(_usonic+16)& (0+255),b	;volatile
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;drv_ultrasonicos.c: 114: usonic.flags.pulsoCapturadoT1G = 0;
 11729  002D7C  91BB               	bcf	(_usonic+16)& (0+255),0,b	;volatile
 11730                           
 11731                           ; BSR set to: 0
 11732  002D7E  0012               	return		;funcret
 11733  002D80                     __end_of_tomaRealizadaT1G:
 11734                           	opt stack 0
 11735                           tosu	equ	0xFFF
 11736                           tosh	equ	0xFFE
 11737                           tosl	equ	0xFFD
 11738                           pclatu	equ	0xFFB
 11739                           pclath	equ	0xFFA
 11740                           tblptru	equ	0xFF8
 11741                           tblptrh	equ	0xFF7
 11742                           tblptrl	equ	0xFF6
 11743                           tablat	equ	0xFF5
 11744                           prodh	equ	0xFF4
 11745                           prodl	equ	0xFF3
 11746                           intcon	equ	0xFF2
 11747                           postinc0	equ	0xFEE
 11748                           fsr0h	equ	0xFEA
 11749                           fsr0l	equ	0xFE9
 11750                           wreg	equ	0xFE8
 11751                           fsr1h	equ	0xFE2
 11752                           fsr1l	equ	0xFE1
 11753                           bsr	equ	0xFE0
 11754                           indf2	equ	0xFDF
 11755                           postinc2	equ	0xFDE
 11756                           postdec2	equ	0xFDD
 11757                           fsr2h	equ	0xFDA
 11758                           fsr2l	equ	0xFD9
 11759                           status	equ	0xFD8
 11760                           
 11761 ;; *************** function i1_usonic_trigger *****************
 11762 ;; Defined at:
 11763 ;;		line 230 in file "drv_ultrasonicos.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  sensor          1    wreg     unsigned char 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  sensor          1    0[BANK0 ] unsigned char 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1    wreg      void 
 11770 ;; Registers used:
 11771 ;;		wreg, status,2, status,0, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11780 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11781 ;;Total ram usage:        1 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:   10
 11784 ;; This function calls:
 11785 ;;		Nothing
 11786 ;; This function is called by:
 11787 ;;		_tomaRealizadaT1G
 11788 ;;		_tomaRealizadaT3G
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           	psect	text84
 11793  0031FA                     __ptext84:
 11794                           	opt stack 0
 11795  0031FA                     i1_usonic_trigger:
 11796                           	opt stack 9
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;incstack = 0
 11800                           ;i1usonic_trigger@sensor stored from wreg
 11801  0031FA  0100               	movlb	0	; () banked
 11802  0031FC  6F60               	movwf	i1usonic_trigger@sensor& (0+255),b
 11803                           
 11804                           ;drv_ultrasonicos.c: 232: switch (sensor)
 11805  0031FE  D01C               	goto	i1l1133
 11806  003200                     
 11807                           ;drv_ultrasonicos.c: 235: do { LATDbits.LATD1 = 1; } while(0);
 11808  003200  8286               	bsf	3974,1,c	;volatile
 11809                           
 11810                           ;drv_ultrasonicos.c: 236: _delay((unsigned long)((10)*(32000000/4000000.0)));
 11811  003202  0E1A               	movlw	26
 11812  003204                     i1u888_27:
 11813  003204  2EE8               	decfsz	wreg,f,c
 11814  003206  D7FE               	bra	i1u888_27
 11815  003208  D000               	nop2	
 11816                           
 11817                           ;drv_ultrasonicos.c: 237: do { LATDbits.LATD1 = 0; } while(0);
 11818  00320A  9286               	bcf	3974,1,c	;volatile
 11819                           
 11820                           ;drv_ultrasonicos.c: 238: break;
 11821  00320C  0012               	return	
 11822  00320E                     
 11823                           ;drv_ultrasonicos.c: 240: do { LATDbits.LATD0 = 1; } while(0);
 11824  00320E  8086               	bsf	3974,0,c	;volatile
 11825                           
 11826                           ;drv_ultrasonicos.c: 241: _delay((unsigned long)((10)*(32000000/4000000.0)));
 11827  003210  0E1A               	movlw	26
 11828  003212                     i1u889_27:
 11829  003212  2EE8               	decfsz	wreg,f,c
 11830  003214  D7FE               	bra	i1u889_27
 11831  003216  D000               	nop2	
 11832                           
 11833                           ;drv_ultrasonicos.c: 242: do { LATDbits.LATD0 = 0; } while(0);
 11834  003218  9086               	bcf	3974,0,c	;volatile
 11835                           
 11836                           ;drv_ultrasonicos.c: 243: break;
 11837  00321A  0012               	return	
 11838  00321C                     
 11839                           ;drv_ultrasonicos.c: 245: do { LATDbits.LATD2 = 1; } while(0);
 11840  00321C  8486               	bsf	3974,2,c	;volatile
 11841                           
 11842                           ;drv_ultrasonicos.c: 246: _delay((unsigned long)((10)*(32000000/4000000.0)));
 11843  00321E  0E1A               	movlw	26
 11844  003220                     i1u890_27:
 11845  003220  2EE8               	decfsz	wreg,f,c
 11846  003222  D7FE               	bra	i1u890_27
 11847  003224  D000               	nop2	
 11848                           
 11849                           ;drv_ultrasonicos.c: 247: do { LATDbits.LATD2 = 0; } while(0);
 11850  003226  9486               	bcf	3974,2,c	;volatile
 11851                           
 11852                           ;drv_ultrasonicos.c: 248: break;
 11853  003228  0012               	return	
 11854  00322A                     
 11855                           ;drv_ultrasonicos.c: 250: do { LATDbits.LATD3 = 1; } while(0);
 11856  00322A  8686               	bsf	3974,3,c	;volatile
 11857                           
 11858                           ;drv_ultrasonicos.c: 251: _delay((unsigned long)((10)*(32000000/4000000.0)));
 11859  00322C  0E1A               	movlw	26
 11860  00322E                     i1u891_27:
 11861  00322E  2EE8               	decfsz	wreg,f,c
 11862  003230  D7FE               	bra	i1u891_27
 11863  003232  D000               	nop2	
 11864                           
 11865                           ;drv_ultrasonicos.c: 252: do { LATDbits.LATD3 = 0; } while(0);
 11866  003234  9686               	bcf	3974,3,c	;volatile
 11867                           
 11868                           ;drv_ultrasonicos.c: 254: }
 11869                           
 11870                           ;drv_ultrasonicos.c: 253: break;
 11871  003236  0012               	return	
 11872  003238                     i1l1133:
 11873  003238  0100               	movlb	0	; () banked
 11874  00323A  5160               	movf	i1usonic_trigger@sensor& (0+255),w,b
 11875                           
 11876                           ; Switch size 1, requested type "space"
 11877                           ; Number of cases is 4, Range of values is 0 to 3
 11878                           ; switch strategies available:
 11879                           ; Name         Instructions Cycles
 11880                           ; simple_byte           13     7 (average)
 11881                           ;	Chosen strategy is simple_byte
 11882  00323C  0A00               	xorlw	0	; case 0
 11883  00323E  B4D8               	btfsc	status,2,c
 11884  003240  D7DF               	goto	i1l1134
 11885  003242  0A01               	xorlw	1	; case 1
 11886  003244  B4D8               	btfsc	status,2,c
 11887  003246  D7E3               	goto	i1l1140
 11888  003248  0A03               	xorlw	3	; case 2
 11889  00324A  B4D8               	btfsc	status,2,c
 11890  00324C  D7E7               	goto	i1l1145
 11891  00324E  0A01               	xorlw	1	; case 3
 11892  003250  A4D8               	btfss	status,2,c
 11893  003252  0012               	return	
 11894  003254  D7EA               	goto	i1l1150
 11895  003256                     __end_ofi1_usonic_trigger:
 11896                           	opt stack 0
 11897                           tosu	equ	0xFFF
 11898                           tosh	equ	0xFFE
 11899                           tosl	equ	0xFFD
 11900                           pclatu	equ	0xFFB
 11901                           pclath	equ	0xFFA
 11902                           tblptru	equ	0xFF8
 11903                           tblptrh	equ	0xFF7
 11904                           tblptrl	equ	0xFF6
 11905                           tablat	equ	0xFF5
 11906                           prodh	equ	0xFF4
 11907                           prodl	equ	0xFF3
 11908                           intcon	equ	0xFF2
 11909                           postinc0	equ	0xFEE
 11910                           fsr0h	equ	0xFEA
 11911                           fsr0l	equ	0xFE9
 11912                           wreg	equ	0xFE8
 11913                           fsr1h	equ	0xFE2
 11914                           fsr1l	equ	0xFE1
 11915                           bsr	equ	0xFE0
 11916                           indf2	equ	0xFDF
 11917                           postinc2	equ	0xFDE
 11918                           postdec2	equ	0xFDD
 11919                           fsr2h	equ	0xFDA
 11920                           fsr2l	equ	0xFD9
 11921                           status	equ	0xFD8
 11922                           
 11923 ;; *************** function i1_TMR1_StartSinglePulseAcquisition *****************
 11924 ;; Defined at:
 11925 ;;		line 156 in file "mcc_generated_files/tmr1.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;		None
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;		None
 11930 ;; Return value:  Size  Location     Type
 11931 ;;                  1    wreg      void 
 11932 ;; Registers used:
 11933 ;;		None
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11943 ;;Total ram usage:        0 bytes
 11944 ;; Hardware stack levels used:    1
 11945 ;; Hardware stack levels required when called:   10
 11946 ;; This function calls:
 11947 ;;		Nothing
 11948 ;; This function is called by:
 11949 ;;		_tomaRealizadaT1G
 11950 ;; This function uses a non-reentrant model
 11951 ;;
 11952                           
 11953                           	psect	text85
 11954  003EB2                     __ptext85:
 11955                           	opt stack 0
 11956  003EB2                     i1_TMR1_StartSinglePulseAcquisition:
 11957                           	opt stack 9
 11958                           
 11959                           ;tmr1.c: 158: T1GCONbits.T1GGO = 1;
 11960                           
 11961                           ;incstack = 0
 11962  003EB2  86D0               	bsf	4048,3,c	;volatile
 11963  003EB4  0012               	return		;funcret
 11964  003EB6                     __end_ofi1_TMR1_StartSinglePulseAcquisition:
 11965                           	opt stack 0
 11966                           tosu	equ	0xFFF
 11967                           tosh	equ	0xFFE
 11968                           tosl	equ	0xFFD
 11969                           pclatu	equ	0xFFB
 11970                           pclath	equ	0xFFA
 11971                           tblptru	equ	0xFF8
 11972                           tblptrh	equ	0xFF7
 11973                           tblptrl	equ	0xFF6
 11974                           tablat	equ	0xFF5
 11975                           prodh	equ	0xFF4
 11976                           prodl	equ	0xFF3
 11977                           intcon	equ	0xFF2
 11978                           postinc0	equ	0xFEE
 11979                           fsr0h	equ	0xFEA
 11980                           fsr0l	equ	0xFE9
 11981                           wreg	equ	0xFE8
 11982                           fsr1h	equ	0xFE2
 11983                           fsr1l	equ	0xFE1
 11984                           bsr	equ	0xFE0
 11985                           indf2	equ	0xFDF
 11986                           postinc2	equ	0xFDE
 11987                           postdec2	equ	0xFDD
 11988                           fsr2h	equ	0xFDA
 11989                           fsr2l	equ	0xFD9
 11990                           status	equ	0xFD8
 11991                           
 11992 ;; *************** function _computarMedicion *****************
 11993 ;; Defined at:
 11994 ;;		line 150 in file "drv_ultrasonicos.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  sensor          1    wreg     unsigned char 
 11997 ;;  anchoPulso      2   41[BANK0 ] unsigned int 
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;  sensor          1   43[BANK0 ] unsigned char 
 12000 ;;  distancia       2   50[BANK0 ] unsigned int 
 12001 ;;  distancia       2   48[BANK0 ] unsigned int 
 12002 ;;  distancia       2   46[BANK0 ] unsigned int 
 12003 ;;  distancia       2   44[BANK0 ] unsigned int 
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      void 
 12006 ;; Registers used:
 12007 ;;		wreg, status,2, status,0, cstack
 12008 ;; Tracked objects:
 12009 ;;		On entry : 0/0
 12010 ;;		On exit  : 0/0
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12014 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12017 ;;Total ram usage:       11 bytes
 12018 ;; Hardware stack levels used:    1
 12019 ;; Hardware stack levels required when called:   12
 12020 ;; This function calls:
 12021 ;;		___lwdiv
 12022 ;;		i1___ftmul
 12023 ;;		i1___fttol
 12024 ;;		i1___lwtoft
 12025 ;; This function is called by:
 12026 ;;		_tomaRealizadaT1G
 12027 ;;		_tomaRealizadaT3G
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text86
 12032  0013E2                     __ptext86:
 12033                           	opt stack 0
 12034  0013E2                     _computarMedicion:
 12035                           	opt stack 7
 12036                           
 12037                           ;incstack = 0
 12038                           ;computarMedicion@sensor stored from wreg
 12039  0013E2  0100               	movlb	0	; () banked
 12040  0013E4  6F8B               	movwf	computarMedicion@sensor& (0+255),b
 12041                           
 12042                           ;drv_ultrasonicos.c: 152: switch (sensor)
 12043  0013E6  D111               	goto	i1l1110
 12044  0013E8                     
 12045                           ;drv_ultrasonicos.c: 155: usonic.numMuestra.front++;
 12046  0013E8  0100               	movlb	0	; () banked
 12047  0013EA  2BB1               	incf	(_usonic+6)& (0+255),f,b	;volatile
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;drv_ultrasonicos.c: 156: usonic.promedio.front += anchoPulso;
 12051  0013EC  5189               	movf	computarMedicion@anchoPulso& (0+255),w,b
 12052  0013EE  27B7               	addwf	(_usonic+12)& (0+255),f,b	;volatile
 12053  0013F0  518A               	movf	(computarMedicion@anchoPulso+1)& (0+255),w,b
 12054  0013F2  23B8               	addwfc	(_usonic+13)& (0+255),f,b	;volatile
 12055                           
 12056                           ; BSR set to: 0
 12057                           ;drv_ultrasonicos.c: 157: if (usonic.numMuestra.front == 3 - 1)
 12058  0013F4  0E02               	movlw	2
 12059  0013F6  19B1               	xorwf	(_usonic+6)& (0+255),w,b	;volatile
 12060  0013F8  A4D8               	btfss	status,2,c
 12061  0013FA  0012               	return	
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;drv_ultrasonicos.c: 158: {
 12065                           ;drv_ultrasonicos.c: 159: usonic.numMuestra.front = 0;
 12066  0013FC  0E00               	movlw	0
 12067  0013FE  6FB1               	movwf	(_usonic+6)& (0+255),b	;volatile
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;drv_ultrasonicos.c: 160: uint16_t distancia = (usonic.promedio.front / 3) * 0.017 * 1.2
      +                          7;
 12071  001400  0EDE               	movlw	222
 12072  001402  6F6E               	movwf	i1___ftmul@f2& (0+255),b
 12073  001404  0EB0               	movlw	176
 12074  001406  6F6F               	movwf	(i1___ftmul@f2+1)& (0+255),b
 12075  001408  0E3C               	movlw	60
 12076  00140A  6F70               	movwf	(i1___ftmul@f2+2)& (0+255),b
 12077  00140C  0E00               	movlw	0
 12078  00140E  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12079  001410  0E03               	movlw	3
 12080  001412  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12081  001414  C0B7  F060         	movff	_usonic+12,___lwdiv@dividend	;volatile
 12082  001418  C0B8  F061         	movff	_usonic+13,___lwdiv@dividend+1	;volatile
 12083  00141C  EC83  F019         	call	___lwdiv	;wreg free
 12084  001420  C060  F068         	movff	?___lwdiv,i1___lwtoft@c
 12085  001424  C061  F069         	movff	?___lwdiv+1,i1___lwtoft@c+1
 12086  001428  EC2F  F01D         	call	i1___lwtoft	;wreg free
 12087  00142C  C068  F06B         	movff	?i1___lwtoft,i1___ftmul@f1
 12088  001430  C069  F06C         	movff	?i1___lwtoft+1,i1___ftmul@f1+1
 12089  001434  C06A  F06D         	movff	?i1___lwtoft+2,i1___ftmul@f1+2
 12090  001438  EC50  F010         	call	i1___ftmul	;wreg free
 12091  00143C  C06B  F07A         	movff	?i1___ftmul,i1___fttol@f1
 12092  001440  C06C  F07B         	movff	?i1___ftmul+1,i1___fttol@f1+1
 12093  001444  C06D  F07C         	movff	?i1___ftmul+2,i1___fttol@f1+2
 12094  001448  EC59  F00F         	call	i1___fttol	;wreg free
 12095  00144C  C07A  F08C         	movff	?i1___fttol,computarMedicion@distancia
 12096  001450  C07B  F08D         	movff	?i1___fttol+1,computarMedicion@distancia+1
 12097                           
 12098                           ;drv_ultrasonicos.c: 161: if (distancia > (255))
 12099  001454  0100               	movlb	0	; () banked
 12100  001456  058D               	decf	(computarMedicion@distancia+1)& (0+255),w,b
 12101  001458  A0D8               	btfss	status,0,c
 12102  00145A  D003               	goto	i1l1113
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;drv_ultrasonicos.c: 162: distancia = (255);
 12106  00145C  0E00               	movlw	0
 12107  00145E  6F8D               	movwf	(computarMedicion@distancia+1)& (0+255),b
 12108  001460  698C               	setf	computarMedicion@distancia& (0+255),b
 12109  001462                     i1l1113:
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;drv_ultrasonicos.c: 163: usonic.distancia.front = distancia;
 12113                           
 12114                           ; BSR set to: 0
 12115  001462  C08C  F0AD         	movff	computarMedicion@distancia,_usonic+2	;volatile
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;drv_ultrasonicos.c: 164: interrupt_flags.nuevaMuestraFront = 1;
 12119  001466  81C3               	bsf	(_interrupt_flags+1)& (0+255),0,b	;volatile
 12120                           
 12121                           ;drv_ultrasonicos.c: 165: usonic.promedio.front = 0;
 12122  001468  0E00               	movlw	0
 12123  00146A  6FB8               	movwf	(_usonic+13)& (0+255),b	;volatile
 12124  00146C  0E00               	movlw	0
 12125  00146E  6FB7               	movwf	(_usonic+12)& (0+255),b	;volatile
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;drv_ultrasonicos.c: 166: }
 12129                           ;drv_ultrasonicos.c: 167: break;
 12130  001470  0012               	return	
 12131  001472                     
 12132                           ; BSR set to: 0
 12133                           ;drv_ultrasonicos.c: 169: usonic.numMuestra.back++;
 12134                           
 12135                           ; BSR set to: 0
 12136  001472  2BB2               	incf	(_usonic+7)& (0+255),f,b	;volatile
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;drv_ultrasonicos.c: 170: usonic.promedio.back += anchoPulso;
 12140  001474  5189               	movf	computarMedicion@anchoPulso& (0+255),w,b
 12141  001476  27B9               	addwf	(_usonic+14)& (0+255),f,b	;volatile
 12142  001478  518A               	movf	(computarMedicion@anchoPulso+1)& (0+255),w,b
 12143  00147A  23BA               	addwfc	(_usonic+15)& (0+255),f,b	;volatile
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;drv_ultrasonicos.c: 172: if (usonic.numMuestra.back == 3 - 1)
 12147  00147C  0E02               	movlw	2
 12148  00147E  19B2               	xorwf	(_usonic+7)& (0+255),w,b	;volatile
 12149  001480  A4D8               	btfss	status,2,c
 12150  001482  0012               	return	
 12151                           
 12152                           ; BSR set to: 0
 12153                           ;drv_ultrasonicos.c: 173: {
 12154                           ;drv_ultrasonicos.c: 174: usonic.numMuestra.back = 0;
 12155  001484  0E00               	movlw	0
 12156  001486  6FB2               	movwf	(_usonic+7)& (0+255),b	;volatile
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;drv_ultrasonicos.c: 175: uint16_t distancia = (usonic.promedio.back / 3) * 0.017 * 1.27
      +                          ;
 12160  001488  0EDE               	movlw	222
 12161  00148A  6F6E               	movwf	i1___ftmul@f2& (0+255),b
 12162  00148C  0EB0               	movlw	176
 12163  00148E  6F6F               	movwf	(i1___ftmul@f2+1)& (0+255),b
 12164  001490  0E3C               	movlw	60
 12165  001492  6F70               	movwf	(i1___ftmul@f2+2)& (0+255),b
 12166  001494  0E00               	movlw	0
 12167  001496  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12168  001498  0E03               	movlw	3
 12169  00149A  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12170  00149C  C0B9  F060         	movff	_usonic+14,___lwdiv@dividend	;volatile
 12171  0014A0  C0BA  F061         	movff	_usonic+15,___lwdiv@dividend+1	;volatile
 12172  0014A4  EC83  F019         	call	___lwdiv	;wreg free
 12173  0014A8  C060  F068         	movff	?___lwdiv,i1___lwtoft@c
 12174  0014AC  C061  F069         	movff	?___lwdiv+1,i1___lwtoft@c+1
 12175  0014B0  EC2F  F01D         	call	i1___lwtoft	;wreg free
 12176  0014B4  C068  F06B         	movff	?i1___lwtoft,i1___ftmul@f1
 12177  0014B8  C069  F06C         	movff	?i1___lwtoft+1,i1___ftmul@f1+1
 12178  0014BC  C06A  F06D         	movff	?i1___lwtoft+2,i1___ftmul@f1+2
 12179  0014C0  EC50  F010         	call	i1___ftmul	;wreg free
 12180  0014C4  C06B  F07A         	movff	?i1___ftmul,i1___fttol@f1
 12181  0014C8  C06C  F07B         	movff	?i1___ftmul+1,i1___fttol@f1+1
 12182  0014CC  C06D  F07C         	movff	?i1___ftmul+2,i1___fttol@f1+2
 12183  0014D0  EC59  F00F         	call	i1___fttol	;wreg free
 12184  0014D4  C07A  F08E         	movff	?i1___fttol,computarMedicion@distancia_2493
 12185  0014D8  C07B  F08F         	movff	?i1___fttol+1,computarMedicion@distancia_2493+1
 12186                           
 12187                           ;drv_ultrasonicos.c: 176: if (distancia > (255))
 12188  0014DC  0100               	movlb	0	; () banked
 12189  0014DE  058F               	decf	(computarMedicion@distancia_2493+1)& (0+255),w,b
 12190  0014E0  A0D8               	btfss	status,0,c
 12191  0014E2  D003               	goto	i1l1117
 12192                           
 12193                           ; BSR set to: 0
 12194                           ;drv_ultrasonicos.c: 177: distancia = (255);
 12195  0014E4  0E00               	movlw	0
 12196  0014E6  6F8F               	movwf	(computarMedicion@distancia_2493+1)& (0+255),b
 12197  0014E8  698E               	setf	computarMedicion@distancia_2493& (0+255),b
 12198  0014EA                     i1l1117:
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;drv_ultrasonicos.c: 178: usonic.distancia.back = distancia;
 12202                           
 12203                           ; BSR set to: 0
 12204  0014EA  C08E  F0AE         	movff	computarMedicion@distancia_2493,_usonic+3	;volatile
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;drv_ultrasonicos.c: 179: interrupt_flags.nuevaMuestraBack = 1;
 12208  0014EE  83C3               	bsf	(_interrupt_flags+1)& (0+255),1,b	;volatile
 12209                           
 12210                           ;drv_ultrasonicos.c: 180: usonic.promedio.back = 0;
 12211  0014F0  0E00               	movlw	0
 12212  0014F2  6FBA               	movwf	(_usonic+15)& (0+255),b	;volatile
 12213  0014F4  0E00               	movlw	0
 12214  0014F6  6FB9               	movwf	(_usonic+14)& (0+255),b	;volatile
 12215                           
 12216                           ; BSR set to: 0
 12217                           ;drv_ultrasonicos.c: 181: }
 12218                           ;drv_ultrasonicos.c: 182: break;
 12219  0014F8  0012               	return	
 12220  0014FA                     
 12221                           ; BSR set to: 0
 12222                           ;drv_ultrasonicos.c: 184: usonic.numMuestra.left++;
 12223                           
 12224                           ; BSR set to: 0
 12225  0014FA  2BAF               	incf	(_usonic+4)& (0+255),f,b	;volatile
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;drv_ultrasonicos.c: 185: usonic.promedio.left += anchoPulso;
 12229  0014FC  5189               	movf	computarMedicion@anchoPulso& (0+255),w,b
 12230  0014FE  27B3               	addwf	(_usonic+8)& (0+255),f,b	;volatile
 12231  001500  518A               	movf	(computarMedicion@anchoPulso+1)& (0+255),w,b
 12232  001502  23B4               	addwfc	(_usonic+9)& (0+255),f,b	;volatile
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;drv_ultrasonicos.c: 187: if (usonic.numMuestra.left == 3 - 1)
 12236  001504  0E02               	movlw	2
 12237  001506  19AF               	xorwf	(_usonic+4)& (0+255),w,b	;volatile
 12238  001508  A4D8               	btfss	status,2,c
 12239  00150A  0012               	return	
 12240                           
 12241                           ; BSR set to: 0
 12242                           ;drv_ultrasonicos.c: 188: {
 12243                           ;drv_ultrasonicos.c: 189: usonic.numMuestra.left = 0;
 12244  00150C  0E00               	movlw	0
 12245  00150E  6FAF               	movwf	(_usonic+4)& (0+255),b	;volatile
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;drv_ultrasonicos.c: 190: uint16_t distancia = (usonic.promedio.left / 3) * 0.017 * 1.27
      +                          ;
 12249  001510  0EDE               	movlw	222
 12250  001512  6F6E               	movwf	i1___ftmul@f2& (0+255),b
 12251  001514  0EB0               	movlw	176
 12252  001516  6F6F               	movwf	(i1___ftmul@f2+1)& (0+255),b
 12253  001518  0E3C               	movlw	60
 12254  00151A  6F70               	movwf	(i1___ftmul@f2+2)& (0+255),b
 12255  00151C  0E00               	movlw	0
 12256  00151E  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12257  001520  0E03               	movlw	3
 12258  001522  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12259  001524  C0B3  F060         	movff	_usonic+8,___lwdiv@dividend	;volatile
 12260  001528  C0B4  F061         	movff	_usonic+9,___lwdiv@dividend+1	;volatile
 12261  00152C  EC83  F019         	call	___lwdiv	;wreg free
 12262  001530  C060  F068         	movff	?___lwdiv,i1___lwtoft@c
 12263  001534  C061  F069         	movff	?___lwdiv+1,i1___lwtoft@c+1
 12264  001538  EC2F  F01D         	call	i1___lwtoft	;wreg free
 12265  00153C  C068  F06B         	movff	?i1___lwtoft,i1___ftmul@f1
 12266  001540  C069  F06C         	movff	?i1___lwtoft+1,i1___ftmul@f1+1
 12267  001544  C06A  F06D         	movff	?i1___lwtoft+2,i1___ftmul@f1+2
 12268  001548  EC50  F010         	call	i1___ftmul	;wreg free
 12269  00154C  C06B  F07A         	movff	?i1___ftmul,i1___fttol@f1
 12270  001550  C06C  F07B         	movff	?i1___ftmul+1,i1___fttol@f1+1
 12271  001554  C06D  F07C         	movff	?i1___ftmul+2,i1___fttol@f1+2
 12272  001558  EC59  F00F         	call	i1___fttol	;wreg free
 12273  00155C  C07A  F090         	movff	?i1___fttol,computarMedicion@distancia_2494
 12274  001560  C07B  F091         	movff	?i1___fttol+1,computarMedicion@distancia_2494+1
 12275                           
 12276                           ;drv_ultrasonicos.c: 191: if (distancia > (255))
 12277  001564  0100               	movlb	0	; () banked
 12278  001566  0591               	decf	(computarMedicion@distancia_2494+1)& (0+255),w,b
 12279  001568  A0D8               	btfss	status,0,c
 12280  00156A  D003               	goto	i1l1120
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;drv_ultrasonicos.c: 192: distancia = (255);
 12284  00156C  0E00               	movlw	0
 12285  00156E  6F91               	movwf	(computarMedicion@distancia_2494+1)& (0+255),b
 12286  001570  6990               	setf	computarMedicion@distancia_2494& (0+255),b
 12287  001572                     i1l1120:
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;drv_ultrasonicos.c: 193: usonic.distancia.left = distancia;
 12291                           
 12292                           ; BSR set to: 0
 12293  001572  C090  F0AB         	movff	computarMedicion@distancia_2494,_usonic	;volatile
 12294                           
 12295                           ; BSR set to: 0
 12296                           ;drv_ultrasonicos.c: 194: interrupt_flags.nuevaMuestraLeft = 1;
 12297  001576  85C3               	bsf	(_interrupt_flags+1)& (0+255),2,b	;volatile
 12298                           
 12299                           ;drv_ultrasonicos.c: 195: usonic.promedio.left = 0;
 12300  001578  0E00               	movlw	0
 12301  00157A  6FB4               	movwf	(_usonic+9)& (0+255),b	;volatile
 12302  00157C  0E00               	movlw	0
 12303  00157E  6FB3               	movwf	(_usonic+8)& (0+255),b	;volatile
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;drv_ultrasonicos.c: 196: }
 12307                           ;drv_ultrasonicos.c: 197: break;
 12308  001580  0012               	return	
 12309  001582                     
 12310                           ; BSR set to: 0
 12311                           ;drv_ultrasonicos.c: 199: usonic.numMuestra.right++;
 12312                           
 12313                           ; BSR set to: 0
 12314  001582  2BB0               	incf	(_usonic+5)& (0+255),f,b	;volatile
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;drv_ultrasonicos.c: 200: usonic.promedio.right += anchoPulso;
 12318  001584  5189               	movf	computarMedicion@anchoPulso& (0+255),w,b
 12319  001586  27B5               	addwf	(_usonic+10)& (0+255),f,b	;volatile
 12320  001588  518A               	movf	(computarMedicion@anchoPulso+1)& (0+255),w,b
 12321  00158A  23B6               	addwfc	(_usonic+11)& (0+255),f,b	;volatile
 12322                           
 12323                           ; BSR set to: 0
 12324                           ;drv_ultrasonicos.c: 202: if (usonic.numMuestra.right == 3 - 1)
 12325  00158C  0E02               	movlw	2
 12326  00158E  19B0               	xorwf	(_usonic+5)& (0+255),w,b	;volatile
 12327  001590  A4D8               	btfss	status,2,c
 12328  001592  0012               	return	
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;drv_ultrasonicos.c: 203: {
 12332                           ;drv_ultrasonicos.c: 204: usonic.numMuestra.right = 0;
 12333  001594  0E00               	movlw	0
 12334  001596  6FB0               	movwf	(_usonic+5)& (0+255),b	;volatile
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;drv_ultrasonicos.c: 205: uint16_t distancia = (usonic.promedio.right / 3) * 0.017 * 1.2
      +                          7;
 12338  001598  0EDE               	movlw	222
 12339  00159A  6F6E               	movwf	i1___ftmul@f2& (0+255),b
 12340  00159C  0EB0               	movlw	176
 12341  00159E  6F6F               	movwf	(i1___ftmul@f2+1)& (0+255),b
 12342  0015A0  0E3C               	movlw	60
 12343  0015A2  6F70               	movwf	(i1___ftmul@f2+2)& (0+255),b
 12344  0015A4  0E00               	movlw	0
 12345  0015A6  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12346  0015A8  0E03               	movlw	3
 12347  0015AA  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12348  0015AC  C0B5  F060         	movff	_usonic+10,___lwdiv@dividend	;volatile
 12349  0015B0  C0B6  F061         	movff	_usonic+11,___lwdiv@dividend+1	;volatile
 12350  0015B4  EC83  F019         	call	___lwdiv	;wreg free
 12351  0015B8  C060  F068         	movff	?___lwdiv,i1___lwtoft@c
 12352  0015BC  C061  F069         	movff	?___lwdiv+1,i1___lwtoft@c+1
 12353  0015C0  EC2F  F01D         	call	i1___lwtoft	;wreg free
 12354  0015C4  C068  F06B         	movff	?i1___lwtoft,i1___ftmul@f1
 12355  0015C8  C069  F06C         	movff	?i1___lwtoft+1,i1___ftmul@f1+1
 12356  0015CC  C06A  F06D         	movff	?i1___lwtoft+2,i1___ftmul@f1+2
 12357  0015D0  EC50  F010         	call	i1___ftmul	;wreg free
 12358  0015D4  C06B  F07A         	movff	?i1___ftmul,i1___fttol@f1
 12359  0015D8  C06C  F07B         	movff	?i1___ftmul+1,i1___fttol@f1+1
 12360  0015DC  C06D  F07C         	movff	?i1___ftmul+2,i1___fttol@f1+2
 12361  0015E0  EC59  F00F         	call	i1___fttol	;wreg free
 12362  0015E4  C07A  F092         	movff	?i1___fttol,computarMedicion@distancia_2495
 12363  0015E8  C07B  F093         	movff	?i1___fttol+1,computarMedicion@distancia_2495+1
 12364                           
 12365                           ;drv_ultrasonicos.c: 206: if (distancia > (255))
 12366  0015EC  0100               	movlb	0	; () banked
 12367  0015EE  0593               	decf	(computarMedicion@distancia_2495+1)& (0+255),w,b
 12368  0015F0  A0D8               	btfss	status,0,c
 12369  0015F2  D003               	goto	i1l1123
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;drv_ultrasonicos.c: 207: distancia = (255);
 12373  0015F4  0E00               	movlw	0
 12374  0015F6  6F93               	movwf	(computarMedicion@distancia_2495+1)& (0+255),b
 12375  0015F8  6992               	setf	computarMedicion@distancia_2495& (0+255),b
 12376  0015FA                     i1l1123:
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;drv_ultrasonicos.c: 208: usonic.distancia.right = distancia;
 12380                           
 12381                           ; BSR set to: 0
 12382  0015FA  C092  F0AC         	movff	computarMedicion@distancia_2495,_usonic+1	;volatile
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;drv_ultrasonicos.c: 209: interrupt_flags.nuevaMuestraRight = 1;
 12386  0015FE  87C3               	bsf	(_interrupt_flags+1)& (0+255),3,b	;volatile
 12387                           
 12388                           ;drv_ultrasonicos.c: 210: usonic.promedio.right = 0;
 12389  001600  0E00               	movlw	0
 12390  001602  6FB6               	movwf	(_usonic+11)& (0+255),b	;volatile
 12391  001604  0E00               	movlw	0
 12392  001606  6FB5               	movwf	(_usonic+10)& (0+255),b	;volatile
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;drv_ultrasonicos.c: 213: }
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;drv_ultrasonicos.c: 211: }
 12399                           ;drv_ultrasonicos.c: 212: break;
 12400  001608  0012               	return	
 12401  00160A                     i1l1110:
 12402                           
 12403                           ; BSR set to: 0
 12404  00160A  0100               	movlb	0	; () banked
 12405  00160C  518B               	movf	computarMedicion@sensor& (0+255),w,b
 12406                           
 12407                           ; Switch size 1, requested type "space"
 12408                           ; Number of cases is 4, Range of values is 0 to 3
 12409                           ; switch strategies available:
 12410                           ; Name         Instructions Cycles
 12411                           ; simple_byte           13     7 (average)
 12412                           ;	Chosen strategy is simple_byte
 12413  00160E  0A00               	xorlw	0	; case 0
 12414  001610  B4D8               	btfsc	status,2,c
 12415  001612  D6EA               	goto	i1l1111
 12416  001614  0A01               	xorlw	1	; case 1
 12417  001616  B4D8               	btfsc	status,2,c
 12418  001618  D72C               	goto	i1l1115
 12419  00161A  0A03               	xorlw	3	; case 2
 12420  00161C  B4D8               	btfsc	status,2,c
 12421  00161E  D76D               	goto	i1l1118
 12422  001620  0A01               	xorlw	1	; case 3
 12423  001622  A4D8               	btfss	status,2,c
 12424  001624  0012               	return	
 12425  001626  D7AD               	goto	i1l1121
 12426  001628                     __end_of_computarMedicion:
 12427                           	opt stack 0
 12428                           tosu	equ	0xFFF
 12429                           tosh	equ	0xFFE
 12430                           tosl	equ	0xFFD
 12431                           pclatu	equ	0xFFB
 12432                           pclath	equ	0xFFA
 12433                           tblptru	equ	0xFF8
 12434                           tblptrh	equ	0xFF7
 12435                           tblptrl	equ	0xFF6
 12436                           tablat	equ	0xFF5
 12437                           prodh	equ	0xFF4
 12438                           prodl	equ	0xFF3
 12439                           intcon	equ	0xFF2
 12440                           postinc0	equ	0xFEE
 12441                           fsr0h	equ	0xFEA
 12442                           fsr0l	equ	0xFE9
 12443                           wreg	equ	0xFE8
 12444                           fsr1h	equ	0xFE2
 12445                           fsr1l	equ	0xFE1
 12446                           bsr	equ	0xFE0
 12447                           indf2	equ	0xFDF
 12448                           postinc2	equ	0xFDE
 12449                           postdec2	equ	0xFDD
 12450                           fsr2h	equ	0xFDA
 12451                           fsr2l	equ	0xFD9
 12452                           status	equ	0xFD8
 12453                           
 12454 ;; *************** function i1___lwtoft *****************
 12455 ;; Defined at:
 12456 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;  c               2    8[BANK0 ] unsigned int 
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;		None
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  3    8[BANK0 ] float 
 12463 ;; Registers used:
 12464 ;;		wreg, status,2, status,0, cstack
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12470 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12473 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12474 ;;Total ram usage:        3 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; Hardware stack levels required when called:   11
 12477 ;; This function calls:
 12478 ;;		i1___ftpack
 12479 ;; This function is called by:
 12480 ;;		_computarMedicion
 12481 ;; This function uses a non-reentrant model
 12482 ;;
 12483                           
 12484                           	psect	text87
 12485  003A5E                     __ptext87:
 12486                           	opt stack 0
 12487  003A5E                     i1___lwtoft:
 12488                           	opt stack 7
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;incstack = 0
 12492  003A5E  C068  F060         	movff	i1___lwtoft@c,i1___ftpack@arg
 12493  003A62  C069  F061         	movff	i1___lwtoft@c+1,i1___ftpack@arg+1
 12494  003A66  0100               	movlb	0	; () banked
 12495  003A68  6B62               	clrf	(i1___ftpack@arg+2)& (0+255),b
 12496  003A6A  0E8E               	movlw	142
 12497  003A6C  6F63               	movwf	i1___ftpack@exp& (0+255),b
 12498  003A6E  0E00               	movlw	0
 12499  003A70  6F64               	movwf	i1___ftpack@sign& (0+255),b
 12500  003A72  EC6C  F015         	call	i1___ftpack	;wreg free
 12501  003A76  C060  F068         	movff	?i1___ftpack,?i1___lwtoft
 12502  003A7A  C061  F069         	movff	?i1___ftpack+1,?i1___lwtoft+1
 12503  003A7E  C062  F06A         	movff	?i1___ftpack+2,?i1___lwtoft+2
 12504  003A82  0012               	return	
 12505  003A84                     __end_ofi1___lwtoft:
 12506                           	opt stack 0
 12507                           tosu	equ	0xFFF
 12508                           tosh	equ	0xFFE
 12509                           tosl	equ	0xFFD
 12510                           pclatu	equ	0xFFB
 12511                           pclath	equ	0xFFA
 12512                           tblptru	equ	0xFF8
 12513                           tblptrh	equ	0xFF7
 12514                           tblptrl	equ	0xFF6
 12515                           tablat	equ	0xFF5
 12516                           prodh	equ	0xFF4
 12517                           prodl	equ	0xFF3
 12518                           intcon	equ	0xFF2
 12519                           postinc0	equ	0xFEE
 12520                           fsr0h	equ	0xFEA
 12521                           fsr0l	equ	0xFE9
 12522                           wreg	equ	0xFE8
 12523                           fsr1h	equ	0xFE2
 12524                           fsr1l	equ	0xFE1
 12525                           bsr	equ	0xFE0
 12526                           indf2	equ	0xFDF
 12527                           postinc2	equ	0xFDE
 12528                           postdec2	equ	0xFDD
 12529                           fsr2h	equ	0xFDA
 12530                           fsr2l	equ	0xFD9
 12531                           status	equ	0xFD8
 12532                           
 12533 ;; *************** function i1___fttol *****************
 12534 ;; Defined at:
 12535 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;  f1              3   26[BANK0 ] float 
 12538 ;; Auto vars:     Size  Location     Type
 12539 ;;  __fttol         4   36[BANK0 ] unsigned long 
 12540 ;;  __fttol         1   40[BANK0 ] unsigned char 
 12541 ;;  __fttol         1   35[BANK0 ] unsigned char 
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  4   26[BANK0 ] long 
 12544 ;; Registers used:
 12545 ;;		wreg, status,2, status,0
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12551 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12552 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12553 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12554 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12555 ;;Total ram usage:       15 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:   10
 12558 ;; This function calls:
 12559 ;;		Nothing
 12560 ;; This function is called by:
 12561 ;;		_computarMedicion
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text88
 12566  001EB2                     __ptext88:
 12567                           	opt stack 0
 12568  001EB2                     i1___fttol:
 12569                           	opt stack 8
 12570                           
 12571                           ;incstack = 0
 12572  001EB2  C07C  F07E         	movff	i1___fttol@f1+2,??i1___fttol
 12573  001EB6  0100               	movlb	0	; () banked
 12574  001EB8  6B7F               	clrf	(??i1___fttol+1)& (0+255),b
 12575  001EBA  6B80               	clrf	(??i1___fttol+2)& (0+255),b
 12576  001EBC  357B               	rlcf	(i1___fttol@f1+1)& (0+255),w,b
 12577  001EBE  377E               	rlcf	??i1___fttol& (0+255),f,b
 12578  001EC0  E301               	bnc	u391_21
 12579  001EC2  817F               	bsf	(??i1___fttol+1)& (0+255),0,b
 12580  001EC4                     u391_21:
 12581  001EC4  517E               	movf	??i1___fttol& (0+255),w,b
 12582  001EC6  6F88               	movwf	i1___fttol@exp1& (0+255),b
 12583  001EC8  5188               	movf	i1___fttol@exp1& (0+255),w,b
 12584  001ECA  A4D8               	btfss	status,2,c
 12585  001ECC  D009               	goto	i1l1871
 12586                           
 12587                           ; BSR set to: 0
 12588  001ECE  0E00               	movlw	0
 12589  001ED0  6F7A               	movwf	?i1___fttol& (0+255),b
 12590  001ED2  0E00               	movlw	0
 12591  001ED4  6F7B               	movwf	(?i1___fttol+1)& (0+255),b
 12592  001ED6  0E00               	movlw	0
 12593  001ED8  6F7C               	movwf	(?i1___fttol+2)& (0+255),b
 12594  001EDA  0E00               	movlw	0
 12595  001EDC  6F7D               	movwf	(?i1___fttol+3)& (0+255),b
 12596                           
 12597                           ; BSR set to: 0
 12598  001EDE  0012               	return	
 12599  001EE0                     i1l1871:
 12600                           
 12601                           ; BSR set to: 0
 12602                           
 12603                           ; BSR set to: 0
 12604  001EE0  0E17               	movlw	23
 12605  001EE2  6F7E               	movwf	??i1___fttol& (0+255),b
 12606  001EE4  C07A  F07F         	movff	i1___fttol@f1,??i1___fttol+1
 12607  001EE8  C07B  F080         	movff	i1___fttol@f1+1,??i1___fttol+2
 12608  001EEC  C07C  F081         	movff	i1___fttol@f1+2,??i1___fttol+3
 12609  001EF0  297E               	incf	??i1___fttol& (0+255),w,b
 12610  001EF2  6F82               	movwf	(??i1___fttol+4)& (0+255),b
 12611  001EF4  D004               	goto	i1u393_20
 12612  001EF6                     i1u393_25:
 12613  001EF6  90D8               	bcf	status,0,c
 12614  001EF8  3381               	rrcf	(??i1___fttol+3)& (0+255),f,b
 12615  001EFA  3380               	rrcf	(??i1___fttol+2)& (0+255),f,b
 12616  001EFC  337F               	rrcf	(??i1___fttol+1)& (0+255),f,b
 12617  001EFE                     i1u393_20:
 12618  001EFE  2F82               	decfsz	(??i1___fttol+4)& (0+255),f,b
 12619  001F00  D7FA               	goto	i1u393_25
 12620  001F02  0100               	movlb	0	; () banked
 12621  001F04  517F               	movf	(??i1___fttol+1)& (0+255),w,b
 12622  001F06  6F83               	movwf	i1___fttol@sign1& (0+255),b
 12623                           
 12624                           ; BSR set to: 0
 12625  001F08  8F7B               	bsf	(i1___fttol@f1+1)& (0+255),7,b
 12626                           
 12627                           ; BSR set to: 0
 12628  001F0A  0EFF               	movlw	255
 12629  001F0C  177A               	andwf	i1___fttol@f1& (0+255),f,b
 12630  001F0E  0EFF               	movlw	255
 12631  001F10  177B               	andwf	(i1___fttol@f1+1)& (0+255),f,b
 12632  001F12  0E00               	movlw	0
 12633  001F14  177C               	andwf	(i1___fttol@f1+2)& (0+255),f,b
 12634                           
 12635                           ; BSR set to: 0
 12636  001F16  517A               	movf	i1___fttol@f1& (0+255),w,b
 12637  001F18  6F84               	movwf	i1___fttol@lval& (0+255),b
 12638  001F1A  517B               	movf	(i1___fttol@f1+1)& (0+255),w,b
 12639  001F1C  6F85               	movwf	(i1___fttol@lval+1)& (0+255),b
 12640  001F1E  517C               	movf	(i1___fttol@f1+2)& (0+255),w,b
 12641  001F20  6F86               	movwf	(i1___fttol@lval+2)& (0+255),b
 12642  001F22  6B87               	clrf	(i1___fttol@lval+3)& (0+255),b
 12643                           
 12644                           ; BSR set to: 0
 12645  001F24  0E8E               	movlw	142
 12646  001F26  5F88               	subwf	i1___fttol@exp1& (0+255),f,b
 12647                           
 12648                           ; BSR set to: 0
 12649  001F28  AF88               	btfss	i1___fttol@exp1& (0+255),7,b
 12650  001F2A  D016               	goto	i1l1873
 12651                           
 12652                           ; BSR set to: 0
 12653  001F2C  5188               	movf	i1___fttol@exp1& (0+255),w,b
 12654  001F2E  0A80               	xorlw	128
 12655  001F30  0F8F               	addlw	143
 12656  001F32  B0D8               	btfsc	status,0,c
 12657  001F34  D009               	goto	i1l1874
 12658                           
 12659                           ; BSR set to: 0
 12660  001F36  0E00               	movlw	0
 12661  001F38  6F7A               	movwf	?i1___fttol& (0+255),b
 12662  001F3A  0E00               	movlw	0
 12663  001F3C  6F7B               	movwf	(?i1___fttol+1)& (0+255),b
 12664  001F3E  0E00               	movlw	0
 12665  001F40  6F7C               	movwf	(?i1___fttol+2)& (0+255),b
 12666  001F42  0E00               	movlw	0
 12667  001F44  6F7D               	movwf	(?i1___fttol+3)& (0+255),b
 12668                           
 12669                           ; BSR set to: 0
 12670  001F46  0012               	return	
 12671  001F48                     i1l1874:
 12672                           
 12673                           ; BSR set to: 0
 12674                           
 12675                           ; BSR set to: 0
 12676                           
 12677                           ; BSR set to: 0
 12678  001F48  90D8               	bcf	status,0,c
 12679  001F4A  3387               	rrcf	(i1___fttol@lval+3)& (0+255),f,b
 12680  001F4C  3386               	rrcf	(i1___fttol@lval+2)& (0+255),f,b
 12681  001F4E  3385               	rrcf	(i1___fttol@lval+1)& (0+255),f,b
 12682  001F50  3384               	rrcf	i1___fttol@lval& (0+255),f,b
 12683                           
 12684                           ; BSR set to: 0
 12685  001F52  3F88               	incfsz	i1___fttol@exp1& (0+255),f,b
 12686  001F54  D7F9               	goto	i1l1874
 12687                           
 12688                           ; BSR set to: 0
 12689  001F56  D015               	goto	i1u397_20
 12690  001F58                     i1l1873:
 12691                           
 12692                           ; BSR set to: 0
 12693                           
 12694                           ; BSR set to: 0
 12695  001F58  0E17               	movlw	23
 12696  001F5A  6588               	cpfsgt	i1___fttol@exp1& (0+255),b
 12697  001F5C  D00F               	goto	i1l1879
 12698                           
 12699                           ; BSR set to: 0
 12700  001F5E  0E00               	movlw	0
 12701  001F60  6F7A               	movwf	?i1___fttol& (0+255),b
 12702  001F62  0E00               	movlw	0
 12703  001F64  6F7B               	movwf	(?i1___fttol+1)& (0+255),b
 12704  001F66  0E00               	movlw	0
 12705  001F68  6F7C               	movwf	(?i1___fttol+2)& (0+255),b
 12706  001F6A  0E00               	movlw	0
 12707  001F6C  6F7D               	movwf	(?i1___fttol+3)& (0+255),b
 12708                           
 12709                           ; BSR set to: 0
 12710  001F6E  0012               	return	
 12711  001F70                     
 12712                           ; BSR set to: 0
 12713                           
 12714                           ; BSR set to: 0
 12715  001F70  90D8               	bcf	status,0,c
 12716  001F72  3784               	rlcf	i1___fttol@lval& (0+255),f,b
 12717  001F74  3785               	rlcf	(i1___fttol@lval+1)& (0+255),f,b
 12718  001F76  3786               	rlcf	(i1___fttol@lval+2)& (0+255),f,b
 12719  001F78  3787               	rlcf	(i1___fttol@lval+3)& (0+255),f,b
 12720  001F7A  0788               	decf	i1___fttol@exp1& (0+255),f,b
 12721  001F7C                     i1l1879:
 12722                           
 12723                           ; BSR set to: 0
 12724                           
 12725                           ; BSR set to: 0
 12726  001F7C  5188               	movf	i1___fttol@exp1& (0+255),w,b
 12727  001F7E  A4D8               	btfss	status,2,c
 12728  001F80  D7F7               	goto	i1l1880
 12729  001F82                     i1u397_20:
 12730                           
 12731                           ; BSR set to: 0
 12732                           
 12733                           ; BSR set to: 0
 12734                           
 12735                           ; BSR set to: 0
 12736  001F82  5183               	movf	i1___fttol@sign1& (0+255),w,b
 12737  001F84  B4D8               	btfsc	status,2,c
 12738  001F86  D008               	goto	i1l1882
 12739                           
 12740                           ; BSR set to: 0
 12741  001F88  1F87               	comf	(i1___fttol@lval+3)& (0+255),f,b
 12742  001F8A  1F86               	comf	(i1___fttol@lval+2)& (0+255),f,b
 12743  001F8C  1F85               	comf	(i1___fttol@lval+1)& (0+255),f,b
 12744  001F8E  6D84               	negf	i1___fttol@lval& (0+255),b
 12745  001F90  0E00               	movlw	0
 12746  001F92  2385               	addwfc	(i1___fttol@lval+1)& (0+255),f,b
 12747  001F94  2386               	addwfc	(i1___fttol@lval+2)& (0+255),f,b
 12748  001F96  2387               	addwfc	(i1___fttol@lval+3)& (0+255),f,b
 12749  001F98                     i1l1882:
 12750                           
 12751                           ; BSR set to: 0
 12752                           
 12753                           ; BSR set to: 0
 12754  001F98  C084  F07A         	movff	i1___fttol@lval,?i1___fttol
 12755  001F9C  C085  F07B         	movff	i1___fttol@lval+1,?i1___fttol+1
 12756  001FA0  C086  F07C         	movff	i1___fttol@lval+2,?i1___fttol+2
 12757  001FA4  C087  F07D         	movff	i1___fttol@lval+3,?i1___fttol+3
 12758  001FA8  0012               	return	
 12759  001FAA                     __end_ofi1___fttol:
 12760                           	opt stack 0
 12761                           tosu	equ	0xFFF
 12762                           tosh	equ	0xFFE
 12763                           tosl	equ	0xFFD
 12764                           pclatu	equ	0xFFB
 12765                           pclath	equ	0xFFA
 12766                           tblptru	equ	0xFF8
 12767                           tblptrh	equ	0xFF7
 12768                           tblptrl	equ	0xFF6
 12769                           tablat	equ	0xFF5
 12770                           prodh	equ	0xFF4
 12771                           prodl	equ	0xFF3
 12772                           intcon	equ	0xFF2
 12773                           postinc0	equ	0xFEE
 12774                           fsr0h	equ	0xFEA
 12775                           fsr0l	equ	0xFE9
 12776                           wreg	equ	0xFE8
 12777                           fsr1h	equ	0xFE2
 12778                           fsr1l	equ	0xFE1
 12779                           bsr	equ	0xFE0
 12780                           indf2	equ	0xFDF
 12781                           postinc2	equ	0xFDE
 12782                           postdec2	equ	0xFDD
 12783                           fsr2h	equ	0xFDA
 12784                           fsr2l	equ	0xFD9
 12785                           status	equ	0xFD8
 12786                           
 12787 ;; *************** function i1___ftmul *****************
 12788 ;; Defined at:
 12789 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  f1              3   11[BANK0 ] float 
 12792 ;;  f2              3   14[BANK0 ] float 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  __ftmul         3   21[BANK0 ] unsigned um
 12795 ;;  __ftmul         1   25[BANK0 ] unsigned char 
 12796 ;;  __ftmul         1   24[BANK0 ] unsigned char 
 12797 ;;  __ftmul         1   20[BANK0 ] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  3   11[BANK0 ] float 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0, cstack
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12807 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12808 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12809 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12810 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12811 ;;Total ram usage:       15 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:   11
 12814 ;; This function calls:
 12815 ;;		i1___ftpack
 12816 ;; This function is called by:
 12817 ;;		_computarMedicion
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           	psect	text89
 12822  0020A0                     __ptext89:
 12823                           	opt stack 0
 12824  0020A0                     i1___ftmul:
 12825                           	opt stack 7
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;incstack = 0
 12829  0020A0  C06D  F071         	movff	i1___ftmul@f1+2,??i1___ftmul
 12830  0020A4  0100               	movlb	0	; () banked
 12831  0020A6  6B72               	clrf	(??i1___ftmul+1)& (0+255),b
 12832  0020A8  6B73               	clrf	(??i1___ftmul+2)& (0+255),b
 12833  0020AA  356C               	rlcf	(i1___ftmul@f1+1)& (0+255),w,b
 12834  0020AC  3771               	rlcf	??i1___ftmul& (0+255),f,b
 12835  0020AE  E301               	bnc	u385_21
 12836  0020B0  8172               	bsf	(??i1___ftmul+1)& (0+255),0,b
 12837  0020B2                     u385_21:
 12838  0020B2  5171               	movf	??i1___ftmul& (0+255),w,b
 12839  0020B4  6F74               	movwf	i1___ftmul@exp& (0+255),b
 12840  0020B6  5174               	movf	i1___ftmul@exp& (0+255),w,b
 12841  0020B8  A4D8               	btfss	status,2,c
 12842  0020BA  D007               	goto	i1l1850
 12843                           
 12844                           ; BSR set to: 0
 12845  0020BC  0E00               	movlw	0
 12846  0020BE  6F6B               	movwf	?i1___ftmul& (0+255),b
 12847  0020C0  0E00               	movlw	0
 12848  0020C2  6F6C               	movwf	(?i1___ftmul+1)& (0+255),b
 12849  0020C4  0E00               	movlw	0
 12850  0020C6  6F6D               	movwf	(?i1___ftmul+2)& (0+255),b
 12851                           
 12852                           ; BSR set to: 0
 12853  0020C8  0012               	return	
 12854  0020CA                     i1l1850:
 12855                           
 12856                           ; BSR set to: 0
 12857                           
 12858                           ; BSR set to: 0
 12859  0020CA  C070  F071         	movff	i1___ftmul@f2+2,??i1___ftmul
 12860  0020CE  6B72               	clrf	(??i1___ftmul+1)& (0+255),b
 12861  0020D0  6B73               	clrf	(??i1___ftmul+2)& (0+255),b
 12862  0020D2  356F               	rlcf	(i1___ftmul@f2+1)& (0+255),w,b
 12863  0020D4  3771               	rlcf	??i1___ftmul& (0+255),f,b
 12864  0020D6  E301               	bnc	u387_21
 12865  0020D8  8172               	bsf	(??i1___ftmul+1)& (0+255),0,b
 12866  0020DA                     u387_21:
 12867  0020DA  5171               	movf	??i1___ftmul& (0+255),w,b
 12868  0020DC  6F79               	movwf	i1___ftmul@sign& (0+255),b
 12869  0020DE  5179               	movf	i1___ftmul@sign& (0+255),w,b
 12870  0020E0  A4D8               	btfss	status,2,c
 12871  0020E2  D007               	goto	i1l1852
 12872                           
 12873                           ; BSR set to: 0
 12874  0020E4  0E00               	movlw	0
 12875  0020E6  6F6B               	movwf	?i1___ftmul& (0+255),b
 12876  0020E8  0E00               	movlw	0
 12877  0020EA  6F6C               	movwf	(?i1___ftmul+1)& (0+255),b
 12878  0020EC  0E00               	movlw	0
 12879  0020EE  6F6D               	movwf	(?i1___ftmul+2)& (0+255),b
 12880                           
 12881                           ; BSR set to: 0
 12882  0020F0  0012               	return	
 12883  0020F2                     i1l1852:
 12884                           
 12885                           ; BSR set to: 0
 12886                           
 12887                           ; BSR set to: 0
 12888  0020F2  5179               	movf	i1___ftmul@sign& (0+255),w,b
 12889  0020F4  0F7B               	addlw	123
 12890  0020F6  2774               	addwf	i1___ftmul@exp& (0+255),f,b
 12891                           
 12892                           ; BSR set to: 0
 12893  0020F8  C06D  F079         	movff	i1___ftmul@f1+2,i1___ftmul@sign
 12894  0020FC  5170               	movf	(i1___ftmul@f2+2)& (0+255),w,b
 12895  0020FE  1B79               	xorwf	i1___ftmul@sign& (0+255),f,b
 12896  002100  0E80               	movlw	128
 12897  002102  1779               	andwf	i1___ftmul@sign& (0+255),f,b
 12898                           
 12899                           ; BSR set to: 0
 12900  002104  8F6C               	bsf	(i1___ftmul@f1+1)& (0+255),7,b
 12901                           
 12902                           ; BSR set to: 0
 12903  002106  8F6F               	bsf	(i1___ftmul@f2+1)& (0+255),7,b
 12904                           
 12905                           ; BSR set to: 0
 12906  002108  0EFF               	movlw	255
 12907  00210A  176E               	andwf	i1___ftmul@f2& (0+255),f,b
 12908  00210C  0EFF               	movlw	255
 12909  00210E  176F               	andwf	(i1___ftmul@f2+1)& (0+255),f,b
 12910  002110  0E00               	movlw	0
 12911  002112  1770               	andwf	(i1___ftmul@f2+2)& (0+255),f,b
 12912                           
 12913                           ; BSR set to: 0
 12914  002114  0E00               	movlw	0
 12915  002116  6F75               	movwf	i1___ftmul@f3_as_product& (0+255),b
 12916  002118  0E00               	movlw	0
 12917  00211A  6F76               	movwf	(i1___ftmul@f3_as_product+1)& (0+255),b
 12918  00211C  0E00               	movlw	0
 12919  00211E  6F77               	movwf	(i1___ftmul@f3_as_product+2)& (0+255),b
 12920                           
 12921                           ; BSR set to: 0
 12922  002120  0E07               	movlw	7
 12923  002122  6F78               	movwf	i1___ftmul@cntr& (0+255),b
 12924  002124                     
 12925                           ; BSR set to: 0
 12926                           
 12927                           ; BSR set to: 0
 12928  002124  A16B               	btfss	i1___ftmul@f1& (0+255),0,b
 12929  002126  D006               	goto	i1l1854
 12930                           
 12931                           ; BSR set to: 0
 12932  002128  516E               	movf	i1___ftmul@f2& (0+255),w,b
 12933  00212A  2775               	addwf	i1___ftmul@f3_as_product& (0+255),f,b
 12934  00212C  516F               	movf	(i1___ftmul@f2+1)& (0+255),w,b
 12935  00212E  2376               	addwfc	(i1___ftmul@f3_as_product+1)& (0+255),f,b
 12936  002130  5170               	movf	(i1___ftmul@f2+2)& (0+255),w,b
 12937  002132  2377               	addwfc	(i1___ftmul@f3_as_product+2)& (0+255),f,b
 12938  002134                     i1l1854:
 12939                           
 12940                           ; BSR set to: 0
 12941                           
 12942                           ; BSR set to: 0
 12943  002134  90D8               	bcf	status,0,c
 12944  002136  336D               	rrcf	(i1___ftmul@f1+2)& (0+255),f,b
 12945  002138  336C               	rrcf	(i1___ftmul@f1+1)& (0+255),f,b
 12946  00213A  336B               	rrcf	i1___ftmul@f1& (0+255),f,b
 12947  00213C  90D8               	bcf	status,0,c
 12948  00213E  376E               	rlcf	i1___ftmul@f2& (0+255),f,b
 12949  002140  376F               	rlcf	(i1___ftmul@f2+1)& (0+255),f,b
 12950  002142  3770               	rlcf	(i1___ftmul@f2+2)& (0+255),f,b
 12951                           
 12952                           ; BSR set to: 0
 12953  002144  2F78               	decfsz	i1___ftmul@cntr& (0+255),f,b
 12954  002146  D7EE               	goto	i1l1853
 12955                           
 12956                           ; BSR set to: 0
 12957                           
 12958                           ; BSR set to: 0
 12959  002148  0E09               	movlw	9
 12960  00214A  6F78               	movwf	i1___ftmul@cntr& (0+255),b
 12961  00214C                     
 12962                           ; BSR set to: 0
 12963                           
 12964                           ; BSR set to: 0
 12965  00214C  A16B               	btfss	i1___ftmul@f1& (0+255),0,b
 12966  00214E  D006               	goto	i1l1857
 12967                           
 12968                           ; BSR set to: 0
 12969  002150  516E               	movf	i1___ftmul@f2& (0+255),w,b
 12970  002152  2775               	addwf	i1___ftmul@f3_as_product& (0+255),f,b
 12971  002154  516F               	movf	(i1___ftmul@f2+1)& (0+255),w,b
 12972  002156  2376               	addwfc	(i1___ftmul@f3_as_product+1)& (0+255),f,b
 12973  002158  5170               	movf	(i1___ftmul@f2+2)& (0+255),w,b
 12974  00215A  2377               	addwfc	(i1___ftmul@f3_as_product+2)& (0+255),f,b
 12975  00215C                     i1l1857:
 12976                           
 12977                           ; BSR set to: 0
 12978                           
 12979                           ; BSR set to: 0
 12980  00215C  90D8               	bcf	status,0,c
 12981  00215E  336D               	rrcf	(i1___ftmul@f1+2)& (0+255),f,b
 12982  002160  336C               	rrcf	(i1___ftmul@f1+1)& (0+255),f,b
 12983  002162  336B               	rrcf	i1___ftmul@f1& (0+255),f,b
 12984  002164  90D8               	bcf	status,0,c
 12985  002166  3377               	rrcf	(i1___ftmul@f3_as_product+2)& (0+255),f,b
 12986  002168  3376               	rrcf	(i1___ftmul@f3_as_product+1)& (0+255),f,b
 12987  00216A  3375               	rrcf	i1___ftmul@f3_as_product& (0+255),f,b
 12988                           
 12989                           ; BSR set to: 0
 12990  00216C  2F78               	decfsz	i1___ftmul@cntr& (0+255),f,b
 12991  00216E  D7EE               	goto	i1l1856
 12992                           
 12993                           ; BSR set to: 0
 12994                           
 12995                           ; BSR set to: 0
 12996  002170  C075  F060         	movff	i1___ftmul@f3_as_product,i1___ftpack@arg
 12997  002174  C076  F061         	movff	i1___ftmul@f3_as_product+1,i1___ftpack@arg+1
 12998  002178  C077  F062         	movff	i1___ftmul@f3_as_product+2,i1___ftpack@arg+2
 12999  00217C  C074  F063         	movff	i1___ftmul@exp,i1___ftpack@exp
 13000  002180  C079  F064         	movff	i1___ftmul@sign,i1___ftpack@sign
 13001  002184  EC6C  F015         	call	i1___ftpack	;wreg free
 13002  002188  C060  F06B         	movff	?i1___ftpack,?i1___ftmul
 13003  00218C  C061  F06C         	movff	?i1___ftpack+1,?i1___ftmul+1
 13004  002190  C062  F06D         	movff	?i1___ftpack+2,?i1___ftmul+2
 13005  002194  0012               	return	
 13006  002196                     __end_ofi1___ftmul:
 13007                           	opt stack 0
 13008                           tosu	equ	0xFFF
 13009                           tosh	equ	0xFFE
 13010                           tosl	equ	0xFFD
 13011                           pclatu	equ	0xFFB
 13012                           pclath	equ	0xFFA
 13013                           tblptru	equ	0xFF8
 13014                           tblptrh	equ	0xFF7
 13015                           tblptrl	equ	0xFF6
 13016                           tablat	equ	0xFF5
 13017                           prodh	equ	0xFF4
 13018                           prodl	equ	0xFF3
 13019                           intcon	equ	0xFF2
 13020                           postinc0	equ	0xFEE
 13021                           fsr0h	equ	0xFEA
 13022                           fsr0l	equ	0xFE9
 13023                           wreg	equ	0xFE8
 13024                           fsr1h	equ	0xFE2
 13025                           fsr1l	equ	0xFE1
 13026                           bsr	equ	0xFE0
 13027                           indf2	equ	0xFDF
 13028                           postinc2	equ	0xFDE
 13029                           postdec2	equ	0xFDD
 13030                           fsr2h	equ	0xFDA
 13031                           fsr2l	equ	0xFD9
 13032                           status	equ	0xFD8
 13033                           
 13034 ;; *************** function i1___ftpack *****************
 13035 ;; Defined at:
 13036 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 13037 ;; Parameters:    Size  Location     Type
 13038 ;;  arg             3    0[BANK0 ] unsigned um
 13039 ;;  exp             1    3[BANK0 ] unsigned char 
 13040 ;;  sign            1    4[BANK0 ] unsigned char 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;		None
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  3    0[BANK0 ] float 
 13045 ;; Registers used:
 13046 ;;		wreg, status,2, status,0
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13052 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13054 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13055 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13056 ;;Total ram usage:        8 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:   10
 13059 ;; This function calls:
 13060 ;;		Nothing
 13061 ;; This function is called by:
 13062 ;;		i1___ftmul
 13063 ;;		i1___lwtoft
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text90
 13068  002AD8                     __ptext90:
 13069                           	opt stack 0
 13070  002AD8                     i1___ftpack:
 13071                           	opt stack 7
 13072                           
 13073                           ;incstack = 0
 13074  002AD8  0100               	movlb	0	; () banked
 13075  002ADA  5163               	movf	i1___ftpack@exp& (0+255),w,b
 13076  002ADC  B4D8               	btfsc	status,2,c
 13077  002ADE  D005               	goto	i1u357_20
 13078                           
 13079                           ; BSR set to: 0
 13080  002AE0  5160               	movf	i1___ftpack@arg& (0+255),w,b
 13081  002AE2  1161               	iorwf	(i1___ftpack@arg+1)& (0+255),w,b
 13082  002AE4  1162               	iorwf	(i1___ftpack@arg+2)& (0+255),w,b
 13083  002AE6  A4D8               	btfss	status,2,c
 13084  002AE8  D00C               	goto	i1l1771
 13085  002AEA                     i1u357_20:
 13086                           
 13087                           ; BSR set to: 0
 13088                           
 13089                           ; BSR set to: 0
 13090  002AEA  0E00               	movlw	0
 13091  002AEC  6F60               	movwf	?i1___ftpack& (0+255),b
 13092  002AEE  0E00               	movlw	0
 13093  002AF0  6F61               	movwf	(?i1___ftpack+1)& (0+255),b
 13094  002AF2  0E00               	movlw	0
 13095  002AF4  6F62               	movwf	(?i1___ftpack+2)& (0+255),b
 13096                           
 13097                           ; BSR set to: 0
 13098  002AF6  0012               	return	
 13099  002AF8                     
 13100                           ; BSR set to: 0
 13101                           
 13102                           ; BSR set to: 0
 13103  002AF8  2B63               	incf	i1___ftpack@exp& (0+255),f,b
 13104  002AFA  90D8               	bcf	status,0,c
 13105  002AFC  3362               	rrcf	(i1___ftpack@arg+2)& (0+255),f,b
 13106  002AFE  3361               	rrcf	(i1___ftpack@arg+1)& (0+255),f,b
 13107  002B00  3360               	rrcf	i1___ftpack@arg& (0+255),f,b
 13108  002B02                     i1l1771:
 13109                           
 13110                           ; BSR set to: 0
 13111                           
 13112                           ; BSR set to: 0
 13113  002B02  0E00               	movlw	0
 13114  002B04  1560               	andwf	i1___ftpack@arg& (0+255),w,b
 13115  002B06  6F65               	movwf	??i1___ftpack& (0+255),b
 13116  002B08  0E00               	movlw	0
 13117  002B0A  1561               	andwf	(i1___ftpack@arg+1)& (0+255),w,b
 13118  002B0C  6F66               	movwf	(??i1___ftpack+1)& (0+255),b
 13119  002B0E  0EFE               	movlw	254
 13120  002B10  1562               	andwf	(i1___ftpack@arg+2)& (0+255),w,b
 13121  002B12  6F67               	movwf	(??i1___ftpack+2)& (0+255),b
 13122  002B14  5165               	movf	??i1___ftpack& (0+255),w,b
 13123  002B16  1166               	iorwf	(??i1___ftpack+1)& (0+255),w,b
 13124  002B18  1167               	iorwf	(??i1___ftpack+2)& (0+255),w,b
 13125  002B1A  B4D8               	btfsc	status,2,c
 13126  002B1C  D00C               	goto	i1l1774
 13127  002B1E  D7EC               	goto	i1l1772
 13128  002B20                     
 13129                           ; BSR set to: 0
 13130                           
 13131                           ; BSR set to: 0
 13132  002B20  2B63               	incf	i1___ftpack@exp& (0+255),f,b
 13133                           
 13134                           ; BSR set to: 0
 13135  002B22  0E01               	movlw	1
 13136  002B24  2760               	addwf	i1___ftpack@arg& (0+255),f,b
 13137  002B26  0E00               	movlw	0
 13138  002B28  2361               	addwfc	(i1___ftpack@arg+1)& (0+255),f,b
 13139  002B2A  0E00               	movlw	0
 13140  002B2C  2362               	addwfc	(i1___ftpack@arg+2)& (0+255),f,b
 13141  002B2E  90D8               	bcf	status,0,c
 13142  002B30  3362               	rrcf	(i1___ftpack@arg+2)& (0+255),f,b
 13143  002B32  3361               	rrcf	(i1___ftpack@arg+1)& (0+255),f,b
 13144  002B34  3360               	rrcf	i1___ftpack@arg& (0+255),f,b
 13145  002B36                     i1l1774:
 13146                           
 13147                           ; BSR set to: 0
 13148                           
 13149                           ; BSR set to: 0
 13150  002B36  0E00               	movlw	0
 13151  002B38  1560               	andwf	i1___ftpack@arg& (0+255),w,b
 13152  002B3A  6F65               	movwf	??i1___ftpack& (0+255),b
 13153  002B3C  0E00               	movlw	0
 13154  002B3E  1561               	andwf	(i1___ftpack@arg+1)& (0+255),w,b
 13155  002B40  6F66               	movwf	(??i1___ftpack+1)& (0+255),b
 13156  002B42  0EFF               	movlw	255
 13157  002B44  1562               	andwf	(i1___ftpack@arg+2)& (0+255),w,b
 13158  002B46  6F67               	movwf	(??i1___ftpack+2)& (0+255),b
 13159  002B48  5165               	movf	??i1___ftpack& (0+255),w,b
 13160  002B4A  1166               	iorwf	(??i1___ftpack+1)& (0+255),w,b
 13161  002B4C  1167               	iorwf	(??i1___ftpack+2)& (0+255),w,b
 13162  002B4E  B4D8               	btfsc	status,2,c
 13163  002B50  D006               	goto	i1l1777
 13164  002B52  D7E6               	goto	i1l1775
 13165  002B54                     
 13166                           ; BSR set to: 0
 13167                           
 13168                           ; BSR set to: 0
 13169  002B54  0763               	decf	i1___ftpack@exp& (0+255),f,b
 13170  002B56  90D8               	bcf	status,0,c
 13171  002B58  3760               	rlcf	i1___ftpack@arg& (0+255),f,b
 13172  002B5A  3761               	rlcf	(i1___ftpack@arg+1)& (0+255),f,b
 13173  002B5C  3762               	rlcf	(i1___ftpack@arg+2)& (0+255),f,b
 13174  002B5E                     i1l1777:
 13175                           
 13176                           ; BSR set to: 0
 13177                           
 13178                           ; BSR set to: 0
 13179  002B5E  BF61               	btfsc	(i1___ftpack@arg+1)& (0+255),7,b
 13180  002B60  D003               	goto	i1u361_20
 13181                           
 13182                           ; BSR set to: 0
 13183  002B62  0E02               	movlw	2
 13184  002B64  6163               	cpfslt	i1___ftpack@exp& (0+255),b
 13185  002B66  D7F6               	goto	i1l1778
 13186  002B68                     i1u361_20:
 13187                           
 13188                           ; BSR set to: 0
 13189                           
 13190                           ; BSR set to: 0
 13191  002B68  A163               	btfss	i1___ftpack@exp& (0+255),0,b
 13192                           
 13193                           ; BSR set to: 0
 13194  002B6A  9F61               	bcf	(i1___ftpack@arg+1)& (0+255),7,b
 13195                           
 13196                           ; BSR set to: 0
 13197                           
 13198                           ; BSR set to: 0
 13199  002B6C  90D8               	bcf	status,0,c
 13200  002B6E  3363               	rrcf	i1___ftpack@exp& (0+255),f,b
 13201  002B70  5163               	movf	i1___ftpack@exp& (0+255),w,b
 13202  002B72  1362               	iorwf	(i1___ftpack@arg+2)& (0+255),f,b
 13203                           
 13204                           ; BSR set to: 0
 13205  002B74  5164               	movf	i1___ftpack@sign& (0+255),w,b
 13206  002B76  A4D8               	btfss	status,2,c
 13207                           
 13208                           ; BSR set to: 0
 13209  002B78  8F62               	bsf	(i1___ftpack@arg+2)& (0+255),7,b
 13210                           
 13211                           ; BSR set to: 0
 13212                           
 13213                           ; BSR set to: 0
 13214  002B7A  C060  F060         	movff	i1___ftpack@arg,?i1___ftpack
 13215  002B7E  C061  F061         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 13216  002B82  C062  F062         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 13217  002B86  0012               	return	
 13218  002B88                     __end_ofi1___ftpack:
 13219                           	opt stack 0
 13220                           tosu	equ	0xFFF
 13221                           tosh	equ	0xFFE
 13222                           tosl	equ	0xFFD
 13223                           pclatu	equ	0xFFB
 13224                           pclath	equ	0xFFA
 13225                           tblptru	equ	0xFF8
 13226                           tblptrh	equ	0xFF7
 13227                           tblptrl	equ	0xFF6
 13228                           tablat	equ	0xFF5
 13229                           prodh	equ	0xFF4
 13230                           prodl	equ	0xFF3
 13231                           intcon	equ	0xFF2
 13232                           postinc0	equ	0xFEE
 13233                           fsr0h	equ	0xFEA
 13234                           fsr0l	equ	0xFE9
 13235                           wreg	equ	0xFE8
 13236                           fsr1h	equ	0xFE2
 13237                           fsr1l	equ	0xFE1
 13238                           bsr	equ	0xFE0
 13239                           indf2	equ	0xFDF
 13240                           postinc2	equ	0xFDE
 13241                           postdec2	equ	0xFDD
 13242                           fsr2h	equ	0xFDA
 13243                           fsr2l	equ	0xFD9
 13244                           status	equ	0xFD8
 13245                           
 13246 ;; *************** function ___lwdiv *****************
 13247 ;; Defined at:
 13248 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 13249 ;; Parameters:    Size  Location     Type
 13250 ;;  dividend        2    0[BANK0 ] unsigned int 
 13251 ;;  divisor         2    2[BANK0 ] unsigned int 
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;  quotient        2    4[BANK0 ] unsigned int 
 13254 ;;  counter         1    6[BANK0 ] unsigned char 
 13255 ;; Return value:  Size  Location     Type
 13256 ;;                  2    0[BANK0 ] unsigned int 
 13257 ;; Registers used:
 13258 ;;		wreg, status,2, status,0
 13259 ;; Tracked objects:
 13260 ;;		On entry : 0/0
 13261 ;;		On exit  : 0/0
 13262 ;;		Unchanged: 0/0
 13263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13265 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13267 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13268 ;;Total ram usage:        7 bytes
 13269 ;; Hardware stack levels used:    1
 13270 ;; Hardware stack levels required when called:   10
 13271 ;; This function calls:
 13272 ;;		Nothing
 13273 ;; This function is called by:
 13274 ;;		_computarMedicion
 13275 ;;		_arrayAverage
 13276 ;; This function uses a non-reentrant model
 13277 ;;
 13278                           
 13279                           	psect	text91
 13280  003306                     __ptext91:
 13281                           	opt stack 0
 13282  003306                     ___lwdiv:
 13283                           	opt stack 8
 13284                           
 13285                           ; BSR set to: 0
 13286                           ;incstack = 0
 13287  003306  0E00               	movlw	0
 13288  003308  0100               	movlb	0	; () banked
 13289  00330A  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 13290  00330C  0E00               	movlw	0
 13291  00330E  6F64               	movwf	___lwdiv@quotient& (0+255),b
 13292                           
 13293                           ; BSR set to: 0
 13294  003310  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13295  003312  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 13296  003314  B4D8               	btfsc	status,2,c
 13297  003316  D01C               	goto	i1l1965
 13298                           
 13299                           ; BSR set to: 0
 13300  003318  0E01               	movlw	1
 13301  00331A  6F66               	movwf	___lwdiv@counter& (0+255),b
 13302  00331C  D004               	goto	i1l1960
 13303  00331E                     
 13304                           ; BSR set to: 0
 13305                           
 13306                           ; BSR set to: 0
 13307  00331E  90D8               	bcf	status,0,c
 13308  003320  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 13309  003322  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 13310  003324  2B66               	incf	___lwdiv@counter& (0+255),f,b
 13311  003326                     i1l1960:
 13312                           
 13313                           ; BSR set to: 0
 13314                           
 13315                           ; BSR set to: 0
 13316  003326  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 13317  003328  D7FA               	goto	i1l1961
 13318  00332A                     i1u379_20:
 13319                           
 13320                           ; BSR set to: 0
 13321                           
 13322                           ; BSR set to: 0
 13323                           
 13324                           ; BSR set to: 0
 13325  00332A  90D8               	bcf	status,0,c
 13326  00332C  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 13327  00332E  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 13328                           
 13329                           ; BSR set to: 0
 13330  003330  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13331  003332  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 13332  003334  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13333  003336  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 13334  003338  A0D8               	btfss	status,0,c
 13335  00333A  D005               	goto	i1l1964
 13336                           
 13337                           ; BSR set to: 0
 13338  00333C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13339  00333E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 13340  003340  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13341  003342  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 13342                           
 13343                           ; BSR set to: 0
 13344  003344  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 13345  003346                     i1l1964:
 13346                           
 13347                           ; BSR set to: 0
 13348                           
 13349                           ; BSR set to: 0
 13350  003346  90D8               	bcf	status,0,c
 13351  003348  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 13352  00334A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 13353                           
 13354                           ; BSR set to: 0
 13355  00334C  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 13356  00334E  D7ED               	goto	i1u379_20
 13357  003350                     i1l1965:
 13358                           
 13359                           ; BSR set to: 0
 13360                           
 13361                           ; BSR set to: 0
 13362  003350  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 13363  003354  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13364                           
 13365                           ; BSR set to: 0
 13366  003358  0012               	return		;funcret
 13367  00335A                     __end_of___lwdiv:
 13368                           	opt stack 0
 13369                           tosu	equ	0xFFF
 13370                           tosh	equ	0xFFE
 13371                           tosl	equ	0xFFD
 13372                           pclatu	equ	0xFFB
 13373                           pclath	equ	0xFFA
 13374                           tblptru	equ	0xFF8
 13375                           tblptrh	equ	0xFF7
 13376                           tblptrl	equ	0xFF6
 13377                           tablat	equ	0xFF5
 13378                           prodh	equ	0xFF4
 13379                           prodl	equ	0xFF3
 13380                           intcon	equ	0xFF2
 13381                           postinc0	equ	0xFEE
 13382                           fsr0h	equ	0xFEA
 13383                           fsr0l	equ	0xFE9
 13384                           wreg	equ	0xFE8
 13385                           fsr1h	equ	0xFE2
 13386                           fsr1l	equ	0xFE1
 13387                           bsr	equ	0xFE0
 13388                           indf2	equ	0xFDF
 13389                           postinc2	equ	0xFDE
 13390                           postdec2	equ	0xFDD
 13391                           fsr2h	equ	0xFDA
 13392                           fsr2l	equ	0xFD9
 13393                           status	equ	0xFD8
 13394                           
 13395 ;; *************** function _TMR3_HasOverflowOccured *****************
 13396 ;; Defined at:
 13397 ;;		line 166 in file "mcc_generated_files/tmr3.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;		None
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;		None
 13402 ;; Return value:  Size  Location     Type
 13403 ;;                  1    wreg      unsigned char 
 13404 ;; Registers used:
 13405 ;;		wreg
 13406 ;; Tracked objects:
 13407 ;;		On entry : 0/0
 13408 ;;		On exit  : 0/0
 13409 ;;		Unchanged: 0/0
 13410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13415 ;;Total ram usage:        0 bytes
 13416 ;; Hardware stack levels used:    1
 13417 ;; Hardware stack levels required when called:   10
 13418 ;; This function calls:
 13419 ;;		Nothing
 13420 ;; This function is called by:
 13421 ;;		_usonic_tick
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           	psect	text92
 13426  003E2A                     __ptext92:
 13427                           	opt stack 0
 13428  003E2A                     _TMR3_HasOverflowOccured:
 13429                           	opt stack 10
 13430                           
 13431                           ;tmr3.c: 169: return(PIR4bits.TMR3IF);
 13432                           
 13433                           ; BSR set to: 0
 13434                           ;incstack = 0
 13435  003E2A  010E               	movlb	14	; () banked
 13436  003E2C  A5CE               	btfss	206,2,b	;volatile
 13437  003E2E  D002               	goto	i1u455_20
 13438  003E30  0E01               	movlw	1
 13439  003E32  0012               	return	
 13440  003E34                     i1u455_20:
 13441  003E34  0E00               	movlw	0
 13442  003E36  0012               	return	
 13443  003E38                     __end_of_TMR3_HasOverflowOccured:
 13444                           	opt stack 0
 13445                           tosu	equ	0xFFF
 13446                           tosh	equ	0xFFE
 13447                           tosl	equ	0xFFD
 13448                           pclatu	equ	0xFFB
 13449                           pclath	equ	0xFFA
 13450                           tblptru	equ	0xFF8
 13451                           tblptrh	equ	0xFF7
 13452                           tblptrl	equ	0xFF6
 13453                           tablat	equ	0xFF5
 13454                           prodh	equ	0xFF4
 13455                           prodl	equ	0xFF3
 13456                           intcon	equ	0xFF2
 13457                           postinc0	equ	0xFEE
 13458                           fsr0h	equ	0xFEA
 13459                           fsr0l	equ	0xFE9
 13460                           wreg	equ	0xFE8
 13461                           fsr1h	equ	0xFE2
 13462                           fsr1l	equ	0xFE1
 13463                           bsr	equ	0xFE0
 13464                           indf2	equ	0xFDF
 13465                           postinc2	equ	0xFDE
 13466                           postdec2	equ	0xFDD
 13467                           fsr2h	equ	0xFDA
 13468                           fsr2l	equ	0xFD9
 13469                           status	equ	0xFD8
 13470                           
 13471 ;; *************** function _TMR1_HasOverflowOccured *****************
 13472 ;; Defined at:
 13473 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 13474 ;; Parameters:    Size  Location     Type
 13475 ;;		None
 13476 ;; Auto vars:     Size  Location     Type
 13477 ;;		None
 13478 ;; Return value:  Size  Location     Type
 13479 ;;                  1    wreg      unsigned char 
 13480 ;; Registers used:
 13481 ;;		wreg
 13482 ;; Tracked objects:
 13483 ;;		On entry : 0/0
 13484 ;;		On exit  : 0/0
 13485 ;;		Unchanged: 0/0
 13486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13491 ;;Total ram usage:        0 bytes
 13492 ;; Hardware stack levels used:    1
 13493 ;; Hardware stack levels required when called:   10
 13494 ;; This function calls:
 13495 ;;		Nothing
 13496 ;; This function is called by:
 13497 ;;		_usonic_tick
 13498 ;; This function uses a non-reentrant model
 13499 ;;
 13500                           
 13501                           	psect	text93
 13502  003E38                     __ptext93:
 13503                           	opt stack 0
 13504  003E38                     _TMR1_HasOverflowOccured:
 13505                           	opt stack 10
 13506                           
 13507                           ;tmr1.c: 169: return(PIR4bits.TMR1IF);
 13508                           
 13509                           ; BSR set to: 14
 13510                           ;incstack = 0
 13511  003E38  010E               	movlb	14	; () banked
 13512  003E3A  A1CE               	btfss	206,0,b	;volatile
 13513  003E3C  D002               	goto	i1u453_20
 13514  003E3E  0E01               	movlw	1
 13515  003E40  0012               	return	
 13516  003E42                     i1u453_20:
 13517  003E42  0E00               	movlw	0
 13518  003E44  0012               	return	
 13519  003E46                     __end_of_TMR1_HasOverflowOccured:
 13520                           	opt stack 0
 13521                           tosu	equ	0xFFF
 13522                           tosh	equ	0xFFE
 13523                           tosl	equ	0xFFD
 13524                           pclatu	equ	0xFFB
 13525                           pclath	equ	0xFFA
 13526                           tblptru	equ	0xFF8
 13527                           tblptrh	equ	0xFF7
 13528                           tblptrl	equ	0xFF6
 13529                           tablat	equ	0xFF5
 13530                           prodh	equ	0xFF4
 13531                           prodl	equ	0xFF3
 13532                           intcon	equ	0xFF2
 13533                           postinc0	equ	0xFEE
 13534                           fsr0h	equ	0xFEA
 13535                           fsr0l	equ	0xFE9
 13536                           wreg	equ	0xFE8
 13537                           fsr1h	equ	0xFE2
 13538                           fsr1l	equ	0xFE1
 13539                           bsr	equ	0xFE0
 13540                           indf2	equ	0xFDF
 13541                           postinc2	equ	0xFDE
 13542                           postdec2	equ	0xFDD
 13543                           fsr2h	equ	0xFDA
 13544                           fsr2l	equ	0xFD9
 13545                           status	equ	0xFD8
 13546                           
 13547 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 13548 ;; Defined at:
 13549 ;;		line 74 in file "mcc_generated_files/interrupt_manager.c"
 13550 ;; Parameters:    Size  Location     Type
 13551 ;;		None
 13552 ;; Auto vars:     Size  Location     Type
 13553 ;;		None
 13554 ;; Return value:  Size  Location     Type
 13555 ;;                  1    wreg      void 
 13556 ;; Registers used:
 13557 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13558 ;; Tracked objects:
 13559 ;;		On entry : 0/0
 13560 ;;		On exit  : 0/0
 13561 ;;		Unchanged: 0/0
 13562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13565 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13566 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13567 ;;Total ram usage:       18 bytes
 13568 ;; Hardware stack levels used:    1
 13569 ;; Hardware stack levels required when called:    9
 13570 ;; This function calls:
 13571 ;;		_PIN_MANAGER_IOC
 13572 ;;		_TMR1_GATE_ISR
 13573 ;;		_TMR3_GATE_ISR
 13574 ;; This function is called by:
 13575 ;;		Interrupt level 2
 13576 ;; This function uses a non-reentrant model
 13577 ;;
 13578                           
 13579                           	psect	intcode
 13580  000008                     __pintcode:
 13581                           	opt stack 0
 13582  000008                     _INTERRUPT_InterruptManagerHigh:
 13583                           	opt stack 7
 13584                           
 13585                           ; BSR set to: 14
 13586                           ;incstack = 0
 13587  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13588  00000A  EFB8  F014         	goto	int_func
 13589                           tosu	equ	0xFFF
 13590                           tosh	equ	0xFFE
 13591                           tosl	equ	0xFFD
 13592                           pclatu	equ	0xFFB
 13593                           pclath	equ	0xFFA
 13594                           tblptru	equ	0xFF8
 13595                           tblptrh	equ	0xFF7
 13596                           tblptrl	equ	0xFF6
 13597                           tablat	equ	0xFF5
 13598                           prodh	equ	0xFF4
 13599                           prodl	equ	0xFF3
 13600                           intcon	equ	0xFF2
 13601                           postinc0	equ	0xFEE
 13602                           fsr0h	equ	0xFEA
 13603                           fsr0l	equ	0xFE9
 13604                           wreg	equ	0xFE8
 13605                           fsr1h	equ	0xFE2
 13606                           fsr1l	equ	0xFE1
 13607                           bsr	equ	0xFE0
 13608                           indf2	equ	0xFDF
 13609                           postinc2	equ	0xFDE
 13610                           postdec2	equ	0xFDD
 13611                           fsr2h	equ	0xFDA
 13612                           fsr2l	equ	0xFD9
 13613                           status	equ	0xFD8
 13614                           
 13615                           	psect	intcode_body
 13616  002970                     __pintcode_body:
 13617                           	opt stack 7
 13618  002970                     int_func:
 13619                           	opt stack 7
 13620  002970  CFFA F04B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 13621  002974  CFFB F04C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 13622  002978  CFE9 F04D          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 13623  00297C  CFEA F04E          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 13624  002980  CFE1 F04F          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 13625  002984  CFE2 F050          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 13626  002988  CFD9 F051          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 13627  00298C  CFDA F052          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 13628  002990  CFF3 F053          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 13629  002994  CFF4 F054          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 13630  002998  CFF6 F055          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 13631  00299C  CFF7 F056          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 13632  0029A0  CFF8 F057          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 13633  0029A4  CFF5 F058          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 13634  0029A8  C05F  F059         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 13635  0029AC  C060  F05A         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 13636  0029B0  C061  F05B         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 13637  0029B4  C062  F05C         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 13638                           
 13639                           ;interrupt_manager.c: 77: if(PIE5bits.TMR3GIE == 1 && PIR5bits.TMR3GIF == 1)
 13640  0029B8  010E               	movlb	14	; () banked
 13641  0029BA  B3C7               	btfsc	199,1,b	;volatile
 13642                           
 13643                           ; BSR set to: 14
 13644  0029BC  A3CF               	btfss	207,1,b	;volatile
 13645  0029BE  D003               	goto	i2l251
 13646                           
 13647                           ; BSR set to: 14
 13648                           ;interrupt_manager.c: 78: {
 13649                           ;interrupt_manager.c: 79: TMR3_GATE_ISR();
 13650  0029C0  ECA8  F01C         	call	_TMR3_GATE_ISR	;wreg free
 13651                           
 13652                           ;interrupt_manager.c: 80: }
 13653  0029C4  D00B               	goto	i2l255
 13654  0029C6                     i2l251:
 13655                           
 13656                           ; BSR set to: 14
 13657                           ;interrupt_manager.c: 81: else if(PIE5bits.TMR1GIE == 1 && PIR5bits.TMR1GIF == 1)
 13658  0029C6  B1C7               	btfsc	199,0,b	;volatile
 13659                           
 13660                           ; BSR set to: 14
 13661  0029C8  A1CF               	btfss	207,0,b	;volatile
 13662  0029CA  D003               	goto	i2l253
 13663                           
 13664                           ; BSR set to: 14
 13665                           ;interrupt_manager.c: 82: {
 13666                           ;interrupt_manager.c: 83: TMR1_GATE_ISR();
 13667  0029CC  ECBC  F01C         	call	_TMR1_GATE_ISR	;wreg free
 13668                           
 13669                           ;interrupt_manager.c: 84: }
 13670  0029D0  D005               	goto	i2l255
 13671  0029D2                     i2l253:
 13672                           
 13673                           ; BSR set to: 14
 13674                           ;interrupt_manager.c: 85: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 13675  0029D2  B9C2               	btfsc	194,4,b	;volatile
 13676                           
 13677                           ; BSR set to: 14
 13678  0029D4  A9CA               	btfss	202,4,b	;volatile
 13679  0029D6  D002               	goto	i2l255
 13680                           
 13681                           ; BSR set to: 14
 13682                           ;interrupt_manager.c: 86: {
 13683                           ;interrupt_manager.c: 87: PIN_MANAGER_IOC();
 13684  0029D8  EC79  F01D         	call	_PIN_MANAGER_IOC	;wreg free
 13685  0029DC                     i2l255:
 13686                           
 13687                           ;interrupt_manager.c: 89: else
 13688                           ;interrupt_manager.c: 90: {
 13689  0029DC  C05C  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 13690  0029E0  C05B  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 13691  0029E4  C05A  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 13692  0029E8  C059  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 13693  0029EC  C058  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 13694  0029F0  C057  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 13695  0029F4  C056  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 13696  0029F8  C055  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 13697  0029FC  C054  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 13698  002A00  C053  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 13699  002A04  C052  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 13700  002A08  C051  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 13701  002A0C  C050  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 13702  002A10  C04F  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 13703  002A14  C04E  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 13704  002A18  C04D  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 13705  002A1C  C04C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 13706  002A20  C04B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 13707  002A24  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13708  002A26  0011               	retfie		f
 13709  002A28                     __end_of_INTERRUPT_InterruptManagerHigh:
 13710                           	opt stack 0
 13711                           tosu	equ	0xFFF
 13712                           tosh	equ	0xFFE
 13713                           tosl	equ	0xFFD
 13714                           pclatu	equ	0xFFB
 13715                           pclath	equ	0xFFA
 13716                           tblptru	equ	0xFF8
 13717                           tblptrh	equ	0xFF7
 13718                           tblptrl	equ	0xFF6
 13719                           tablat	equ	0xFF5
 13720                           prodh	equ	0xFF4
 13721                           prodl	equ	0xFF3
 13722                           intcon	equ	0xFF2
 13723                           postinc0	equ	0xFEE
 13724                           fsr0h	equ	0xFEA
 13725                           fsr0l	equ	0xFE9
 13726                           wreg	equ	0xFE8
 13727                           fsr1h	equ	0xFE2
 13728                           fsr1l	equ	0xFE1
 13729                           bsr	equ	0xFE0
 13730                           indf2	equ	0xFDF
 13731                           postinc2	equ	0xFDE
 13732                           postdec2	equ	0xFDD
 13733                           fsr2h	equ	0xFDA
 13734                           fsr2l	equ	0xFD9
 13735                           status	equ	0xFD8
 13736                           
 13737 ;; *************** function _TMR3_GATE_ISR *****************
 13738 ;; Defined at:
 13739 ;;		line 172 in file "mcc_generated_files/tmr3.c"
 13740 ;; Parameters:    Size  Location     Type
 13741 ;;		None
 13742 ;; Auto vars:     Size  Location     Type
 13743 ;;		None
 13744 ;; Return value:  Size  Location     Type
 13745 ;;                  1    wreg      void 
 13746 ;; Registers used:
 13747 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13748 ;; Tracked objects:
 13749 ;;		On entry : 0/0
 13750 ;;		On exit  : 0/0
 13751 ;;		Unchanged: 0/0
 13752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13757 ;;Total ram usage:        0 bytes
 13758 ;; Hardware stack levels used:    1
 13759 ;; Hardware stack levels required when called:    3
 13760 ;; This function calls:
 13761 ;;		Absolute function
 13762 ;;		_pulsoCapturadoTimer3
 13763 ;; This function is called by:
 13764 ;;		_INTERRUPT_InterruptManagerHigh
 13765 ;; This function uses a non-reentrant model
 13766 ;;
 13767                           
 13768                           	psect	text95
 13769  003950                     __ptext95:
 13770                           	opt stack 0
 13771  003950                     _TMR3_GATE_ISR:
 13772                           	opt stack 12
 13773                           
 13774                           ;tmr3.c: 175: PIR5bits.TMR3GIF = 0;
 13775                           
 13776                           ;incstack = 0
 13777  003950  010E               	movlb	14	; () banked
 13778  003952  93CF               	bcf	207,1,b	;volatile
 13779                           
 13780                           ; BSR set to: 14
 13781                           ;tmr3.c: 176: if(TMR3G_InterruptHandler)
 13782  003954  0100               	movlb	0	; () banked
 13783  003956  51DB               	movf	_TMR3G_InterruptHandler& (0+255),w,b
 13784  003958  11DC               	iorwf	(_TMR3G_InterruptHandler+1)& (0+255),w,b
 13785  00395A  11DD               	iorwf	(_TMR3G_InterruptHandler+2)& (0+255),w,b
 13786  00395C  B4D8               	btfsc	status,2,c
 13787  00395E  0012               	return	
 13788                           
 13789                           ; BSR set to: 0
 13790                           ;tmr3.c: 177: {
 13791                           ;tmr3.c: 178: TMR3G_InterruptHandler();
 13792  003960  D801               	call	i2u861_48
 13793  003962  0012               	return	
 13794  003964                     i2u861_48:
 13795  003964  0005               	push	
 13796  003966  6EFA               	movwf	pclath,c
 13797  003968  51DB               	movf	_TMR3G_InterruptHandler& (0+255),w,b
 13798  00396A  6EFD               	movwf	tosl,c
 13799  00396C  51DC               	movf	(_TMR3G_InterruptHandler+1)& (0+255),w,b
 13800  00396E  6EFE               	movwf	tosh,c
 13801  003970  51DD               	movf	(_TMR3G_InterruptHandler+2)& (0+255),w,b
 13802  003972  6EFF               	movwf	tosu,c
 13803  003974  50FA               	movf	pclath,w,c
 13804  003976  0012               	return		;indir
 13805  003978                     __end_of_TMR3_GATE_ISR:
 13806                           	opt stack 0
 13807                           tosu	equ	0xFFF
 13808                           tosh	equ	0xFFE
 13809                           tosl	equ	0xFFD
 13810                           pclatu	equ	0xFFB
 13811                           pclath	equ	0xFFA
 13812                           tblptru	equ	0xFF8
 13813                           tblptrh	equ	0xFF7
 13814                           tblptrl	equ	0xFF6
 13815                           tablat	equ	0xFF5
 13816                           prodh	equ	0xFF4
 13817                           prodl	equ	0xFF3
 13818                           intcon	equ	0xFF2
 13819                           postinc0	equ	0xFEE
 13820                           fsr0h	equ	0xFEA
 13821                           fsr0l	equ	0xFE9
 13822                           wreg	equ	0xFE8
 13823                           fsr1h	equ	0xFE2
 13824                           fsr1l	equ	0xFE1
 13825                           bsr	equ	0xFE0
 13826                           indf2	equ	0xFDF
 13827                           postinc2	equ	0xFDE
 13828                           postdec2	equ	0xFDD
 13829                           fsr2h	equ	0xFDA
 13830                           fsr2l	equ	0xFD9
 13831                           status	equ	0xFD8
 13832                           
 13833 ;; *************** function _pulsoCapturadoTimer3 *****************
 13834 ;; Defined at:
 13835 ;;		line 223 in file "drv_ultrasonicos.c"
 13836 ;; Parameters:    Size  Location     Type
 13837 ;;		None
 13838 ;; Auto vars:     Size  Location     Type
 13839 ;;		None
 13840 ;; Return value:  Size  Location     Type
 13841 ;;                  1    wreg      void 
 13842 ;; Registers used:
 13843 ;;		wreg, status,2, cstack
 13844 ;; Tracked objects:
 13845 ;;		On entry : 0/0
 13846 ;;		On exit  : 0/0
 13847 ;;		Unchanged: 0/0
 13848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13853 ;;Total ram usage:        0 bytes
 13854 ;; Hardware stack levels used:    1
 13855 ;; Hardware stack levels required when called:    2
 13856 ;; This function calls:
 13857 ;;		_TMR3_ReadTimer
 13858 ;;		_TMR3_Reload
 13859 ;; This function is called by:
 13860 ;;		_usonic_init
 13861 ;;		_TMR3_GATE_ISR
 13862 ;; This function uses a non-reentrant model
 13863 ;;
 13864                           
 13865                           	psect	text96
 13866  003CEA                     __ptext96:
 13867                           	opt stack 0
 13868  003CEA                     _pulsoCapturadoTimer3:
 13869                           	opt stack 12
 13870                           
 13871                           ;drv_ultrasonicos.c: 225: usonic.pulsoCapturadoT3G = TMR3_ReadTimer();
 13872                           
 13873                           ;incstack = 0
 13874  003CEA  ECCF  F01D         	call	_TMR3_ReadTimer	;wreg free
 13875  003CEE  C001  F0BE         	movff	?_TMR3_ReadTimer,_usonic+19	;volatile
 13876  003CF2  C002  F0BF         	movff	?_TMR3_ReadTimer+1,_usonic+20	;volatile
 13877                           
 13878                           ;drv_ultrasonicos.c: 226: usonic.flags.pulsoCapturadoT3G = 1;
 13879  003CF6  0100               	movlb	0	; () banked
 13880  003CF8  83BB               	bsf	(_usonic+16)& (0+255),1,b	;volatile
 13881                           
 13882                           ;drv_ultrasonicos.c: 227: TMR3_Reload();
 13883  003CFA  EC23  F01F         	call	_TMR3_Reload	;wreg free
 13884  003CFE  0012               	return		;funcret
 13885  003D00                     __end_of_pulsoCapturadoTimer3:
 13886                           	opt stack 0
 13887                           tosu	equ	0xFFF
 13888                           tosh	equ	0xFFE
 13889                           tosl	equ	0xFFD
 13890                           pclatu	equ	0xFFB
 13891                           pclath	equ	0xFFA
 13892                           tblptru	equ	0xFF8
 13893                           tblptrh	equ	0xFF7
 13894                           tblptrl	equ	0xFF6
 13895                           tablat	equ	0xFF5
 13896                           prodh	equ	0xFF4
 13897                           prodl	equ	0xFF3
 13898                           intcon	equ	0xFF2
 13899                           postinc0	equ	0xFEE
 13900                           fsr0h	equ	0xFEA
 13901                           fsr0l	equ	0xFE9
 13902                           wreg	equ	0xFE8
 13903                           fsr1h	equ	0xFE2
 13904                           fsr1l	equ	0xFE1
 13905                           bsr	equ	0xFE0
 13906                           indf2	equ	0xFDF
 13907                           postinc2	equ	0xFDE
 13908                           postdec2	equ	0xFDD
 13909                           fsr2h	equ	0xFDA
 13910                           fsr2l	equ	0xFD9
 13911                           status	equ	0xFD8
 13912                           
 13913 ;; *************** function _TMR3_Reload *****************
 13914 ;; Defined at:
 13915 ;;		line 151 in file "mcc_generated_files/tmr3.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;		None
 13918 ;; Auto vars:     Size  Location     Type
 13919 ;;		None
 13920 ;; Return value:  Size  Location     Type
 13921 ;;                  1    wreg      void 
 13922 ;; Registers used:
 13923 ;;		wreg, status,2, cstack
 13924 ;; Tracked objects:
 13925 ;;		On entry : 0/0
 13926 ;;		On exit  : 0/0
 13927 ;;		Unchanged: 0/0
 13928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13933 ;;Total ram usage:        0 bytes
 13934 ;; Hardware stack levels used:    1
 13935 ;; Hardware stack levels required when called:    1
 13936 ;; This function calls:
 13937 ;;		_TMR3_WriteTimer
 13938 ;; This function is called by:
 13939 ;;		_pulsoCapturadoTimer3
 13940 ;; This function uses a non-reentrant model
 13941 ;;
 13942                           
 13943                           	psect	text97
 13944  003E46                     __ptext97:
 13945                           	opt stack 0
 13946  003E46                     _TMR3_Reload:
 13947                           	opt stack 12
 13948                           
 13949                           ;tmr3.c: 153: TMR3_WriteTimer(timer3ReloadVal);
 13950                           
 13951                           ;incstack = 0
 13952  003E46  C0F1  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 13953  003E4A  C0F2  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 13954  003E4E  EC2C  F01E         	call	_TMR3_WriteTimer	;wreg free
 13955  003E52  0012               	return		;funcret
 13956  003E54                     __end_of_TMR3_Reload:
 13957                           	opt stack 0
 13958                           tosu	equ	0xFFF
 13959                           tosh	equ	0xFFE
 13960                           tosl	equ	0xFFD
 13961                           pclatu	equ	0xFFB
 13962                           pclath	equ	0xFFA
 13963                           tblptru	equ	0xFF8
 13964                           tblptrh	equ	0xFF7
 13965                           tblptrl	equ	0xFF6
 13966                           tablat	equ	0xFF5
 13967                           prodh	equ	0xFF4
 13968                           prodl	equ	0xFF3
 13969                           intcon	equ	0xFF2
 13970                           postinc0	equ	0xFEE
 13971                           fsr0h	equ	0xFEA
 13972                           fsr0l	equ	0xFE9
 13973                           wreg	equ	0xFE8
 13974                           fsr1h	equ	0xFE2
 13975                           fsr1l	equ	0xFE1
 13976                           bsr	equ	0xFE0
 13977                           indf2	equ	0xFDF
 13978                           postinc2	equ	0xFDE
 13979                           postdec2	equ	0xFDD
 13980                           fsr2h	equ	0xFDA
 13981                           fsr2l	equ	0xFD9
 13982                           status	equ	0xFD8
 13983                           
 13984 ;; *************** function _TMR3_WriteTimer *****************
 13985 ;; Defined at:
 13986 ;;		line 129 in file "mcc_generated_files/tmr3.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;  timerVal        2    0[COMRAM] unsigned int 
 13989 ;; Auto vars:     Size  Location     Type
 13990 ;;		None
 13991 ;; Return value:  Size  Location     Type
 13992 ;;                  1    wreg      void 
 13993 ;; Registers used:
 13994 ;;		wreg, status,2
 13995 ;; Tracked objects:
 13996 ;;		On entry : 0/0
 13997 ;;		On exit  : 0/0
 13998 ;;		Unchanged: 0/0
 13999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14004 ;;Total ram usage:        2 bytes
 14005 ;; Hardware stack levels used:    1
 14006 ;; This function calls:
 14007 ;;		Nothing
 14008 ;; This function is called by:
 14009 ;;		_TMR3_Reload
 14010 ;; This function uses a non-reentrant model
 14011 ;;
 14012                           
 14013                           	psect	text98
 14014  003C58                     __ptext98:
 14015                           	opt stack 0
 14016  003C58                     _TMR3_WriteTimer:
 14017                           	opt stack 12
 14018                           
 14019                           ;tmr3.c: 131: if (T3CONbits.nT3SYNC == 1)
 14020                           
 14021                           ;incstack = 0
 14022  003C58  A4C9               	btfss	4041,2,c	;volatile
 14023  003C5A  D007               	goto	i2l451
 14024                           
 14025                           ;tmr3.c: 132: {
 14026                           ;tmr3.c: 134: T3CONbits.TMR3ON = 0;
 14027  003C5C  90C9               	bcf	4041,0,c	;volatile
 14028                           
 14029                           ;tmr3.c: 137: TMR3H = (timerVal >> 8);
 14030  003C5E  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 14031  003C60  6EC8               	movwf	4040,c	;volatile
 14032                           
 14033                           ;tmr3.c: 138: TMR3L = timerVal;
 14034  003C62  C001  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 14035                           
 14036                           ;tmr3.c: 141: T3CONbits.TMR3ON =1;
 14037  003C66  80C9               	bsf	4041,0,c	;volatile
 14038                           
 14039                           ;tmr3.c: 142: }
 14040  003C68  0012               	return	
 14041  003C6A                     i2l451:
 14042                           
 14043                           ;tmr3.c: 143: else
 14044                           ;tmr3.c: 144: {
 14045                           ;tmr3.c: 146: TMR3H = (timerVal >> 8);
 14046  003C6A  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 14047  003C6C  6EC8               	movwf	4040,c	;volatile
 14048                           
 14049                           ;tmr3.c: 147: TMR3L = timerVal;
 14050  003C6E  C001  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 14051  003C72  0012               	return	
 14052  003C74                     __end_of_TMR3_WriteTimer:
 14053                           	opt stack 0
 14054                           tosu	equ	0xFFF
 14055                           tosh	equ	0xFFE
 14056                           tosl	equ	0xFFD
 14057                           pclatu	equ	0xFFB
 14058                           pclath	equ	0xFFA
 14059                           tblptru	equ	0xFF8
 14060                           tblptrh	equ	0xFF7
 14061                           tblptrl	equ	0xFF6
 14062                           tablat	equ	0xFF5
 14063                           prodh	equ	0xFF4
 14064                           prodl	equ	0xFF3
 14065                           intcon	equ	0xFF2
 14066                           postinc0	equ	0xFEE
 14067                           fsr0h	equ	0xFEA
 14068                           fsr0l	equ	0xFE9
 14069                           wreg	equ	0xFE8
 14070                           fsr1h	equ	0xFE2
 14071                           fsr1l	equ	0xFE1
 14072                           bsr	equ	0xFE0
 14073                           indf2	equ	0xFDF
 14074                           postinc2	equ	0xFDE
 14075                           postdec2	equ	0xFDD
 14076                           fsr2h	equ	0xFDA
 14077                           fsr2l	equ	0xFD9
 14078                           status	equ	0xFD8
 14079                           
 14080 ;; *************** function _TMR3_ReadTimer *****************
 14081 ;; Defined at:
 14082 ;;		line 113 in file "mcc_generated_files/tmr3.c"
 14083 ;; Parameters:    Size  Location     Type
 14084 ;;		None
 14085 ;; Auto vars:     Size  Location     Type
 14086 ;;  readVal         2    4[COMRAM] unsigned int 
 14087 ;;  readValLow      1    7[COMRAM] unsigned char 
 14088 ;;  readValHigh     1    6[COMRAM] unsigned char 
 14089 ;; Return value:  Size  Location     Type
 14090 ;;                  2    0[COMRAM] unsigned int 
 14091 ;; Registers used:
 14092 ;;		wreg, status,2
 14093 ;; Tracked objects:
 14094 ;;		On entry : 0/0
 14095 ;;		On exit  : 0/0
 14096 ;;		Unchanged: 0/0
 14097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14099 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14101 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14102 ;;Total ram usage:        8 bytes
 14103 ;; Hardware stack levels used:    1
 14104 ;; This function calls:
 14105 ;;		Nothing
 14106 ;; This function is called by:
 14107 ;;		_pulsoCapturadoTimer3
 14108 ;; This function uses a non-reentrant model
 14109 ;;
 14110                           
 14111                           	psect	text99
 14112  003B9E                     __ptext99:
 14113                           	opt stack 0
 14114  003B9E                     _TMR3_ReadTimer:
 14115                           	opt stack 13
 14116                           
 14117                           ;tmr3.c: 115: uint16_t readVal;
 14118                           ;tmr3.c: 116: uint8_t readValHigh;
 14119                           ;tmr3.c: 117: uint8_t readValLow;
 14120                           ;tmr3.c: 119: T3CONbits.T3RD16 = 1;
 14121                           
 14122                           ;incstack = 0
 14123  003B9E  82C9               	bsf	4041,1,c	;volatile
 14124                           
 14125                           ;tmr3.c: 121: readValLow = TMR3L;
 14126  003BA0  CFC7 F008          	movff	4039,TMR3_ReadTimer@readValLow	;volatile
 14127                           
 14128                           ;tmr3.c: 122: readValHigh = TMR3H;
 14129  003BA4  CFC8 F007          	movff	4040,TMR3_ReadTimer@readValHigh	;volatile
 14130                           
 14131                           ;tmr3.c: 124: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 14132  003BA8  5007               	movf	TMR3_ReadTimer@readValHigh,w,c
 14133  003BAA  6E03               	movwf	??_TMR3_ReadTimer& (0+255),c
 14134  003BAC  5008               	movf	TMR3_ReadTimer@readValLow,w,c
 14135  003BAE  6E05               	movwf	TMR3_ReadTimer@readVal,c
 14136  003BB0  C003  F006         	movff	??_TMR3_ReadTimer,TMR3_ReadTimer@readVal+1
 14137                           
 14138                           ;tmr3.c: 126: return readVal;
 14139  003BB4  C005  F001         	movff	TMR3_ReadTimer@readVal,?_TMR3_ReadTimer
 14140  003BB8  C006  F002         	movff	TMR3_ReadTimer@readVal+1,?_TMR3_ReadTimer+1
 14141  003BBC  0012               	return	
 14142  003BBE                     __end_of_TMR3_ReadTimer:
 14143                           	opt stack 0
 14144                           tosu	equ	0xFFF
 14145                           tosh	equ	0xFFE
 14146                           tosl	equ	0xFFD
 14147                           pclatu	equ	0xFFB
 14148                           pclath	equ	0xFFA
 14149                           tblptru	equ	0xFF8
 14150                           tblptrh	equ	0xFF7
 14151                           tblptrl	equ	0xFF6
 14152                           tablat	equ	0xFF5
 14153                           prodh	equ	0xFF4
 14154                           prodl	equ	0xFF3
 14155                           intcon	equ	0xFF2
 14156                           postinc0	equ	0xFEE
 14157                           fsr0h	equ	0xFEA
 14158                           fsr0l	equ	0xFE9
 14159                           wreg	equ	0xFE8
 14160                           fsr1h	equ	0xFE2
 14161                           fsr1l	equ	0xFE1
 14162                           bsr	equ	0xFE0
 14163                           indf2	equ	0xFDF
 14164                           postinc2	equ	0xFDE
 14165                           postdec2	equ	0xFDD
 14166                           fsr2h	equ	0xFDA
 14167                           fsr2l	equ	0xFD9
 14168                           status	equ	0xFD8
 14169                           
 14170 ;; *************** function _TMR1_GATE_ISR *****************
 14171 ;; Defined at:
 14172 ;;		line 171 in file "mcc_generated_files/tmr1.c"
 14173 ;; Parameters:    Size  Location     Type
 14174 ;;		None
 14175 ;; Auto vars:     Size  Location     Type
 14176 ;;		None
 14177 ;; Return value:  Size  Location     Type
 14178 ;;                  1    wreg      void 
 14179 ;; Registers used:
 14180 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14181 ;; Tracked objects:
 14182 ;;		On entry : 0/0
 14183 ;;		On exit  : 0/0
 14184 ;;		Unchanged: 0/0
 14185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14190 ;;Total ram usage:        0 bytes
 14191 ;; Hardware stack levels used:    1
 14192 ;; Hardware stack levels required when called:    3
 14193 ;; This function calls:
 14194 ;;		Absolute function
 14195 ;;		_pulsoCapturadoTimer1
 14196 ;; This function is called by:
 14197 ;;		_INTERRUPT_InterruptManagerHigh
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           	psect	text100
 14202  003978                     __ptext100:
 14203                           	opt stack 0
 14204  003978                     _TMR1_GATE_ISR:
 14205                           	opt stack 12
 14206                           
 14207                           ;tmr1.c: 174: PIR5bits.TMR1GIF = 0;
 14208                           
 14209                           ;incstack = 0
 14210  003978  010E               	movlb	14	; () banked
 14211  00397A  91CF               	bcf	207,0,b	;volatile
 14212                           
 14213                           ; BSR set to: 14
 14214                           ;tmr1.c: 175: if(TMR1G_InterruptHandler)
 14215  00397C  0100               	movlb	0	; () banked
 14216  00397E  51DE               	movf	_TMR1G_InterruptHandler& (0+255),w,b
 14217  003980  11DF               	iorwf	(_TMR1G_InterruptHandler+1)& (0+255),w,b
 14218  003982  11E0               	iorwf	(_TMR1G_InterruptHandler+2)& (0+255),w,b
 14219  003984  B4D8               	btfsc	status,2,c
 14220  003986  0012               	return	
 14221                           
 14222                           ; BSR set to: 0
 14223                           ;tmr1.c: 176: {
 14224                           ;tmr1.c: 177: TMR1G_InterruptHandler();
 14225  003988  D801               	call	i2u863_48
 14226  00398A  0012               	return	
 14227  00398C                     i2u863_48:
 14228  00398C  0005               	push	
 14229  00398E  6EFA               	movwf	pclath,c
 14230  003990  51DE               	movf	_TMR1G_InterruptHandler& (0+255),w,b
 14231  003992  6EFD               	movwf	tosl,c
 14232  003994  51DF               	movf	(_TMR1G_InterruptHandler+1)& (0+255),w,b
 14233  003996  6EFE               	movwf	tosh,c
 14234  003998  51E0               	movf	(_TMR1G_InterruptHandler+2)& (0+255),w,b
 14235  00399A  6EFF               	movwf	tosu,c
 14236  00399C  50FA               	movf	pclath,w,c
 14237  00399E  0012               	return		;indir
 14238  0039A0                     __end_of_TMR1_GATE_ISR:
 14239                           	opt stack 0
 14240                           tosu	equ	0xFFF
 14241                           tosh	equ	0xFFE
 14242                           tosl	equ	0xFFD
 14243                           pclatu	equ	0xFFB
 14244                           pclath	equ	0xFFA
 14245                           tblptru	equ	0xFF8
 14246                           tblptrh	equ	0xFF7
 14247                           tblptrl	equ	0xFF6
 14248                           tablat	equ	0xFF5
 14249                           prodh	equ	0xFF4
 14250                           prodl	equ	0xFF3
 14251                           intcon	equ	0xFF2
 14252                           postinc0	equ	0xFEE
 14253                           fsr0h	equ	0xFEA
 14254                           fsr0l	equ	0xFE9
 14255                           wreg	equ	0xFE8
 14256                           fsr1h	equ	0xFE2
 14257                           fsr1l	equ	0xFE1
 14258                           bsr	equ	0xFE0
 14259                           indf2	equ	0xFDF
 14260                           postinc2	equ	0xFDE
 14261                           postdec2	equ	0xFDD
 14262                           fsr2h	equ	0xFDA
 14263                           fsr2l	equ	0xFD9
 14264                           status	equ	0xFD8
 14265                           
 14266 ;; *************** function _pulsoCapturadoTimer1 *****************
 14267 ;; Defined at:
 14268 ;;		line 216 in file "drv_ultrasonicos.c"
 14269 ;; Parameters:    Size  Location     Type
 14270 ;;		None
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;		None
 14273 ;; Return value:  Size  Location     Type
 14274 ;;                  1    wreg      void 
 14275 ;; Registers used:
 14276 ;;		wreg, status,2, cstack
 14277 ;; Tracked objects:
 14278 ;;		On entry : 0/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14286 ;;Total ram usage:        0 bytes
 14287 ;; Hardware stack levels used:    1
 14288 ;; Hardware stack levels required when called:    2
 14289 ;; This function calls:
 14290 ;;		_TMR1_ReadTimer
 14291 ;;		_TMR1_Reload
 14292 ;; This function is called by:
 14293 ;;		_usonic_init
 14294 ;;		_TMR1_GATE_ISR
 14295 ;; This function uses a non-reentrant model
 14296 ;;
 14297                           
 14298                           	psect	text101
 14299  003D00                     __ptext101:
 14300                           	opt stack 0
 14301  003D00                     _pulsoCapturadoTimer1:
 14302                           	opt stack 12
 14303                           
 14304                           ;drv_ultrasonicos.c: 218: usonic.pulsoCapturadoT1G = TMR1_ReadTimer();
 14305                           
 14306                           ;incstack = 0
 14307  003D00  ECDF  F01D         	call	_TMR1_ReadTimer	;wreg free
 14308  003D04  C001  F0BC         	movff	?_TMR1_ReadTimer,_usonic+17	;volatile
 14309  003D08  C002  F0BD         	movff	?_TMR1_ReadTimer+1,_usonic+18	;volatile
 14310                           
 14311                           ;drv_ultrasonicos.c: 219: usonic.flags.pulsoCapturadoT1G = 1;
 14312  003D0C  0100               	movlb	0	; () banked
 14313  003D0E  81BB               	bsf	(_usonic+16)& (0+255),0,b	;volatile
 14314                           
 14315                           ;drv_ultrasonicos.c: 220: TMR1_Reload();
 14316  003D10  EC2A  F01F         	call	_TMR1_Reload	;wreg free
 14317  003D14  0012               	return		;funcret
 14318  003D16                     __end_of_pulsoCapturadoTimer1:
 14319                           	opt stack 0
 14320                           tosu	equ	0xFFF
 14321                           tosh	equ	0xFFE
 14322                           tosl	equ	0xFFD
 14323                           pclatu	equ	0xFFB
 14324                           pclath	equ	0xFFA
 14325                           tblptru	equ	0xFF8
 14326                           tblptrh	equ	0xFF7
 14327                           tblptrl	equ	0xFF6
 14328                           tablat	equ	0xFF5
 14329                           prodh	equ	0xFF4
 14330                           prodl	equ	0xFF3
 14331                           intcon	equ	0xFF2
 14332                           postinc0	equ	0xFEE
 14333                           fsr0h	equ	0xFEA
 14334                           fsr0l	equ	0xFE9
 14335                           wreg	equ	0xFE8
 14336                           fsr1h	equ	0xFE2
 14337                           fsr1l	equ	0xFE1
 14338                           bsr	equ	0xFE0
 14339                           indf2	equ	0xFDF
 14340                           postinc2	equ	0xFDE
 14341                           postdec2	equ	0xFDD
 14342                           fsr2h	equ	0xFDA
 14343                           fsr2l	equ	0xFD9
 14344                           status	equ	0xFD8
 14345                           
 14346 ;; *************** function _TMR1_Reload *****************
 14347 ;; Defined at:
 14348 ;;		line 151 in file "mcc_generated_files/tmr1.c"
 14349 ;; Parameters:    Size  Location     Type
 14350 ;;		None
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;		None
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      void 
 14355 ;; Registers used:
 14356 ;;		wreg, status,2, cstack
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14366 ;;Total ram usage:        0 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    1
 14369 ;; This function calls:
 14370 ;;		_TMR1_WriteTimer
 14371 ;; This function is called by:
 14372 ;;		_pulsoCapturadoTimer1
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           	psect	text102
 14377  003E54                     __ptext102:
 14378                           	opt stack 0
 14379  003E54                     _TMR1_Reload:
 14380                           	opt stack 12
 14381                           
 14382                           ;tmr1.c: 153: TMR1_WriteTimer(timer1ReloadVal);
 14383                           
 14384                           ;incstack = 0
 14385  003E54  C0F3  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 14386  003E58  C0F4  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 14387  003E5C  EC3A  F01E         	call	_TMR1_WriteTimer	;wreg free
 14388  003E60  0012               	return		;funcret
 14389  003E62                     __end_of_TMR1_Reload:
 14390                           	opt stack 0
 14391                           tosu	equ	0xFFF
 14392                           tosh	equ	0xFFE
 14393                           tosl	equ	0xFFD
 14394                           pclatu	equ	0xFFB
 14395                           pclath	equ	0xFFA
 14396                           tblptru	equ	0xFF8
 14397                           tblptrh	equ	0xFF7
 14398                           tblptrl	equ	0xFF6
 14399                           tablat	equ	0xFF5
 14400                           prodh	equ	0xFF4
 14401                           prodl	equ	0xFF3
 14402                           intcon	equ	0xFF2
 14403                           postinc0	equ	0xFEE
 14404                           fsr0h	equ	0xFEA
 14405                           fsr0l	equ	0xFE9
 14406                           wreg	equ	0xFE8
 14407                           fsr1h	equ	0xFE2
 14408                           fsr1l	equ	0xFE1
 14409                           bsr	equ	0xFE0
 14410                           indf2	equ	0xFDF
 14411                           postinc2	equ	0xFDE
 14412                           postdec2	equ	0xFDD
 14413                           fsr2h	equ	0xFDA
 14414                           fsr2l	equ	0xFD9
 14415                           status	equ	0xFD8
 14416                           
 14417 ;; *************** function _TMR1_WriteTimer *****************
 14418 ;; Defined at:
 14419 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 14420 ;; Parameters:    Size  Location     Type
 14421 ;;  timerVal        2    0[COMRAM] unsigned int 
 14422 ;; Auto vars:     Size  Location     Type
 14423 ;;		None
 14424 ;; Return value:  Size  Location     Type
 14425 ;;                  1    wreg      void 
 14426 ;; Registers used:
 14427 ;;		wreg, status,2
 14428 ;; Tracked objects:
 14429 ;;		On entry : 0/0
 14430 ;;		On exit  : 0/0
 14431 ;;		Unchanged: 0/0
 14432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14437 ;;Total ram usage:        2 bytes
 14438 ;; Hardware stack levels used:    1
 14439 ;; This function calls:
 14440 ;;		Nothing
 14441 ;; This function is called by:
 14442 ;;		_TMR1_Reload
 14443 ;; This function uses a non-reentrant model
 14444 ;;
 14445                           
 14446                           	psect	text103
 14447  003C74                     __ptext103:
 14448                           	opt stack 0
 14449  003C74                     _TMR1_WriteTimer:
 14450                           	opt stack 12
 14451                           
 14452                           ;tmr1.c: 131: if (T1CONbits.nT1SYNC == 1)
 14453                           
 14454                           ;incstack = 0
 14455  003C74  A4CF               	btfss	4047,2,c	;volatile
 14456  003C76  D007               	goto	i2l386
 14457                           
 14458                           ;tmr1.c: 132: {
 14459                           ;tmr1.c: 134: T1CONbits.TMR1ON = 0;
 14460  003C78  90CF               	bcf	4047,0,c	;volatile
 14461                           
 14462                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 14463  003C7A  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
 14464  003C7C  6ECE               	movwf	4046,c	;volatile
 14465                           
 14466                           ;tmr1.c: 138: TMR1L = timerVal;
 14467  003C7E  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 14468                           
 14469                           ;tmr1.c: 141: T1CONbits.TMR1ON =1;
 14470  003C82  80CF               	bsf	4047,0,c	;volatile
 14471                           
 14472                           ;tmr1.c: 142: }
 14473  003C84  0012               	return	
 14474  003C86                     i2l386:
 14475                           
 14476                           ;tmr1.c: 143: else
 14477                           ;tmr1.c: 144: {
 14478                           ;tmr1.c: 146: TMR1H = (timerVal >> 8);
 14479  003C86  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
 14480  003C88  6ECE               	movwf	4046,c	;volatile
 14481                           
 14482                           ;tmr1.c: 147: TMR1L = timerVal;
 14483  003C8A  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 14484  003C8E  0012               	return	
 14485  003C90                     __end_of_TMR1_WriteTimer:
 14486                           	opt stack 0
 14487                           tosu	equ	0xFFF
 14488                           tosh	equ	0xFFE
 14489                           tosl	equ	0xFFD
 14490                           pclatu	equ	0xFFB
 14491                           pclath	equ	0xFFA
 14492                           tblptru	equ	0xFF8
 14493                           tblptrh	equ	0xFF7
 14494                           tblptrl	equ	0xFF6
 14495                           tablat	equ	0xFF5
 14496                           prodh	equ	0xFF4
 14497                           prodl	equ	0xFF3
 14498                           intcon	equ	0xFF2
 14499                           postinc0	equ	0xFEE
 14500                           fsr0h	equ	0xFEA
 14501                           fsr0l	equ	0xFE9
 14502                           wreg	equ	0xFE8
 14503                           fsr1h	equ	0xFE2
 14504                           fsr1l	equ	0xFE1
 14505                           bsr	equ	0xFE0
 14506                           indf2	equ	0xFDF
 14507                           postinc2	equ	0xFDE
 14508                           postdec2	equ	0xFDD
 14509                           fsr2h	equ	0xFDA
 14510                           fsr2l	equ	0xFD9
 14511                           status	equ	0xFD8
 14512                           
 14513 ;; *************** function _TMR1_ReadTimer *****************
 14514 ;; Defined at:
 14515 ;;		line 113 in file "mcc_generated_files/tmr1.c"
 14516 ;; Parameters:    Size  Location     Type
 14517 ;;		None
 14518 ;; Auto vars:     Size  Location     Type
 14519 ;;  readVal         2    4[COMRAM] unsigned int 
 14520 ;;  readValLow      1    7[COMRAM] unsigned char 
 14521 ;;  readValHigh     1    6[COMRAM] unsigned char 
 14522 ;; Return value:  Size  Location     Type
 14523 ;;                  2    0[COMRAM] unsigned int 
 14524 ;; Registers used:
 14525 ;;		wreg, status,2
 14526 ;; Tracked objects:
 14527 ;;		On entry : 0/0
 14528 ;;		On exit  : 0/0
 14529 ;;		Unchanged: 0/0
 14530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14532 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14534 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14535 ;;Total ram usage:        8 bytes
 14536 ;; Hardware stack levels used:    1
 14537 ;; This function calls:
 14538 ;;		Nothing
 14539 ;; This function is called by:
 14540 ;;		_pulsoCapturadoTimer1
 14541 ;; This function uses a non-reentrant model
 14542 ;;
 14543                           
 14544                           	psect	text104
 14545  003BBE                     __ptext104:
 14546                           	opt stack 0
 14547  003BBE                     _TMR1_ReadTimer:
 14548                           	opt stack 13
 14549                           
 14550                           ;tmr1.c: 115: uint16_t readVal;
 14551                           ;tmr1.c: 116: uint8_t readValHigh;
 14552                           ;tmr1.c: 117: uint8_t readValLow;
 14553                           ;tmr1.c: 119: T1CONbits.T1RD16 = 1;
 14554                           
 14555                           ;incstack = 0
 14556  003BBE  82CF               	bsf	4047,1,c	;volatile
 14557                           
 14558                           ;tmr1.c: 121: readValLow = TMR1L;
 14559  003BC0  CFCD F008          	movff	4045,TMR1_ReadTimer@readValLow	;volatile
 14560                           
 14561                           ;tmr1.c: 122: readValHigh = TMR1H;
 14562  003BC4  CFCE F007          	movff	4046,TMR1_ReadTimer@readValHigh	;volatile
 14563                           
 14564                           ;tmr1.c: 124: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 14565  003BC8  5007               	movf	TMR1_ReadTimer@readValHigh,w,c
 14566  003BCA  6E03               	movwf	??_TMR1_ReadTimer& (0+255),c
 14567  003BCC  5008               	movf	TMR1_ReadTimer@readValLow,w,c
 14568  003BCE  6E05               	movwf	TMR1_ReadTimer@readVal,c
 14569  003BD0  C003  F006         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 14570                           
 14571                           ;tmr1.c: 126: return readVal;
 14572  003BD4  C005  F001         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 14573  003BD8  C006  F002         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 14574  003BDC  0012               	return	
 14575  003BDE                     __end_of_TMR1_ReadTimer:
 14576                           	opt stack 0
 14577                           tosu	equ	0xFFF
 14578                           tosh	equ	0xFFE
 14579                           tosl	equ	0xFFD
 14580                           pclatu	equ	0xFFB
 14581                           pclath	equ	0xFFA
 14582                           tblptru	equ	0xFF8
 14583                           tblptrh	equ	0xFF7
 14584                           tblptrl	equ	0xFF6
 14585                           tablat	equ	0xFF5
 14586                           prodh	equ	0xFF4
 14587                           prodl	equ	0xFF3
 14588                           intcon	equ	0xFF2
 14589                           postinc0	equ	0xFEE
 14590                           fsr0h	equ	0xFEA
 14591                           fsr0l	equ	0xFE9
 14592                           wreg	equ	0xFE8
 14593                           fsr1h	equ	0xFE2
 14594                           fsr1l	equ	0xFE1
 14595                           bsr	equ	0xFE0
 14596                           indf2	equ	0xFDF
 14597                           postinc2	equ	0xFDE
 14598                           postdec2	equ	0xFDD
 14599                           fsr2h	equ	0xFDA
 14600                           fsr2l	equ	0xFD9
 14601                           status	equ	0xFD8
 14602                           
 14603 ;; *************** function _PIN_MANAGER_IOC *****************
 14604 ;; Defined at:
 14605 ;;		line 156 in file "mcc_generated_files/pin_manager.c"
 14606 ;; Parameters:    Size  Location     Type
 14607 ;;		None
 14608 ;; Auto vars:     Size  Location     Type
 14609 ;;		None
 14610 ;; Return value:  Size  Location     Type
 14611 ;;                  1    wreg      void 
 14612 ;; Registers used:
 14613 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14614 ;; Tracked objects:
 14615 ;;		On entry : 0/0
 14616 ;;		On exit  : 0/0
 14617 ;;		Unchanged: 0/0
 14618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14623 ;;Total ram usage:        0 bytes
 14624 ;; Hardware stack levels used:    1
 14625 ;; Hardware stack levels required when called:    8
 14626 ;; This function calls:
 14627 ;;		_IOCBF0_ISR
 14628 ;;		_IOCBF1_ISR
 14629 ;;		_IOCBF2_ISR
 14630 ;;		_IOCBF3_ISR
 14631 ;; This function is called by:
 14632 ;;		_INTERRUPT_InterruptManagerHigh
 14633 ;; This function uses a non-reentrant model
 14634 ;;
 14635                           
 14636                           	psect	text105
 14637  003AF2                     __ptext105:
 14638                           	opt stack 0
 14639  003AF2                     _PIN_MANAGER_IOC:
 14640                           	opt stack 7
 14641                           
 14642                           ;pin_manager.c: 159: if(IOCBFbits.IOCBF0 == 1)
 14643                           
 14644                           ;incstack = 0
 14645  003AF2  010F               	movlb	15	; () banked
 14646  003AF4  B112               	btfsc	18,0,b	;volatile
 14647                           
 14648                           ; BSR set to: 15
 14649                           ;pin_manager.c: 160: {
 14650                           ;pin_manager.c: 161: IOCBF0_ISR();
 14651  003AF6  EC7F  F01C         	call	_IOCBF0_ISR	;wreg free
 14652                           
 14653                           ;pin_manager.c: 162: }
 14654                           ;pin_manager.c: 164: if(IOCBFbits.IOCBF1 == 1)
 14655  003AFA  010F               	movlb	15	; () banked
 14656  003AFC  B312               	btfsc	18,1,b	;volatile
 14657                           
 14658                           ; BSR set to: 15
 14659                           ;pin_manager.c: 165: {
 14660                           ;pin_manager.c: 166: IOCBF1_ISR();
 14661  003AFE  EC6A  F01C         	call	_IOCBF1_ISR	;wreg free
 14662                           
 14663                           ;pin_manager.c: 167: }
 14664                           ;pin_manager.c: 169: if(IOCBFbits.IOCBF2 == 1)
 14665  003B02  010F               	movlb	15	; () banked
 14666  003B04  B512               	btfsc	18,2,b	;volatile
 14667                           
 14668                           ; BSR set to: 15
 14669                           ;pin_manager.c: 170: {
 14670                           ;pin_manager.c: 171: IOCBF2_ISR();
 14671  003B06  EC55  F01C         	call	_IOCBF2_ISR	;wreg free
 14672                           
 14673                           ;pin_manager.c: 172: }
 14674                           ;pin_manager.c: 174: if(IOCBFbits.IOCBF3 == 1)
 14675  003B0A  010F               	movlb	15	; () banked
 14676  003B0C  A712               	btfss	18,3,b	;volatile
 14677  003B0E  0012               	return	
 14678                           
 14679                           ; BSR set to: 15
 14680                           ;pin_manager.c: 175: {
 14681                           ;pin_manager.c: 176: IOCBF3_ISR();
 14682  003B10  EC40  F01C         	call	_IOCBF3_ISR	;wreg free
 14683  003B14  0012               	return	
 14684  003B16                     __end_of_PIN_MANAGER_IOC:
 14685                           	opt stack 0
 14686                           tosu	equ	0xFFF
 14687                           tosh	equ	0xFFE
 14688                           tosl	equ	0xFFD
 14689                           pclatu	equ	0xFFB
 14690                           pclath	equ	0xFFA
 14691                           tblptru	equ	0xFF8
 14692                           tblptrh	equ	0xFF7
 14693                           tblptrl	equ	0xFF6
 14694                           tablat	equ	0xFF5
 14695                           prodh	equ	0xFF4
 14696                           prodl	equ	0xFF3
 14697                           intcon	equ	0xFF2
 14698                           postinc0	equ	0xFEE
 14699                           fsr0h	equ	0xFEA
 14700                           fsr0l	equ	0xFE9
 14701                           wreg	equ	0xFE8
 14702                           fsr1h	equ	0xFE2
 14703                           fsr1l	equ	0xFE1
 14704                           bsr	equ	0xFE0
 14705                           indf2	equ	0xFDF
 14706                           postinc2	equ	0xFDE
 14707                           postdec2	equ	0xFDD
 14708                           fsr2h	equ	0xFDA
 14709                           fsr2l	equ	0xFD9
 14710                           status	equ	0xFD8
 14711                           
 14712 ;; *************** function _IOCBF3_ISR *****************
 14713 ;; Defined at:
 14714 ;;		line 273 in file "mcc_generated_files/pin_manager.c"
 14715 ;; Parameters:    Size  Location     Type
 14716 ;;		None
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;		None
 14719 ;; Return value:  Size  Location     Type
 14720 ;;                  1    wreg      void 
 14721 ;; Registers used:
 14722 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14723 ;; Tracked objects:
 14724 ;;		On entry : 0/0
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14732 ;;Total ram usage:        0 bytes
 14733 ;; Hardware stack levels used:    1
 14734 ;; Hardware stack levels required when called:    7
 14735 ;; This function calls:
 14736 ;;		Absolute function
 14737 ;;		_IOCBF3_DefaultInterruptHandler
 14738 ;;		_borde_isr
 14739 ;; This function is called by:
 14740 ;;		_PIN_MANAGER_IOC
 14741 ;; This function uses a non-reentrant model
 14742 ;;
 14743                           
 14744                           	psect	text106
 14745  003880                     __ptext106:
 14746                           	opt stack 0
 14747  003880                     _IOCBF3_ISR:
 14748                           	opt stack 7
 14749                           
 14750                           ;pin_manager.c: 278: if(IOCBF3_InterruptHandler)
 14751                           
 14752                           ;incstack = 0
 14753  003880  0100               	movlb	0	; () banked
 14754  003882  51E1               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 14755  003884  11E2               	iorwf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 14756  003886  11E3               	iorwf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 14757  003888  B4D8               	btfsc	status,2,c
 14758  00388A  D00C               	goto	i2u853_49
 14759                           
 14760                           ; BSR set to: 0
 14761                           ;pin_manager.c: 279: {
 14762                           ;pin_manager.c: 280: IOCBF3_InterruptHandler();
 14763  00388C  D801               	call	i2u853_48
 14764  00388E  D00A               	goto	i2u853_49
 14765  003890                     i2u853_48:
 14766  003890  0005               	push	
 14767  003892  6EFA               	movwf	pclath,c
 14768  003894  51E1               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 14769  003896  6EFD               	movwf	tosl,c
 14770  003898  51E2               	movf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 14771  00389A  6EFE               	movwf	tosh,c
 14772  00389C  51E3               	movf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 14773  00389E  6EFF               	movwf	tosu,c
 14774  0038A0  50FA               	movf	pclath,w,c
 14775  0038A2  0012               	return		;indir
 14776  0038A4                     i2u853_49:
 14777                           
 14778                           ;pin_manager.c: 281: }
 14779                           ;pin_manager.c: 282: IOCBFbits.IOCBF3 = 0;
 14780  0038A4  010F               	movlb	15	; () banked
 14781  0038A6  9712               	bcf	18,3,b	;volatile
 14782                           
 14783                           ; BSR set to: 15
 14784  0038A8  0012               	return		;funcret
 14785  0038AA                     __end_of_IOCBF3_ISR:
 14786                           	opt stack 0
 14787                           tosu	equ	0xFFF
 14788                           tosh	equ	0xFFE
 14789                           tosl	equ	0xFFD
 14790                           pclatu	equ	0xFFB
 14791                           pclath	equ	0xFFA
 14792                           tblptru	equ	0xFF8
 14793                           tblptrh	equ	0xFF7
 14794                           tblptrl	equ	0xFF6
 14795                           tablat	equ	0xFF5
 14796                           prodh	equ	0xFF4
 14797                           prodl	equ	0xFF3
 14798                           intcon	equ	0xFF2
 14799                           postinc0	equ	0xFEE
 14800                           fsr0h	equ	0xFEA
 14801                           fsr0l	equ	0xFE9
 14802                           wreg	equ	0xFE8
 14803                           fsr1h	equ	0xFE2
 14804                           fsr1l	equ	0xFE1
 14805                           bsr	equ	0xFE0
 14806                           indf2	equ	0xFDF
 14807                           postinc2	equ	0xFDE
 14808                           postdec2	equ	0xFDD
 14809                           fsr2h	equ	0xFDA
 14810                           fsr2l	equ	0xFD9
 14811                           status	equ	0xFD8
 14812                           
 14813 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 14814 ;; Defined at:
 14815 ;;		line 205 in file "mcc_generated_files/pin_manager.c"
 14816 ;; Parameters:    Size  Location     Type
 14817 ;;		None
 14818 ;; Auto vars:     Size  Location     Type
 14819 ;;		None
 14820 ;; Return value:  Size  Location     Type
 14821 ;;                  1    wreg      void 
 14822 ;; Registers used:
 14823 ;;		None
 14824 ;; Tracked objects:
 14825 ;;		On entry : 0/0
 14826 ;;		On exit  : 0/0
 14827 ;;		Unchanged: 0/0
 14828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14833 ;;Total ram usage:        0 bytes
 14834 ;; Hardware stack levels used:    1
 14835 ;; This function calls:
 14836 ;;		Nothing
 14837 ;; This function is called by:
 14838 ;;		_PIN_MANAGER_Initialize
 14839 ;;		_IOCBF0_ISR
 14840 ;; This function uses a non-reentrant model
 14841 ;;
 14842                           
 14843                           	psect	text107
 14844  003EC2                     __ptext107:
 14845                           	opt stack 0
 14846  003EC2                     _IOCBF0_DefaultInterruptHandler:
 14847                           	opt stack 13
 14848                           
 14849                           ; BSR set to: 15
 14850                           ;incstack = 0
 14851  003EC2  0012               	return		;funcret
 14852  003EC4                     __end_of_IOCBF0_DefaultInterruptHandler:
 14853                           	opt stack 0
 14854                           tosu	equ	0xFFF
 14855                           tosh	equ	0xFFE
 14856                           tosl	equ	0xFFD
 14857                           pclatu	equ	0xFFB
 14858                           pclath	equ	0xFFA
 14859                           tblptru	equ	0xFF8
 14860                           tblptrh	equ	0xFF7
 14861                           tblptrl	equ	0xFF6
 14862                           tablat	equ	0xFF5
 14863                           prodh	equ	0xFF4
 14864                           prodl	equ	0xFF3
 14865                           intcon	equ	0xFF2
 14866                           postinc0	equ	0xFEE
 14867                           fsr0h	equ	0xFEA
 14868                           fsr0l	equ	0xFE9
 14869                           wreg	equ	0xFE8
 14870                           fsr1h	equ	0xFE2
 14871                           fsr1l	equ	0xFE1
 14872                           bsr	equ	0xFE0
 14873                           indf2	equ	0xFDF
 14874                           postinc2	equ	0xFDE
 14875                           postdec2	equ	0xFDD
 14876                           fsr2h	equ	0xFDA
 14877                           fsr2l	equ	0xFD9
 14878                           status	equ	0xFD8
 14879                           
 14880 ;; *************** function _IOCBF1_DefaultInterruptHandler *****************
 14881 ;; Defined at:
 14882 ;;		line 235 in file "mcc_generated_files/pin_manager.c"
 14883 ;; Parameters:    Size  Location     Type
 14884 ;;		None
 14885 ;; Auto vars:     Size  Location     Type
 14886 ;;		None
 14887 ;; Return value:  Size  Location     Type
 14888 ;;                  1    wreg      void 
 14889 ;; Registers used:
 14890 ;;		None
 14891 ;; Tracked objects:
 14892 ;;		On entry : 0/0
 14893 ;;		On exit  : 0/0
 14894 ;;		Unchanged: 0/0
 14895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14900 ;;Total ram usage:        0 bytes
 14901 ;; Hardware stack levels used:    1
 14902 ;; This function calls:
 14903 ;;		Nothing
 14904 ;; This function is called by:
 14905 ;;		_PIN_MANAGER_Initialize
 14906 ;;		_IOCBF1_ISR
 14907 ;; This function uses a non-reentrant model
 14908 ;;
 14909                           
 14910                           	psect	text108
 14911  003EC4                     __ptext108:
 14912                           	opt stack 0
 14913  003EC4                     _IOCBF1_DefaultInterruptHandler:
 14914                           	opt stack 13
 14915                           
 14916                           ;incstack = 0
 14917  003EC4  0012               	return		;funcret
 14918  003EC6                     __end_of_IOCBF1_DefaultInterruptHandler:
 14919                           	opt stack 0
 14920                           tosu	equ	0xFFF
 14921                           tosh	equ	0xFFE
 14922                           tosl	equ	0xFFD
 14923                           pclatu	equ	0xFFB
 14924                           pclath	equ	0xFFA
 14925                           tblptru	equ	0xFF8
 14926                           tblptrh	equ	0xFF7
 14927                           tblptrl	equ	0xFF6
 14928                           tablat	equ	0xFF5
 14929                           prodh	equ	0xFF4
 14930                           prodl	equ	0xFF3
 14931                           intcon	equ	0xFF2
 14932                           postinc0	equ	0xFEE
 14933                           fsr0h	equ	0xFEA
 14934                           fsr0l	equ	0xFE9
 14935                           wreg	equ	0xFE8
 14936                           fsr1h	equ	0xFE2
 14937                           fsr1l	equ	0xFE1
 14938                           bsr	equ	0xFE0
 14939                           indf2	equ	0xFDF
 14940                           postinc2	equ	0xFDE
 14941                           postdec2	equ	0xFDD
 14942                           fsr2h	equ	0xFDA
 14943                           fsr2l	equ	0xFD9
 14944                           status	equ	0xFD8
 14945                           
 14946 ;; *************** function _IOCBF2_DefaultInterruptHandler *****************
 14947 ;; Defined at:
 14948 ;;		line 265 in file "mcc_generated_files/pin_manager.c"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;		None
 14951 ;; Auto vars:     Size  Location     Type
 14952 ;;		None
 14953 ;; Return value:  Size  Location     Type
 14954 ;;                  1    wreg      void 
 14955 ;; Registers used:
 14956 ;;		None
 14957 ;; Tracked objects:
 14958 ;;		On entry : 0/0
 14959 ;;		On exit  : 0/0
 14960 ;;		Unchanged: 0/0
 14961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14966 ;;Total ram usage:        0 bytes
 14967 ;; Hardware stack levels used:    1
 14968 ;; This function calls:
 14969 ;;		Nothing
 14970 ;; This function is called by:
 14971 ;;		_PIN_MANAGER_Initialize
 14972 ;;		_IOCBF2_ISR
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976                           	psect	text109
 14977  003EC6                     __ptext109:
 14978                           	opt stack 0
 14979  003EC6                     _IOCBF2_DefaultInterruptHandler:
 14980                           	opt stack 13
 14981                           
 14982                           ;incstack = 0
 14983  003EC6  0012               	return		;funcret
 14984  003EC8                     __end_of_IOCBF2_DefaultInterruptHandler:
 14985                           	opt stack 0
 14986                           tosu	equ	0xFFF
 14987                           tosh	equ	0xFFE
 14988                           tosl	equ	0xFFD
 14989                           pclatu	equ	0xFFB
 14990                           pclath	equ	0xFFA
 14991                           tblptru	equ	0xFF8
 14992                           tblptrh	equ	0xFF7
 14993                           tblptrl	equ	0xFF6
 14994                           tablat	equ	0xFF5
 14995                           prodh	equ	0xFF4
 14996                           prodl	equ	0xFF3
 14997                           intcon	equ	0xFF2
 14998                           postinc0	equ	0xFEE
 14999                           fsr0h	equ	0xFEA
 15000                           fsr0l	equ	0xFE9
 15001                           wreg	equ	0xFE8
 15002                           fsr1h	equ	0xFE2
 15003                           fsr1l	equ	0xFE1
 15004                           bsr	equ	0xFE0
 15005                           indf2	equ	0xFDF
 15006                           postinc2	equ	0xFDE
 15007                           postdec2	equ	0xFDD
 15008                           fsr2h	equ	0xFDA
 15009                           fsr2l	equ	0xFD9
 15010                           status	equ	0xFD8
 15011                           
 15012 ;; *************** function _borde_isr *****************
 15013 ;; Defined at:
 15014 ;;		line 16 in file "drv_cny70.c"
 15015 ;; Parameters:    Size  Location     Type
 15016 ;;		None
 15017 ;; Auto vars:     Size  Location     Type
 15018 ;;		None
 15019 ;; Return value:  Size  Location     Type
 15020 ;;                  1    wreg      void 
 15021 ;; Registers used:
 15022 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15023 ;; Tracked objects:
 15024 ;;		On entry : 0/0
 15025 ;;		On exit  : 0/0
 15026 ;;		Unchanged: 0/0
 15027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15030 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15032 ;;Total ram usage:        1 bytes
 15033 ;; Hardware stack levels used:    1
 15034 ;; Hardware stack levels required when called:    6
 15035 ;; This function calls:
 15036 ;;		_borde_detectado
 15037 ;; This function is called by:
 15038 ;;		_drv_cny70_init
 15039 ;;		_IOCBF0_ISR
 15040 ;;		_IOCBF1_ISR
 15041 ;;		_IOCBF2_ISR
 15042 ;;		_IOCBF3_ISR
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           	psect	text110
 15047  0032B0                     __ptext110:
 15048                           	opt stack 0
 15049  0032B0                     _borde_isr:
 15050                           	opt stack 7
 15051                           
 15052                           ;drv_cny70.c: 18: _delay((unsigned long)((15)*(32000000/4000.0)));
 15053                           
 15054                           ;incstack = 0
 15055  0032B0  0E9C               	movlw	156
 15056  0032B2  6E4A               	movwf	??_borde_isr& (0+255),c
 15057  0032B4  0ED7               	movlw	215
 15058  0032B6                     i2u892_47:
 15059  0032B6  2EE8               	decfsz	wreg,f,c
 15060  0032B8  D7FE               	bra	i2u892_47
 15061  0032BA  2E4A               	decfsz	??_borde_isr& (0+255),f,c
 15062  0032BC  D7FC               	bra	i2u892_47
 15063  0032BE  F000               	nop	
 15064                           
 15065                           ;drv_cny70.c: 20: bordes.frontleft = PORTBbits.RB3;
 15066  0032C0  A68E               	btfss	3982,3,c	;volatile
 15067  0032C2  D002               	bra	i2u502_45
 15068  0032C4  805D               	bsf	_bordes,0,c	;volatile
 15069  0032C6  D001               	bra	i2u502_47
 15070  0032C8                     i2u502_45:
 15071  0032C8  905D               	bcf	_bordes,0,c	;volatile
 15072  0032CA                     i2u502_47:
 15073                           
 15074                           ;drv_cny70.c: 21: bordes.frontright = PORTBbits.RB1;
 15075  0032CA  A28E               	btfss	3982,1,c	;volatile
 15076  0032CC  D002               	bra	i2u503_45
 15077  0032CE  825D               	bsf	_bordes,1,c	;volatile
 15078  0032D0  D001               	bra	i2u503_47
 15079  0032D2                     i2u503_45:
 15080  0032D2  925D               	bcf	_bordes,1,c	;volatile
 15081  0032D4                     i2u503_47:
 15082                           
 15083                           ;drv_cny70.c: 22: bordes.backleft = PORTBbits.RB2;
 15084  0032D4  A48E               	btfss	3982,2,c	;volatile
 15085  0032D6  D002               	bra	i2u504_45
 15086  0032D8  845D               	bsf	_bordes,2,c	;volatile
 15087  0032DA  D001               	bra	i2u504_47
 15088  0032DC                     i2u504_45:
 15089  0032DC  945D               	bcf	_bordes,2,c	;volatile
 15090  0032DE                     i2u504_47:
 15091                           
 15092                           ;drv_cny70.c: 23: bordes.backright = 1U - PORTBbits.RB0;
 15093  0032DE  A08E               	btfss	3982,0,c	;volatile
 15094  0032E0  D002               	goto	i2u505_40
 15095  0032E2  0E01               	movlw	1
 15096  0032E4  D001               	goto	i2u505_46
 15097  0032E6                     i2u505_40:
 15098  0032E6  0E00               	movlw	0
 15099  0032E8                     i2u505_46:
 15100  0032E8  0800               	sublw	0
 15101  0032EA  6E4A               	movwf	??_borde_isr& (0+255),c
 15102  0032EC  0E01               	movlw	1
 15103  0032EE  264A               	addwf	??_borde_isr,f,c
 15104  0032F0  464A               	rlncf	??_borde_isr,f,c
 15105  0032F2  464A               	rlncf	??_borde_isr,f,c
 15106  0032F4  464A               	rlncf	??_borde_isr,f,c
 15107  0032F6  505D               	movf	_bordes,w,c	;volatile
 15108  0032F8  184A               	xorwf	??_borde_isr,w,c
 15109  0032FA  0BF7               	andlw	-9
 15110  0032FC  184A               	xorwf	??_borde_isr,w,c
 15111  0032FE  6E5D               	movwf	_bordes,c	;volatile
 15112                           
 15113                           ;drv_cny70.c: 24: borde_detectado();
 15114  003300  EC8F  F017         	call	_borde_detectado	;wreg free
 15115  003304  0012               	return		;funcret
 15116  003306                     __end_of_borde_isr:
 15117                           	opt stack 0
 15118                           tosu	equ	0xFFF
 15119                           tosh	equ	0xFFE
 15120                           tosl	equ	0xFFD
 15121                           pclatu	equ	0xFFB
 15122                           pclath	equ	0xFFA
 15123                           tblptru	equ	0xFF8
 15124                           tblptrh	equ	0xFF7
 15125                           tblptrl	equ	0xFF6
 15126                           tablat	equ	0xFF5
 15127                           prodh	equ	0xFF4
 15128                           prodl	equ	0xFF3
 15129                           intcon	equ	0xFF2
 15130                           postinc0	equ	0xFEE
 15131                           fsr0h	equ	0xFEA
 15132                           fsr0l	equ	0xFE9
 15133                           wreg	equ	0xFE8
 15134                           fsr1h	equ	0xFE2
 15135                           fsr1l	equ	0xFE1
 15136                           bsr	equ	0xFE0
 15137                           indf2	equ	0xFDF
 15138                           postinc2	equ	0xFDE
 15139                           postdec2	equ	0xFDD
 15140                           fsr2h	equ	0xFDA
 15141                           fsr2l	equ	0xFD9
 15142                           status	equ	0xFD8
 15143                           
 15144 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 15145 ;; Defined at:
 15146 ;;		line 295 in file "mcc_generated_files/pin_manager.c"
 15147 ;; Parameters:    Size  Location     Type
 15148 ;;		None
 15149 ;; Auto vars:     Size  Location     Type
 15150 ;;		None
 15151 ;; Return value:  Size  Location     Type
 15152 ;;                  1    wreg      void 
 15153 ;; Registers used:
 15154 ;;		None
 15155 ;; Tracked objects:
 15156 ;;		On entry : 0/0
 15157 ;;		On exit  : 0/0
 15158 ;;		Unchanged: 0/0
 15159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15164 ;;Total ram usage:        0 bytes
 15165 ;; Hardware stack levels used:    1
 15166 ;; This function calls:
 15167 ;;		Nothing
 15168 ;; This function is called by:
 15169 ;;		_PIN_MANAGER_Initialize
 15170 ;;		_IOCBF3_ISR
 15171 ;; This function uses a non-reentrant model
 15172 ;;
 15173                           
 15174                           	psect	text111
 15175  003EC8                     __ptext111:
 15176                           	opt stack 0
 15177  003EC8                     _IOCBF3_DefaultInterruptHandler:
 15178                           	opt stack 13
 15179                           
 15180                           ;incstack = 0
 15181  003EC8  0012               	return		;funcret
 15182  003ECA                     __end_of_IOCBF3_DefaultInterruptHandler:
 15183                           	opt stack 0
 15184                           tosu	equ	0xFFF
 15185                           tosh	equ	0xFFE
 15186                           tosl	equ	0xFFD
 15187                           pclatu	equ	0xFFB
 15188                           pclath	equ	0xFFA
 15189                           tblptru	equ	0xFF8
 15190                           tblptrh	equ	0xFF7
 15191                           tblptrl	equ	0xFF6
 15192                           tablat	equ	0xFF5
 15193                           prodh	equ	0xFF4
 15194                           prodl	equ	0xFF3
 15195                           intcon	equ	0xFF2
 15196                           postinc0	equ	0xFEE
 15197                           fsr0h	equ	0xFEA
 15198                           fsr0l	equ	0xFE9
 15199                           wreg	equ	0xFE8
 15200                           fsr1h	equ	0xFE2
 15201                           fsr1l	equ	0xFE1
 15202                           bsr	equ	0xFE0
 15203                           indf2	equ	0xFDF
 15204                           postinc2	equ	0xFDE
 15205                           postdec2	equ	0xFDD
 15206                           fsr2h	equ	0xFDA
 15207                           fsr2l	equ	0xFD9
 15208                           status	equ	0xFD8
 15209                           
 15210 ;; *************** function _IOCBF2_ISR *****************
 15211 ;; Defined at:
 15212 ;;		line 243 in file "mcc_generated_files/pin_manager.c"
 15213 ;; Parameters:    Size  Location     Type
 15214 ;;		None
 15215 ;; Auto vars:     Size  Location     Type
 15216 ;;		None
 15217 ;; Return value:  Size  Location     Type
 15218 ;;                  1    wreg      void 
 15219 ;; Registers used:
 15220 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15221 ;; Tracked objects:
 15222 ;;		On entry : 0/0
 15223 ;;		On exit  : 0/0
 15224 ;;		Unchanged: 0/0
 15225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15230 ;;Total ram usage:        0 bytes
 15231 ;; Hardware stack levels used:    1
 15232 ;; Hardware stack levels required when called:    7
 15233 ;; This function calls:
 15234 ;;		Absolute function
 15235 ;;		_IOCBF2_DefaultInterruptHandler
 15236 ;;		_borde_isr
 15237 ;; This function is called by:
 15238 ;;		_PIN_MANAGER_IOC
 15239 ;; This function uses a non-reentrant model
 15240 ;;
 15241                           
 15242                           	psect	text112
 15243  0038AA                     __ptext112:
 15244                           	opt stack 0
 15245  0038AA                     _IOCBF2_ISR:
 15246                           	opt stack 7
 15247                           
 15248                           ;pin_manager.c: 248: if(IOCBF2_InterruptHandler)
 15249                           
 15250                           ;incstack = 0
 15251  0038AA  0100               	movlb	0	; () banked
 15252  0038AC  51E4               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 15253  0038AE  11E5               	iorwf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 15254  0038B0  11E6               	iorwf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 15255  0038B2  B4D8               	btfsc	status,2,c
 15256  0038B4  D00C               	goto	i2u851_49
 15257                           
 15258                           ; BSR set to: 0
 15259                           ;pin_manager.c: 249: {
 15260                           ;pin_manager.c: 250: IOCBF2_InterruptHandler();
 15261  0038B6  D801               	call	i2u851_48
 15262  0038B8  D00A               	goto	i2u851_49
 15263  0038BA                     i2u851_48:
 15264  0038BA  0005               	push	
 15265  0038BC  6EFA               	movwf	pclath,c
 15266  0038BE  51E4               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 15267  0038C0  6EFD               	movwf	tosl,c
 15268  0038C2  51E5               	movf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 15269  0038C4  6EFE               	movwf	tosh,c
 15270  0038C6  51E6               	movf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 15271  0038C8  6EFF               	movwf	tosu,c
 15272  0038CA  50FA               	movf	pclath,w,c
 15273  0038CC  0012               	return		;indir
 15274  0038CE                     i2u851_49:
 15275                           
 15276                           ;pin_manager.c: 251: }
 15277                           ;pin_manager.c: 252: IOCBFbits.IOCBF2 = 0;
 15278  0038CE  010F               	movlb	15	; () banked
 15279  0038D0  9512               	bcf	18,2,b	;volatile
 15280                           
 15281                           ; BSR set to: 15
 15282  0038D2  0012               	return		;funcret
 15283  0038D4                     __end_of_IOCBF2_ISR:
 15284                           	opt stack 0
 15285                           tosu	equ	0xFFF
 15286                           tosh	equ	0xFFE
 15287                           tosl	equ	0xFFD
 15288                           pclatu	equ	0xFFB
 15289                           pclath	equ	0xFFA
 15290                           tblptru	equ	0xFF8
 15291                           tblptrh	equ	0xFF7
 15292                           tblptrl	equ	0xFF6
 15293                           tablat	equ	0xFF5
 15294                           prodh	equ	0xFF4
 15295                           prodl	equ	0xFF3
 15296                           intcon	equ	0xFF2
 15297                           postinc0	equ	0xFEE
 15298                           fsr0h	equ	0xFEA
 15299                           fsr0l	equ	0xFE9
 15300                           wreg	equ	0xFE8
 15301                           fsr1h	equ	0xFE2
 15302                           fsr1l	equ	0xFE1
 15303                           bsr	equ	0xFE0
 15304                           indf2	equ	0xFDF
 15305                           postinc2	equ	0xFDE
 15306                           postdec2	equ	0xFDD
 15307                           fsr2h	equ	0xFDA
 15308                           fsr2l	equ	0xFD9
 15309                           status	equ	0xFD8
 15310                           
 15311 ;; *************** function _IOCBF1_ISR *****************
 15312 ;; Defined at:
 15313 ;;		line 213 in file "mcc_generated_files/pin_manager.c"
 15314 ;; Parameters:    Size  Location     Type
 15315 ;;		None
 15316 ;; Auto vars:     Size  Location     Type
 15317 ;;		None
 15318 ;; Return value:  Size  Location     Type
 15319 ;;                  1    wreg      void 
 15320 ;; Registers used:
 15321 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15322 ;; Tracked objects:
 15323 ;;		On entry : 0/0
 15324 ;;		On exit  : 0/0
 15325 ;;		Unchanged: 0/0
 15326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15331 ;;Total ram usage:        0 bytes
 15332 ;; Hardware stack levels used:    1
 15333 ;; Hardware stack levels required when called:    7
 15334 ;; This function calls:
 15335 ;;		Absolute function
 15336 ;;		_IOCBF1_DefaultInterruptHandler
 15337 ;;		_borde_isr
 15338 ;; This function is called by:
 15339 ;;		_PIN_MANAGER_IOC
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343                           	psect	text113
 15344  0038D4                     __ptext113:
 15345                           	opt stack 0
 15346  0038D4                     _IOCBF1_ISR:
 15347                           	opt stack 7
 15348                           
 15349                           ;pin_manager.c: 218: if(IOCBF1_InterruptHandler)
 15350                           
 15351                           ; BSR set to: 15
 15352                           ;incstack = 0
 15353  0038D4  0100               	movlb	0	; () banked
 15354  0038D6  51E7               	movf	_IOCBF1_InterruptHandler& (0+255),w,b
 15355  0038D8  11E8               	iorwf	(_IOCBF1_InterruptHandler+1)& (0+255),w,b
 15356  0038DA  11E9               	iorwf	(_IOCBF1_InterruptHandler+2)& (0+255),w,b
 15357  0038DC  B4D8               	btfsc	status,2,c
 15358  0038DE  D00C               	goto	i2u849_49
 15359                           
 15360                           ; BSR set to: 0
 15361                           ;pin_manager.c: 219: {
 15362                           ;pin_manager.c: 220: IOCBF1_InterruptHandler();
 15363  0038E0  D801               	call	i2u849_48
 15364  0038E2  D00A               	goto	i2u849_49
 15365  0038E4                     i2u849_48:
 15366  0038E4  0005               	push	
 15367  0038E6  6EFA               	movwf	pclath,c
 15368  0038E8  51E7               	movf	_IOCBF1_InterruptHandler& (0+255),w,b
 15369  0038EA  6EFD               	movwf	tosl,c
 15370  0038EC  51E8               	movf	(_IOCBF1_InterruptHandler+1)& (0+255),w,b
 15371  0038EE  6EFE               	movwf	tosh,c
 15372  0038F0  51E9               	movf	(_IOCBF1_InterruptHandler+2)& (0+255),w,b
 15373  0038F2  6EFF               	movwf	tosu,c
 15374  0038F4  50FA               	movf	pclath,w,c
 15375  0038F6  0012               	return		;indir
 15376  0038F8                     i2u849_49:
 15377                           
 15378                           ;pin_manager.c: 221: }
 15379                           ;pin_manager.c: 222: IOCBFbits.IOCBF1 = 0;
 15380  0038F8  010F               	movlb	15	; () banked
 15381  0038FA  9312               	bcf	18,1,b	;volatile
 15382                           
 15383                           ; BSR set to: 15
 15384  0038FC  0012               	return		;funcret
 15385  0038FE                     __end_of_IOCBF1_ISR:
 15386                           	opt stack 0
 15387                           tosu	equ	0xFFF
 15388                           tosh	equ	0xFFE
 15389                           tosl	equ	0xFFD
 15390                           pclatu	equ	0xFFB
 15391                           pclath	equ	0xFFA
 15392                           tblptru	equ	0xFF8
 15393                           tblptrh	equ	0xFF7
 15394                           tblptrl	equ	0xFF6
 15395                           tablat	equ	0xFF5
 15396                           prodh	equ	0xFF4
 15397                           prodl	equ	0xFF3
 15398                           intcon	equ	0xFF2
 15399                           postinc0	equ	0xFEE
 15400                           fsr0h	equ	0xFEA
 15401                           fsr0l	equ	0xFE9
 15402                           wreg	equ	0xFE8
 15403                           fsr1h	equ	0xFE2
 15404                           fsr1l	equ	0xFE1
 15405                           bsr	equ	0xFE0
 15406                           indf2	equ	0xFDF
 15407                           postinc2	equ	0xFDE
 15408                           postdec2	equ	0xFDD
 15409                           fsr2h	equ	0xFDA
 15410                           fsr2l	equ	0xFD9
 15411                           status	equ	0xFD8
 15412                           
 15413 ;; *************** function _IOCBF0_ISR *****************
 15414 ;; Defined at:
 15415 ;;		line 183 in file "mcc_generated_files/pin_manager.c"
 15416 ;; Parameters:    Size  Location     Type
 15417 ;;		None
 15418 ;; Auto vars:     Size  Location     Type
 15419 ;;		None
 15420 ;; Return value:  Size  Location     Type
 15421 ;;                  1    wreg      void 
 15422 ;; Registers used:
 15423 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15424 ;; Tracked objects:
 15425 ;;		On entry : 0/0
 15426 ;;		On exit  : 0/0
 15427 ;;		Unchanged: 0/0
 15428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15433 ;;Total ram usage:        0 bytes
 15434 ;; Hardware stack levels used:    1
 15435 ;; Hardware stack levels required when called:    7
 15436 ;; This function calls:
 15437 ;;		Absolute function
 15438 ;;		_IOCBF0_DefaultInterruptHandler
 15439 ;;		_borde_isr
 15440 ;; This function is called by:
 15441 ;;		_PIN_MANAGER_IOC
 15442 ;; This function uses a non-reentrant model
 15443 ;;
 15444                           
 15445                           	psect	text114
 15446  0038FE                     __ptext114:
 15447                           	opt stack 0
 15448  0038FE                     _IOCBF0_ISR:
 15449                           	opt stack 7
 15450                           
 15451                           ;pin_manager.c: 188: if(IOCBF0_InterruptHandler)
 15452                           
 15453                           ; BSR set to: 15
 15454                           ;incstack = 0
 15455  0038FE  0100               	movlb	0	; () banked
 15456  003900  51EA               	movf	_IOCBF0_InterruptHandler& (0+255),w,b
 15457  003902  11EB               	iorwf	(_IOCBF0_InterruptHandler+1)& (0+255),w,b
 15458  003904  11EC               	iorwf	(_IOCBF0_InterruptHandler+2)& (0+255),w,b
 15459  003906  B4D8               	btfsc	status,2,c
 15460  003908  D00C               	goto	i2u847_49
 15461                           
 15462                           ; BSR set to: 0
 15463                           ;pin_manager.c: 189: {
 15464                           ;pin_manager.c: 190: IOCBF0_InterruptHandler();
 15465  00390A  D801               	call	i2u847_48
 15466  00390C  D00A               	goto	i2u847_49
 15467  00390E                     i2u847_48:
 15468  00390E  0005               	push	
 15469  003910  6EFA               	movwf	pclath,c
 15470  003912  51EA               	movf	_IOCBF0_InterruptHandler& (0+255),w,b
 15471  003914  6EFD               	movwf	tosl,c
 15472  003916  51EB               	movf	(_IOCBF0_InterruptHandler+1)& (0+255),w,b
 15473  003918  6EFE               	movwf	tosh,c
 15474  00391A  51EC               	movf	(_IOCBF0_InterruptHandler+2)& (0+255),w,b
 15475  00391C  6EFF               	movwf	tosu,c
 15476  00391E  50FA               	movf	pclath,w,c
 15477  003920  0012               	return		;indir
 15478  003922                     i2u847_49:
 15479                           
 15480                           ;pin_manager.c: 191: }
 15481                           ;pin_manager.c: 192: IOCBFbits.IOCBF0 = 0;
 15482  003922  010F               	movlb	15	; () banked
 15483  003924  9112               	bcf	18,0,b	;volatile
 15484                           
 15485                           ; BSR set to: 15
 15486  003926  0012               	return		;funcret
 15487  003928                     __end_of_IOCBF0_ISR:
 15488                           	opt stack 0
 15489                           tosu	equ	0xFFF
 15490                           tosh	equ	0xFFE
 15491                           tosl	equ	0xFFD
 15492                           pclatu	equ	0xFFB
 15493                           pclath	equ	0xFFA
 15494                           tblptru	equ	0xFF8
 15495                           tblptrh	equ	0xFF7
 15496                           tblptrl	equ	0xFF6
 15497                           tablat	equ	0xFF5
 15498                           prodh	equ	0xFF4
 15499                           prodl	equ	0xFF3
 15500                           intcon	equ	0xFF2
 15501                           postinc0	equ	0xFEE
 15502                           fsr0h	equ	0xFEA
 15503                           fsr0l	equ	0xFE9
 15504                           wreg	equ	0xFE8
 15505                           fsr1h	equ	0xFE2
 15506                           fsr1l	equ	0xFE1
 15507                           bsr	equ	0xFE0
 15508                           indf2	equ	0xFDF
 15509                           postinc2	equ	0xFDE
 15510                           postdec2	equ	0xFDD
 15511                           fsr2h	equ	0xFDA
 15512                           fsr2l	equ	0xFD9
 15513                           status	equ	0xFD8
 15514                           
 15515 ;; *************** function _borde_detectado *****************
 15516 ;; Defined at:
 15517 ;;		line 5 in file "api_detectorDeBordes.c"
 15518 ;; Parameters:    Size  Location     Type
 15519 ;;		None
 15520 ;; Auto vars:     Size  Location     Type
 15521 ;;		None
 15522 ;; Return value:  Size  Location     Type
 15523 ;;                  1    wreg      void 
 15524 ;; Registers used:
 15525 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15526 ;; Tracked objects:
 15527 ;;		On entry : 0/0
 15528 ;;		On exit  : 0/0
 15529 ;;		Unchanged: 0/0
 15530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15533 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15534 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15535 ;;Total ram usage:        6 bytes
 15536 ;; Hardware stack levels used:    1
 15537 ;; Hardware stack levels required when called:    5
 15538 ;; This function calls:
 15539 ;;		_acomodarse
 15540 ;; This function is called by:
 15541 ;;		_borde_isr
 15542 ;; This function uses a non-reentrant model
 15543 ;;
 15544                           
 15545                           	psect	text115
 15546  002F1E                     __ptext115:
 15547                           	opt stack 0
 15548  002F1E                     _borde_detectado:
 15549                           	opt stack 7
 15550                           
 15551                           ;api_detectorDeBordes.c: 7: if (bordes.frontleft + bordes.frontright + bordes.backleft +
      +                           bordes.backright)
 15552                           
 15553                           ; BSR set to: 15
 15554                           ;incstack = 0
 15555  002F1E  A25D               	btfss	_bordes,1,c	;volatile
 15556  002F20  D003               	goto	i2u469_40
 15557  002F22  6A44               	clrf	??_borde_detectado& (0+255),c
 15558  002F24  2A44               	incf	??_borde_detectado& (0+255),f,c
 15559  002F26  D001               	goto	i2u469_48
 15560  002F28                     i2u469_40:
 15561  002F28  6A44               	clrf	??_borde_detectado& (0+255),c
 15562  002F2A                     i2u469_48:
 15563  002F2A  5044               	movf	??_borde_detectado,w,c
 15564  002F2C  A05D               	btfss	_bordes,0,c	;volatile
 15565  002F2E  D003               	goto	i2u470_40
 15566  002F30  6A45               	clrf	(??_borde_detectado+1)& (0+255),c
 15567  002F32  2A45               	incf	(??_borde_detectado+1)& (0+255),f,c
 15568  002F34  D001               	goto	i2u470_48
 15569  002F36                     i2u470_40:
 15570  002F36  6A45               	clrf	(??_borde_detectado+1)& (0+255),c
 15571  002F38                     i2u470_48:
 15572  002F38  C045  F046         	movff	??_borde_detectado+1,??_borde_detectado+2
 15573  002F3C  6A47               	clrf	(??_borde_detectado+3)& (0+255),c
 15574  002F3E  2646               	addwf	??_borde_detectado+2,f,c
 15575  002F40  0E00               	movlw	0
 15576  002F42  2247               	addwfc	??_borde_detectado+3,f,c
 15577  002F44  A45D               	btfss	_bordes,2,c	;volatile
 15578  002F46  D003               	goto	i2u471_40
 15579  002F48  6A48               	clrf	(??_borde_detectado+4)& (0+255),c
 15580  002F4A  2A48               	incf	(??_borde_detectado+4)& (0+255),f,c
 15581  002F4C  D001               	goto	i2u471_48
 15582  002F4E                     i2u471_40:
 15583  002F4E  6A48               	clrf	(??_borde_detectado+4)& (0+255),c
 15584  002F50                     i2u471_48:
 15585  002F50  5048               	movf	??_borde_detectado+4,w,c
 15586  002F52  2646               	addwf	??_borde_detectado+2,f,c
 15587  002F54  0E00               	movlw	0
 15588  002F56  2247               	addwfc	??_borde_detectado+3,f,c
 15589  002F58  A65D               	btfss	_bordes,3,c	;volatile
 15590  002F5A  D003               	goto	i2u472_40
 15591  002F5C  6A49               	clrf	(??_borde_detectado+5)& (0+255),c
 15592  002F5E  2A49               	incf	(??_borde_detectado+5)& (0+255),f,c
 15593  002F60  D001               	goto	i2u472_48
 15594  002F62                     i2u472_40:
 15595  002F62  6A49               	clrf	(??_borde_detectado+5)& (0+255),c
 15596  002F64                     i2u472_48:
 15597  002F64  5049               	movf	??_borde_detectado+5,w,c
 15598  002F66  2646               	addwf	??_borde_detectado+2,f,c
 15599  002F68  0E00               	movlw	0
 15600  002F6A  2247               	addwfc	??_borde_detectado+3,f,c
 15601  002F6C  5046               	movf	??_borde_detectado+2,w,c
 15602  002F6E  1047               	iorwf	??_borde_detectado+3,w,c
 15603  002F70  B4D8               	btfsc	status,2,c
 15604  002F72  0012               	return	
 15605                           
 15606                           ;api_detectorDeBordes.c: 8: {
 15607                           ;api_detectorDeBordes.c: 9: interrupt_flags.borde_detectado = 1;
 15608  002F74  0100               	movlb	0	; () banked
 15609  002F76  85C4               	bsf	(_interrupt_flags+2)& (0+255),2,b	;volatile
 15610                           
 15611                           ;api_detectorDeBordes.c: 12: if (interrupt_flags.borde_activado && usonic.distancia.fron
      +                          t > 20 && interrupt_flags.manualOverride == 0)
 15612  002F78  A7C4               	btfss	(_interrupt_flags+2)& (0+255),3,b	;volatile
 15613  002F7A  D008               	goto	i2l1249
 15614                           
 15615                           ; BSR set to: 0
 15616  002F7C  0E14               	movlw	20
 15617  002F7E  65AD               	cpfsgt	(_usonic+2)& (0+255),b	;volatile
 15618  002F80  D005               	goto	i2l1249
 15619                           
 15620                           ; BSR set to: 0
 15621  002F82  BDC4               	btfsc	(_interrupt_flags+2)& (0+255),6,b	;volatile
 15622  002F84  D003               	goto	i2l1249
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;api_detectorDeBordes.c: 13: acomodarse();
 15626  002F86  EC5A  F014         	call	_acomodarse	;wreg free
 15627  002F8A  0012               	return	
 15628  002F8C                     i2l1249:
 15629                           
 15630                           ; BSR set to: 0
 15631                           ;api_detectorDeBordes.c: 14: else
 15632                           ;api_detectorDeBordes.c: 15: interrupt_flags.borde_detectado = 0;
 15633  002F8C  95C4               	bcf	(_interrupt_flags+2)& (0+255),2,b	;volatile
 15634                           
 15635                           ; BSR set to: 0
 15636  002F8E  0012               	return	
 15637  002F90                     __end_of_borde_detectado:
 15638                           	opt stack 0
 15639                           tosu	equ	0xFFF
 15640                           tosh	equ	0xFFE
 15641                           tosl	equ	0xFFD
 15642                           pclatu	equ	0xFFB
 15643                           pclath	equ	0xFFA
 15644                           tblptru	equ	0xFF8
 15645                           tblptrh	equ	0xFF7
 15646                           tblptrl	equ	0xFF6
 15647                           tablat	equ	0xFF5
 15648                           prodh	equ	0xFF4
 15649                           prodl	equ	0xFF3
 15650                           intcon	equ	0xFF2
 15651                           postinc0	equ	0xFEE
 15652                           fsr0h	equ	0xFEA
 15653                           fsr0l	equ	0xFE9
 15654                           wreg	equ	0xFE8
 15655                           fsr1h	equ	0xFE2
 15656                           fsr1l	equ	0xFE1
 15657                           bsr	equ	0xFE0
 15658                           indf2	equ	0xFDF
 15659                           postinc2	equ	0xFDE
 15660                           postdec2	equ	0xFDD
 15661                           fsr2h	equ	0xFDA
 15662                           fsr2l	equ	0xFD9
 15663                           status	equ	0xFD8
 15664                           
 15665 ;; *************** function _acomodarse *****************
 15666 ;; Defined at:
 15667 ;;		line 103 in file "main.c"
 15668 ;; Parameters:    Size  Location     Type
 15669 ;;		None
 15670 ;; Auto vars:     Size  Location     Type
 15671 ;;		None
 15672 ;; Return value:  Size  Location     Type
 15673 ;;                  1    wreg      void 
 15674 ;; Registers used:
 15675 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15676 ;; Tracked objects:
 15677 ;;		On entry : 0/0
 15678 ;;		On exit  : 0/0
 15679 ;;		Unchanged: 0/0
 15680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15685 ;;Total ram usage:        0 bytes
 15686 ;; Hardware stack levels used:    1
 15687 ;; Hardware stack levels required when called:    4
 15688 ;; This function calls:
 15689 ;;		i2_girarXgradosderecha
 15690 ;;		i2_girarXgradosizquierda
 15691 ;;		i2_marcharAdelanteTiempo
 15692 ;;		i2_marcharAtrasTiempo
 15693 ;; This function is called by:
 15694 ;;		_borde_detectado
 15695 ;; This function uses a non-reentrant model
 15696 ;;
 15697                           
 15698                           	psect	text116
 15699  0028B4                     __ptext116:
 15700                           	opt stack 0
 15701  0028B4                     _acomodarse:
 15702                           	opt stack 7
 15703                           
 15704                           ;main.c: 105: interrupt_flags.borde_activado = 0;
 15705                           
 15706                           ;incstack = 0
 15707  0028B4  0100               	movlb	0	; () banked
 15708  0028B6  97C4               	bcf	(_interrupt_flags+2)& (0+255),3,b	;volatile
 15709                           
 15710                           ;main.c: 111: if (bordes.backleft && bordes.backright)
 15711  0028B8  B45D               	btfsc	_bordes,2,c	;volatile
 15712                           
 15713                           ; BSR set to: 0
 15714  0028BA  A65D               	btfss	_bordes,3,c	;volatile
 15715  0028BC  D009               	goto	i2l691
 15716                           
 15717                           ; BSR set to: 0
 15718                           ;main.c: 112: {
 15719                           ;main.c: 113: marcharAdelanteTiempo(3000U);
 15720  0028BE  0E0B               	movlw	11
 15721  0028C0  6E41               	movwf	i2marcharAdelanteTiempo@tiempo+1,c
 15722  0028C2  0EB8               	movlw	184
 15723  0028C4  6E40               	movwf	i2marcharAdelanteTiempo@tiempo,c
 15724  0028C6  ECFF  F01D         	call	i2_marcharAdelanteTiempo	;wreg free
 15725                           
 15726                           ;main.c: 114: interrupt_flags.borde_activado = 1;
 15727  0028CA  0100               	movlb	0	; () banked
 15728  0028CC  87C4               	bsf	(_interrupt_flags+2)& (0+255),3,b	;volatile
 15729                           
 15730                           ; BSR set to: 0
 15731                           ;main.c: 115: return;
 15732  0028CE  0012               	return	
 15733  0028D0                     i2l691:
 15734                           
 15735                           ; BSR set to: 0
 15736                           ;main.c: 116: }
 15737                           ;main.c: 118: if (bordes.backleft)
 15738  0028D0  A45D               	btfss	_bordes,2,c	;volatile
 15739  0028D2  D00F               	goto	i2l693
 15740                           
 15741                           ; BSR set to: 0
 15742                           ;main.c: 119: {
 15743                           ;main.c: 120: marcharAdelanteTiempo(3000U);
 15744  0028D4  0E0B               	movlw	11
 15745  0028D6  6E41               	movwf	i2marcharAdelanteTiempo@tiempo+1,c
 15746  0028D8  0EB8               	movlw	184
 15747  0028DA  6E40               	movwf	i2marcharAdelanteTiempo@tiempo,c
 15748  0028DC  ECFF  F01D         	call	i2_marcharAdelanteTiempo	;wreg free
 15749                           
 15750                           ;main.c: 121: girarXgradosderecha(45U);
 15751  0028E0  0E00               	movlw	0
 15752  0028E2  6E41               	movwf	i2girarXgradosderecha@grados+1,c
 15753  0028E4  0E2D               	movlw	45
 15754  0028E6  6E40               	movwf	i2girarXgradosderecha@grados,c
 15755  0028E8  EC6C  F018         	call	i2_girarXgradosderecha	;wreg free
 15756                           
 15757                           ;main.c: 122: interrupt_flags.borde_activado = 1;
 15758  0028EC  0100               	movlb	0	; () banked
 15759  0028EE  87C4               	bsf	(_interrupt_flags+2)& (0+255),3,b	;volatile
 15760                           
 15761                           ; BSR set to: 0
 15762                           ;main.c: 123: return;
 15763  0028F0  0012               	return	
 15764  0028F2                     i2l693:
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;main.c: 124: }
 15768                           ;main.c: 126: if (bordes.backright)
 15769  0028F2  A65D               	btfss	_bordes,3,c	;volatile
 15770  0028F4  D00F               	goto	i2l694
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;main.c: 127: {
 15774                           ;main.c: 128: marcharAdelanteTiempo(3000U);
 15775  0028F6  0E0B               	movlw	11
 15776  0028F8  6E41               	movwf	i2marcharAdelanteTiempo@tiempo+1,c
 15777  0028FA  0EB8               	movlw	184
 15778  0028FC  6E40               	movwf	i2marcharAdelanteTiempo@tiempo,c
 15779  0028FE  ECFF  F01D         	call	i2_marcharAdelanteTiempo	;wreg free
 15780                           
 15781                           ;main.c: 129: girarXgradosizquierda(45U);
 15782  002902  0E00               	movlw	0
 15783  002904  6E41               	movwf	i2girarXgradosizquierda@grados+1,c
 15784  002906  0E2D               	movlw	45
 15785  002908  6E40               	movwf	i2girarXgradosizquierda@grados,c
 15786  00290A  EC38  F018         	call	i2_girarXgradosizquierda	;wreg free
 15787                           
 15788                           ;main.c: 130: interrupt_flags.borde_activado = 1;
 15789  00290E  0100               	movlb	0	; () banked
 15790  002910  87C4               	bsf	(_interrupt_flags+2)& (0+255),3,b	;volatile
 15791                           
 15792                           ; BSR set to: 0
 15793                           ;main.c: 131: return;
 15794  002912  0012               	return	
 15795  002914                     i2l694:
 15796                           
 15797                           ; BSR set to: 0
 15798                           ;main.c: 132: }
 15799                           ;main.c: 134: if (bordes.frontleft && bordes.frontright)
 15800  002914  B05D               	btfsc	_bordes,0,c	;volatile
 15801                           
 15802                           ; BSR set to: 0
 15803  002916  A25D               	btfss	_bordes,1,c	;volatile
 15804  002918  D009               	goto	i2l695
 15805                           
 15806                           ; BSR set to: 0
 15807                           ;main.c: 135: {
 15808                           ;main.c: 136: marcharAtrasTiempo(3000U);
 15809  00291A  0E0B               	movlw	11
 15810  00291C  6E41               	movwf	i2marcharAtrasTiempo@tiempo+1,c
 15811  00291E  0EB8               	movlw	184
 15812  002920  6E40               	movwf	i2marcharAtrasTiempo@tiempo,c
 15813  002922  ECEF  F01D         	call	i2_marcharAtrasTiempo	;wreg free
 15814                           
 15815                           ;main.c: 137: interrupt_flags.borde_activado = 1;
 15816  002926  0100               	movlb	0	; () banked
 15817  002928  87C4               	bsf	(_interrupt_flags+2)& (0+255),3,b	;volatile
 15818                           
 15819                           ; BSR set to: 0
 15820                           ;main.c: 138: return;
 15821  00292A  0012               	return	
 15822  00292C                     i2l695:
 15823                           
 15824                           ; BSR set to: 0
 15825                           ;main.c: 139: }
 15826                           ;main.c: 141: if (bordes.frontright)
 15827  00292C  A25D               	btfss	_bordes,1,c	;volatile
 15828  00292E  D00F               	goto	i2l696
 15829                           
 15830                           ; BSR set to: 0
 15831                           ;main.c: 142: {
 15832                           ;main.c: 143: marcharAtrasTiempo(3000U);
 15833  002930  0E0B               	movlw	11
 15834  002932  6E41               	movwf	i2marcharAtrasTiempo@tiempo+1,c
 15835  002934  0EB8               	movlw	184
 15836  002936  6E40               	movwf	i2marcharAtrasTiempo@tiempo,c
 15837  002938  ECEF  F01D         	call	i2_marcharAtrasTiempo	;wreg free
 15838                           
 15839                           ;main.c: 144: girarXgradosizquierda(90U);
 15840  00293C  0E00               	movlw	0
 15841  00293E  6E41               	movwf	i2girarXgradosizquierda@grados+1,c
 15842  002940  0E5A               	movlw	90
 15843  002942  6E40               	movwf	i2girarXgradosizquierda@grados,c
 15844  002944  EC38  F018         	call	i2_girarXgradosizquierda	;wreg free
 15845                           
 15846                           ;main.c: 145: interrupt_flags.borde_activado = 1;
 15847  002948  0100               	movlb	0	; () banked
 15848  00294A  87C4               	bsf	(_interrupt_flags+2)& (0+255),3,b	;volatile
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;main.c: 146: return;
 15852  00294C  0012               	return	
 15853  00294E                     i2l696:
 15854                           
 15855                           ; BSR set to: 0
 15856                           ;main.c: 147: }
 15857                           ;main.c: 149: if (bordes.frontleft)
 15858  00294E  A05D               	btfss	_bordes,0,c	;volatile
 15859  002950  0012               	return	
 15860                           
 15861                           ; BSR set to: 0
 15862                           ;main.c: 150: {
 15863                           ;main.c: 151: marcharAtrasTiempo(3000U);
 15864  002952  0E0B               	movlw	11
 15865  002954  6E41               	movwf	i2marcharAtrasTiempo@tiempo+1,c
 15866  002956  0EB8               	movlw	184
 15867  002958  6E40               	movwf	i2marcharAtrasTiempo@tiempo,c
 15868  00295A  ECEF  F01D         	call	i2_marcharAtrasTiempo	;wreg free
 15869                           
 15870                           ;main.c: 152: girarXgradosderecha(90U);
 15871  00295E  0E00               	movlw	0
 15872  002960  6E41               	movwf	i2girarXgradosderecha@grados+1,c
 15873  002962  0E5A               	movlw	90
 15874  002964  6E40               	movwf	i2girarXgradosderecha@grados,c
 15875  002966  EC6C  F018         	call	i2_girarXgradosderecha	;wreg free
 15876                           
 15877                           ;main.c: 153: interrupt_flags.borde_activado = 1;
 15878  00296A  0100               	movlb	0	; () banked
 15879  00296C  87C4               	bsf	(_interrupt_flags+2)& (0+255),3,b	;volatile
 15880                           
 15881                           ; BSR set to: 0
 15882                           ;main.c: 154: return;
 15883  00296E  0012               	return	
 15884  002970                     __end_of_acomodarse:
 15885                           	opt stack 0
 15886                           tosu	equ	0xFFF
 15887                           tosh	equ	0xFFE
 15888                           tosl	equ	0xFFD
 15889                           pclatu	equ	0xFFB
 15890                           pclath	equ	0xFFA
 15891                           tblptru	equ	0xFF8
 15892                           tblptrh	equ	0xFF7
 15893                           tblptrl	equ	0xFF6
 15894                           tablat	equ	0xFF5
 15895                           prodh	equ	0xFF4
 15896                           prodl	equ	0xFF3
 15897                           intcon	equ	0xFF2
 15898                           postinc0	equ	0xFEE
 15899                           fsr0h	equ	0xFEA
 15900                           fsr0l	equ	0xFE9
 15901                           wreg	equ	0xFE8
 15902                           fsr1h	equ	0xFE2
 15903                           fsr1l	equ	0xFE1
 15904                           bsr	equ	0xFE0
 15905                           indf2	equ	0xFDF
 15906                           postinc2	equ	0xFDE
 15907                           postdec2	equ	0xFDD
 15908                           fsr2h	equ	0xFDA
 15909                           fsr2l	equ	0xFD9
 15910                           status	equ	0xFD8
 15911                           
 15912 ;; *************** function i2_marcharAtrasTiempo *****************
 15913 ;; Defined at:
 15914 ;;		line 22 in file "api_locomocion.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;  tiempo          2   63[COMRAM] unsigned int 
 15917 ;; Auto vars:     Size  Location     Type
 15918 ;;		None
 15919 ;; Return value:  Size  Location     Type
 15920 ;;                  1    wreg      unsigned char 
 15921 ;; Registers used:
 15922 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15923 ;; Tracked objects:
 15924 ;;		On entry : 0/0
 15925 ;;		On exit  : 0/0
 15926 ;;		Unchanged: 0/0
 15927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15932 ;;Total ram usage:        2 bytes
 15933 ;; Hardware stack levels used:    1
 15934 ;; Hardware stack levels required when called:    3
 15935 ;; This function calls:
 15936 ;;		i2_delayTmr
 15937 ;;		i2_detenerse
 15938 ;;		i2_marcharAtras
 15939 ;; This function is called by:
 15940 ;;		_acomodarse
 15941 ;; This function uses a non-reentrant model
 15942 ;;
 15943                           
 15944                           	psect	text117
 15945  003BDE                     __ptext117:
 15946                           	opt stack 0
 15947  003BDE                     i2_marcharAtrasTiempo:
 15948                           	opt stack 7
 15949                           
 15950                           ;api_locomocion.c: 24: marcharAtras();
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;incstack = 0
 15954  003BDE  ECAF  F01E         	call	i2_marcharAtras	;wreg free
 15955                           
 15956                           ;api_locomocion.c: 25: ultimoMovimiento = 1;
 15957  003BE2  0E01               	movlw	1
 15958  003BE4  6E5E               	movwf	_ultimoMovimiento,c
 15959                           
 15960                           ;api_locomocion.c: 26: if (delayTmr(tiempo))
 15961  003BE6  C040  F03B         	movff	i2marcharAtrasTiempo@tiempo,i2delayTmr@miliSegundos
 15962  003BEA  C041  F03C         	movff	i2marcharAtrasTiempo@tiempo+1,i2delayTmr@miliSegundos+1
 15963  003BEE  EC8B  F013         	call	i2_delayTmr	;wreg free
 15964  003BF2  0900               	iorlw	0
 15965  003BF4  A4D8               	btfss	status,2,c
 15966  003BF6  0012               	return	
 15967                           
 15968                           ;api_locomocion.c: 28: detenerse();
 15969                           
 15970                           ;api_locomocion.c: 27: return 1;
 15971                           ;	Return value of i2_marcharAtrasTiempo is never used
 15972  003BF8  EC31  F01F         	call	i2_detenerse	;wreg free
 15973  003BFC  0012               	return	
 15974  003BFE                     __end_ofi2_marcharAtrasTiempo:
 15975                           	opt stack 0
 15976                           tosu	equ	0xFFF
 15977                           tosh	equ	0xFFE
 15978                           tosl	equ	0xFFD
 15979                           pclatu	equ	0xFFB
 15980                           pclath	equ	0xFFA
 15981                           tblptru	equ	0xFF8
 15982                           tblptrh	equ	0xFF7
 15983                           tblptrl	equ	0xFF6
 15984                           tablat	equ	0xFF5
 15985                           prodh	equ	0xFF4
 15986                           prodl	equ	0xFF3
 15987                           intcon	equ	0xFF2
 15988                           postinc0	equ	0xFEE
 15989                           fsr0h	equ	0xFEA
 15990                           fsr0l	equ	0xFE9
 15991                           wreg	equ	0xFE8
 15992                           fsr1h	equ	0xFE2
 15993                           fsr1l	equ	0xFE1
 15994                           bsr	equ	0xFE0
 15995                           indf2	equ	0xFDF
 15996                           postinc2	equ	0xFDE
 15997                           postdec2	equ	0xFDD
 15998                           fsr2h	equ	0xFDA
 15999                           fsr2l	equ	0xFD9
 16000                           status	equ	0xFD8
 16001                           
 16002 ;; *************** function i2_marcharAtras *****************
 16003 ;; Defined at:
 16004 ;;		line 32 in file "api_locomocion.c"
 16005 ;; Parameters:    Size  Location     Type
 16006 ;;		None
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;		None
 16009 ;; Return value:  Size  Location     Type
 16010 ;;                  1    wreg      void 
 16011 ;; Registers used:
 16012 ;;		wreg, status,2, status,0, cstack
 16013 ;; Tracked objects:
 16014 ;;		On entry : 0/0
 16015 ;;		On exit  : 0/0
 16016 ;;		Unchanged: 0/0
 16017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16022 ;;Total ram usage:        0 bytes
 16023 ;; Hardware stack levels used:    1
 16024 ;; Hardware stack levels required when called:    1
 16025 ;; This function calls:
 16026 ;;		i2_motorDe_set
 16027 ;;		i2_motorIz_set
 16028 ;; This function is called by:
 16029 ;;		i2_marcharAtrasTiempo
 16030 ;; This function uses a non-reentrant model
 16031 ;;
 16032                           
 16033                           	psect	text118
 16034  003D5E                     __ptext118:
 16035                           	opt stack 0
 16036  003D5E                     i2_marcharAtras:
 16037                           	opt stack 8
 16038                           
 16039                           ;api_locomocion.c: 34: motorIz_set(2);
 16040                           
 16041                           ;incstack = 0
 16042  003D5E  0E02               	movlw	2
 16043  003D60  ECFF  F01B         	call	i2_motorIz_set
 16044                           
 16045                           ;api_locomocion.c: 35: motorDe_set(2);
 16046  003D64  0E02               	movlw	2
 16047  003D66  EC15  F01C         	call	i2_motorDe_set
 16048                           
 16049                           ;api_locomocion.c: 36: ultimoMovimiento = 1;
 16050  003D6A  0E01               	movlw	1
 16051  003D6C  6E5E               	movwf	_ultimoMovimiento,c
 16052  003D6E  0012               	return		;funcret
 16053  003D70                     __end_ofi2_marcharAtras:
 16054                           	opt stack 0
 16055                           tosu	equ	0xFFF
 16056                           tosh	equ	0xFFE
 16057                           tosl	equ	0xFFD
 16058                           pclatu	equ	0xFFB
 16059                           pclath	equ	0xFFA
 16060                           tblptru	equ	0xFF8
 16061                           tblptrh	equ	0xFF7
 16062                           tblptrl	equ	0xFF6
 16063                           tablat	equ	0xFF5
 16064                           prodh	equ	0xFF4
 16065                           prodl	equ	0xFF3
 16066                           intcon	equ	0xFF2
 16067                           postinc0	equ	0xFEE
 16068                           fsr0h	equ	0xFEA
 16069                           fsr0l	equ	0xFE9
 16070                           wreg	equ	0xFE8
 16071                           fsr1h	equ	0xFE2
 16072                           fsr1l	equ	0xFE1
 16073                           bsr	equ	0xFE0
 16074                           indf2	equ	0xFDF
 16075                           postinc2	equ	0xFDE
 16076                           postdec2	equ	0xFDD
 16077                           fsr2h	equ	0xFDA
 16078                           fsr2l	equ	0xFD9
 16079                           status	equ	0xFD8
 16080                           
 16081 ;; *************** function i2_marcharAdelanteTiempo *****************
 16082 ;; Defined at:
 16083 ;;		line 12 in file "api_locomocion.c"
 16084 ;; Parameters:    Size  Location     Type
 16085 ;;  tiempo          2   63[COMRAM] unsigned int 
 16086 ;; Auto vars:     Size  Location     Type
 16087 ;;		None
 16088 ;; Return value:  Size  Location     Type
 16089 ;;                  1    wreg      unsigned char 
 16090 ;; Registers used:
 16091 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16092 ;; Tracked objects:
 16093 ;;		On entry : 0/0
 16094 ;;		On exit  : 0/0
 16095 ;;		Unchanged: 0/0
 16096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16101 ;;Total ram usage:        2 bytes
 16102 ;; Hardware stack levels used:    1
 16103 ;; Hardware stack levels required when called:    3
 16104 ;; This function calls:
 16105 ;;		i2_delayTmr
 16106 ;;		i2_detenerse
 16107 ;;		i2_marcharAdelante
 16108 ;; This function is called by:
 16109 ;;		_acomodarse
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           	psect	text119
 16114  003BFE                     __ptext119:
 16115                           	opt stack 0
 16116  003BFE                     i2_marcharAdelanteTiempo:
 16117                           	opt stack 7
 16118                           
 16119                           ;api_locomocion.c: 14: marcharAdelante();
 16120                           
 16121                           ;incstack = 0
 16122  003BFE  ECB8  F01E         	call	i2_marcharAdelante	;wreg free
 16123                           
 16124                           ;api_locomocion.c: 15: ultimoMovimiento = 0;
 16125  003C02  0E00               	movlw	0
 16126  003C04  6E5E               	movwf	_ultimoMovimiento,c
 16127                           
 16128                           ;api_locomocion.c: 16: if (delayTmr(tiempo))
 16129  003C06  C040  F03B         	movff	i2marcharAdelanteTiempo@tiempo,i2delayTmr@miliSegundos
 16130  003C0A  C041  F03C         	movff	i2marcharAdelanteTiempo@tiempo+1,i2delayTmr@miliSegundos+1
 16131  003C0E  EC8B  F013         	call	i2_delayTmr	;wreg free
 16132  003C12  0900               	iorlw	0
 16133  003C14  A4D8               	btfss	status,2,c
 16134  003C16  0012               	return	
 16135                           
 16136                           ;api_locomocion.c: 18: detenerse();
 16137                           
 16138                           ;api_locomocion.c: 17: return 1;
 16139                           ;	Return value of i2_marcharAdelanteTiempo is never used
 16140  003C18  EC31  F01F         	call	i2_detenerse	;wreg free
 16141  003C1C  0012               	return	
 16142  003C1E                     __end_ofi2_marcharAdelanteTiempo:
 16143                           	opt stack 0
 16144                           tosu	equ	0xFFF
 16145                           tosh	equ	0xFFE
 16146                           tosl	equ	0xFFD
 16147                           pclatu	equ	0xFFB
 16148                           pclath	equ	0xFFA
 16149                           tblptru	equ	0xFF8
 16150                           tblptrh	equ	0xFF7
 16151                           tblptrl	equ	0xFF6
 16152                           tablat	equ	0xFF5
 16153                           prodh	equ	0xFF4
 16154                           prodl	equ	0xFF3
 16155                           intcon	equ	0xFF2
 16156                           postinc0	equ	0xFEE
 16157                           fsr0h	equ	0xFEA
 16158                           fsr0l	equ	0xFE9
 16159                           wreg	equ	0xFE8
 16160                           fsr1h	equ	0xFE2
 16161                           fsr1l	equ	0xFE1
 16162                           bsr	equ	0xFE0
 16163                           indf2	equ	0xFDF
 16164                           postinc2	equ	0xFDE
 16165                           postdec2	equ	0xFDD
 16166                           fsr2h	equ	0xFDA
 16167                           fsr2l	equ	0xFD9
 16168                           status	equ	0xFD8
 16169                           
 16170 ;; *************** function i2_marcharAdelante *****************
 16171 ;; Defined at:
 16172 ;;		line 5 in file "api_locomocion.c"
 16173 ;; Parameters:    Size  Location     Type
 16174 ;;		None
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;		None
 16177 ;; Return value:  Size  Location     Type
 16178 ;;                  1    wreg      void 
 16179 ;; Registers used:
 16180 ;;		wreg, status,2, status,0, cstack
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/0
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16190 ;;Total ram usage:        0 bytes
 16191 ;; Hardware stack levels used:    1
 16192 ;; Hardware stack levels required when called:    1
 16193 ;; This function calls:
 16194 ;;		i2_motorDe_set
 16195 ;;		i2_motorIz_set
 16196 ;; This function is called by:
 16197 ;;		i2_marcharAdelanteTiempo
 16198 ;; This function uses a non-reentrant model
 16199 ;;
 16200                           
 16201                           	psect	text120
 16202  003D70                     __ptext120:
 16203                           	opt stack 0
 16204  003D70                     i2_marcharAdelante:
 16205                           	opt stack 8
 16206                           
 16207                           ;api_locomocion.c: 7: motorIz_set(1);
 16208                           
 16209                           ;incstack = 0
 16210  003D70  0E01               	movlw	1
 16211  003D72  ECFF  F01B         	call	i2_motorIz_set
 16212                           
 16213                           ;api_locomocion.c: 8: motorDe_set(1);
 16214  003D76  0E01               	movlw	1
 16215  003D78  EC15  F01C         	call	i2_motorDe_set
 16216                           
 16217                           ;api_locomocion.c: 9: ultimoMovimiento = 0;
 16218  003D7C  0E00               	movlw	0
 16219  003D7E  6E5E               	movwf	_ultimoMovimiento,c
 16220  003D80  0012               	return		;funcret
 16221  003D82                     __end_ofi2_marcharAdelante:
 16222                           	opt stack 0
 16223                           tosu	equ	0xFFF
 16224                           tosh	equ	0xFFE
 16225                           tosl	equ	0xFFD
 16226                           pclatu	equ	0xFFB
 16227                           pclath	equ	0xFFA
 16228                           tblptru	equ	0xFF8
 16229                           tblptrh	equ	0xFF7
 16230                           tblptrl	equ	0xFF6
 16231                           tablat	equ	0xFF5
 16232                           prodh	equ	0xFF4
 16233                           prodl	equ	0xFF3
 16234                           intcon	equ	0xFF2
 16235                           postinc0	equ	0xFEE
 16236                           fsr0h	equ	0xFEA
 16237                           fsr0l	equ	0xFE9
 16238                           wreg	equ	0xFE8
 16239                           fsr1h	equ	0xFE2
 16240                           fsr1l	equ	0xFE1
 16241                           bsr	equ	0xFE0
 16242                           indf2	equ	0xFDF
 16243                           postinc2	equ	0xFDE
 16244                           postdec2	equ	0xFDD
 16245                           fsr2h	equ	0xFDA
 16246                           fsr2l	equ	0xFD9
 16247                           status	equ	0xFD8
 16248                           
 16249 ;; *************** function i2_girarXgradosizquierda *****************
 16250 ;; Defined at:
 16251 ;;		line 39 in file "api_locomocion.c"
 16252 ;; Parameters:    Size  Location     Type
 16253 ;;  grados          2   63[COMRAM] unsigned int 
 16254 ;; Auto vars:     Size  Location     Type
 16255 ;;		None
 16256 ;; Return value:  Size  Location     Type
 16257 ;;                  1    wreg      unsigned char 
 16258 ;; Registers used:
 16259 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16260 ;; Tracked objects:
 16261 ;;		On entry : 0/0
 16262 ;;		On exit  : 0/0
 16263 ;;		Unchanged: 0/0
 16264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16268 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16269 ;;Total ram usage:        4 bytes
 16270 ;; Hardware stack levels used:    1
 16271 ;; Hardware stack levels required when called:    3
 16272 ;; This function calls:
 16273 ;;		i2___ftmul
 16274 ;;		i2___fttol
 16275 ;;		i2___lwtoft
 16276 ;;		i2_delayTmr
 16277 ;;		i2_detenerse
 16278 ;;		i2_motorDe_set
 16279 ;;		i2_motorIz_set
 16280 ;; This function is called by:
 16281 ;;		_acomodarse
 16282 ;; This function uses a non-reentrant model
 16283 ;;
 16284                           
 16285                           	psect	text121
 16286  003070                     __ptext121:
 16287                           	opt stack 0
 16288  003070                     i2_girarXgradosizquierda:
 16289                           	opt stack 7
 16290                           
 16291                           ;api_locomocion.c: 41: motorIz_set(2);
 16292                           
 16293                           ;incstack = 0
 16294  003070  0E02               	movlw	2
 16295  003072  ECFF  F01B         	call	i2_motorIz_set
 16296                           
 16297                           ;api_locomocion.c: 42: motorDe_set(1);
 16298  003076  0E01               	movlw	1
 16299  003078  EC15  F01C         	call	i2_motorDe_set
 16300                           
 16301                           ;api_locomocion.c: 43: ultimoMovimiento = 2;
 16302  00307C  0E02               	movlw	2
 16303  00307E  6E5E               	movwf	_ultimoMovimiento,c
 16304                           
 16305                           ;api_locomocion.c: 44: if (delayTmr(grados * 24.113))
 16306  003080  0EE7               	movlw	231
 16307  003082  6E0F               	movwf	i2___ftmul@f2,c
 16308  003084  0EC0               	movlw	192
 16309  003086  6E10               	movwf	i2___ftmul@f2+1,c
 16310  003088  0E41               	movlw	65
 16311  00308A  6E11               	movwf	i2___ftmul@f2+2,c
 16312  00308C  C040  F009         	movff	i2girarXgradosizquierda@grados,i2___lwtoft@c
 16313  003090  C041  F00A         	movff	i2girarXgradosizquierda@grados+1,i2___lwtoft@c+1
 16314  003094  EC8B  F01D         	call	i2___lwtoft	;wreg free
 16315  003098  C009  F00C         	movff	?i2___lwtoft,i2___ftmul@f1
 16316  00309C  C00A  F00D         	movff	?i2___lwtoft+1,i2___ftmul@f1+1
 16317  0030A0  C00B  F00E         	movff	?i2___lwtoft+2,i2___ftmul@f1+2
 16318  0030A4  EC45  F011         	call	i2___ftmul	;wreg free
 16319  0030A8  C00C  F02A         	movff	?i2___ftmul,i2___fttol@f1
 16320  0030AC  C00D  F02B         	movff	?i2___ftmul+1,i2___fttol@f1+1
 16321  0030B0  C00E  F02C         	movff	?i2___ftmul+2,i2___fttol@f1+2
 16322  0030B4  ECCB  F010         	call	i2___fttol	;wreg free
 16323  0030B8  C02A  F042         	movff	?i2___fttol,i2_girarXgradosizquierda$4083
 16324  0030BC  C02B  F043         	movff	?i2___fttol+1,i2_girarXgradosizquierda$4083+1
 16325                           
 16326                           ;api_locomocion.c: 44: if (delayTmr(grados * 24.113))
 16327  0030C0  C042  F03B         	movff	i2_girarXgradosizquierda$4083,i2delayTmr@miliSegundos
 16328  0030C4  C043  F03C         	movff	i2_girarXgradosizquierda$4083+1,i2delayTmr@miliSegundos+1
 16329  0030C8  EC8B  F013         	call	i2_delayTmr	;wreg free
 16330  0030CC  0900               	iorlw	0
 16331  0030CE  A4D8               	btfss	status,2,c
 16332  0030D0  0012               	return	
 16333                           
 16334                           ;api_locomocion.c: 46: detenerse();
 16335                           
 16336                           ;api_locomocion.c: 45: return 1;
 16337                           ;	Return value of i2_girarXgradosizquierda is never used
 16338  0030D2  EC31  F01F         	call	i2_detenerse	;wreg free
 16339  0030D6  0012               	return	
 16340  0030D8                     __end_ofi2_girarXgradosizquierda:
 16341                           	opt stack 0
 16342                           tosu	equ	0xFFF
 16343                           tosh	equ	0xFFE
 16344                           tosl	equ	0xFFD
 16345                           pclatu	equ	0xFFB
 16346                           pclath	equ	0xFFA
 16347                           tblptru	equ	0xFF8
 16348                           tblptrh	equ	0xFF7
 16349                           tblptrl	equ	0xFF6
 16350                           tablat	equ	0xFF5
 16351                           prodh	equ	0xFF4
 16352                           prodl	equ	0xFF3
 16353                           intcon	equ	0xFF2
 16354                           postinc0	equ	0xFEE
 16355                           fsr0h	equ	0xFEA
 16356                           fsr0l	equ	0xFE9
 16357                           wreg	equ	0xFE8
 16358                           fsr1h	equ	0xFE2
 16359                           fsr1l	equ	0xFE1
 16360                           bsr	equ	0xFE0
 16361                           indf2	equ	0xFDF
 16362                           postinc2	equ	0xFDE
 16363                           postdec2	equ	0xFDD
 16364                           fsr2h	equ	0xFDA
 16365                           fsr2l	equ	0xFD9
 16366                           status	equ	0xFD8
 16367                           
 16368 ;; *************** function i2_girarXgradosderecha *****************
 16369 ;; Defined at:
 16370 ;;		line 50 in file "api_locomocion.c"
 16371 ;; Parameters:    Size  Location     Type
 16372 ;;  grados          2   63[COMRAM] unsigned int 
 16373 ;; Auto vars:     Size  Location     Type
 16374 ;;		None
 16375 ;; Return value:  Size  Location     Type
 16376 ;;                  1    wreg      unsigned char 
 16377 ;; Registers used:
 16378 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16379 ;; Tracked objects:
 16380 ;;		On entry : 0/0
 16381 ;;		On exit  : 0/0
 16382 ;;		Unchanged: 0/0
 16383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16388 ;;Total ram usage:        4 bytes
 16389 ;; Hardware stack levels used:    1
 16390 ;; Hardware stack levels required when called:    3
 16391 ;; This function calls:
 16392 ;;		i2___ftmul
 16393 ;;		i2___fttol
 16394 ;;		i2___lwtoft
 16395 ;;		i2_delayTmr
 16396 ;;		i2_detenerse
 16397 ;;		i2_motorDe_set
 16398 ;;		i2_motorIz_set
 16399 ;; This function is called by:
 16400 ;;		_acomodarse
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           
 16404                           	psect	text122
 16405  0030D8                     __ptext122:
 16406                           	opt stack 0
 16407  0030D8                     i2_girarXgradosderecha:
 16408                           	opt stack 7
 16409                           
 16410                           ;api_locomocion.c: 52: motorIz_set(1);
 16411                           
 16412                           ;incstack = 0
 16413  0030D8  0E01               	movlw	1
 16414  0030DA  ECFF  F01B         	call	i2_motorIz_set
 16415                           
 16416                           ;api_locomocion.c: 53: motorDe_set(2);
 16417  0030DE  0E02               	movlw	2
 16418  0030E0  EC15  F01C         	call	i2_motorDe_set
 16419                           
 16420                           ;api_locomocion.c: 54: ultimoMovimiento = 3;
 16421  0030E4  0E03               	movlw	3
 16422  0030E6  6E5E               	movwf	_ultimoMovimiento,c
 16423                           
 16424                           ;api_locomocion.c: 55: if (delayTmr(grados * 24.113))
 16425  0030E8  0EE7               	movlw	231
 16426  0030EA  6E0F               	movwf	i2___ftmul@f2,c
 16427  0030EC  0EC0               	movlw	192
 16428  0030EE  6E10               	movwf	i2___ftmul@f2+1,c
 16429  0030F0  0E41               	movlw	65
 16430  0030F2  6E11               	movwf	i2___ftmul@f2+2,c
 16431  0030F4  C040  F009         	movff	i2girarXgradosderecha@grados,i2___lwtoft@c
 16432  0030F8  C041  F00A         	movff	i2girarXgradosderecha@grados+1,i2___lwtoft@c+1
 16433  0030FC  EC8B  F01D         	call	i2___lwtoft	;wreg free
 16434  003100  C009  F00C         	movff	?i2___lwtoft,i2___ftmul@f1
 16435  003104  C00A  F00D         	movff	?i2___lwtoft+1,i2___ftmul@f1+1
 16436  003108  C00B  F00E         	movff	?i2___lwtoft+2,i2___ftmul@f1+2
 16437  00310C  EC45  F011         	call	i2___ftmul	;wreg free
 16438  003110  C00C  F02A         	movff	?i2___ftmul,i2___fttol@f1
 16439  003114  C00D  F02B         	movff	?i2___ftmul+1,i2___fttol@f1+1
 16440  003118  C00E  F02C         	movff	?i2___ftmul+2,i2___fttol@f1+2
 16441  00311C  ECCB  F010         	call	i2___fttol	;wreg free
 16442  003120  C02A  F042         	movff	?i2___fttol,i2_girarXgradosderecha$4084
 16443  003124  C02B  F043         	movff	?i2___fttol+1,i2_girarXgradosderecha$4084+1
 16444                           
 16445                           ;api_locomocion.c: 55: if (delayTmr(grados * 24.113))
 16446  003128  C042  F03B         	movff	i2_girarXgradosderecha$4084,i2delayTmr@miliSegundos
 16447  00312C  C043  F03C         	movff	i2_girarXgradosderecha$4084+1,i2delayTmr@miliSegundos+1
 16448  003130  EC8B  F013         	call	i2_delayTmr	;wreg free
 16449  003134  0900               	iorlw	0
 16450  003136  A4D8               	btfss	status,2,c
 16451  003138  0012               	return	
 16452                           
 16453                           ;api_locomocion.c: 57: detenerse();
 16454                           
 16455                           ;api_locomocion.c: 56: return 1;
 16456                           ;	Return value of i2_girarXgradosderecha is never used
 16457  00313A  EC31  F01F         	call	i2_detenerse	;wreg free
 16458  00313E  0012               	return	
 16459  003140                     __end_ofi2_girarXgradosderecha:
 16460                           	opt stack 0
 16461                           tosu	equ	0xFFF
 16462                           tosh	equ	0xFFE
 16463                           tosl	equ	0xFFD
 16464                           pclatu	equ	0xFFB
 16465                           pclath	equ	0xFFA
 16466                           tblptru	equ	0xFF8
 16467                           tblptrh	equ	0xFF7
 16468                           tblptrl	equ	0xFF6
 16469                           tablat	equ	0xFF5
 16470                           prodh	equ	0xFF4
 16471                           prodl	equ	0xFF3
 16472                           intcon	equ	0xFF2
 16473                           postinc0	equ	0xFEE
 16474                           fsr0h	equ	0xFEA
 16475                           fsr0l	equ	0xFE9
 16476                           wreg	equ	0xFE8
 16477                           fsr1h	equ	0xFE2
 16478                           fsr1l	equ	0xFE1
 16479                           bsr	equ	0xFE0
 16480                           indf2	equ	0xFDF
 16481                           postinc2	equ	0xFDE
 16482                           postdec2	equ	0xFDD
 16483                           fsr2h	equ	0xFDA
 16484                           fsr2l	equ	0xFD9
 16485                           status	equ	0xFD8
 16486                           
 16487 ;; *************** function i2_detenerse *****************
 16488 ;; Defined at:
 16489 ;;		line 117 in file "api_locomocion.c"
 16490 ;; Parameters:    Size  Location     Type
 16491 ;;		None
 16492 ;; Auto vars:     Size  Location     Type
 16493 ;;		None
 16494 ;; Return value:  Size  Location     Type
 16495 ;;                  1    wreg      void 
 16496 ;; Registers used:
 16497 ;;		wreg, status,2, status,0, cstack
 16498 ;; Tracked objects:
 16499 ;;		On entry : 0/0
 16500 ;;		On exit  : 0/0
 16501 ;;		Unchanged: 0/0
 16502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;Total ram usage:        0 bytes
 16508 ;; Hardware stack levels used:    1
 16509 ;; Hardware stack levels required when called:    1
 16510 ;; This function calls:
 16511 ;;		i2_motorDe_set
 16512 ;;		i2_motorIz_set
 16513 ;; This function is called by:
 16514 ;;		i2_marcharAdelanteTiempo
 16515 ;;		i2_marcharAtrasTiempo
 16516 ;;		i2_girarXgradosizquierda
 16517 ;;		i2_girarXgradosderecha
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text123
 16522  003E62                     __ptext123:
 16523                           	opt stack 0
 16524  003E62                     i2_detenerse:
 16525                           	opt stack 8
 16526                           
 16527                           ;api_locomocion.c: 119: motorIz_set(0);
 16528                           
 16529                           ;incstack = 0
 16530  003E62  0E00               	movlw	0
 16531  003E64  ECFF  F01B         	call	i2_motorIz_set
 16532                           
 16533                           ;api_locomocion.c: 120: motorDe_set(0);
 16534  003E68  0E00               	movlw	0
 16535  003E6A  EC15  F01C         	call	i2_motorDe_set
 16536  003E6E  0012               	return		;funcret
 16537  003E70                     __end_ofi2_detenerse:
 16538                           	opt stack 0
 16539                           tosu	equ	0xFFF
 16540                           tosh	equ	0xFFE
 16541                           tosl	equ	0xFFD
 16542                           pclatu	equ	0xFFB
 16543                           pclath	equ	0xFFA
 16544                           tblptru	equ	0xFF8
 16545                           tblptrh	equ	0xFF7
 16546                           tblptrl	equ	0xFF6
 16547                           tablat	equ	0xFF5
 16548                           prodh	equ	0xFF4
 16549                           prodl	equ	0xFF3
 16550                           intcon	equ	0xFF2
 16551                           postinc0	equ	0xFEE
 16552                           fsr0h	equ	0xFEA
 16553                           fsr0l	equ	0xFE9
 16554                           wreg	equ	0xFE8
 16555                           fsr1h	equ	0xFE2
 16556                           fsr1l	equ	0xFE1
 16557                           bsr	equ	0xFE0
 16558                           indf2	equ	0xFDF
 16559                           postinc2	equ	0xFDE
 16560                           postdec2	equ	0xFDD
 16561                           fsr2h	equ	0xFDA
 16562                           fsr2l	equ	0xFD9
 16563                           status	equ	0xFD8
 16564                           
 16565 ;; *************** function i2_motorIz_set *****************
 16566 ;; Defined at:
 16567 ;;		line 24 in file "drv_motores.c"
 16568 ;; Parameters:    Size  Location     Type
 16569 ;;  a               1    wreg     unsigned char 
 16570 ;; Auto vars:     Size  Location     Type
 16571 ;;  a               1    0[COMRAM] unsigned char 
 16572 ;; Return value:  Size  Location     Type
 16573 ;;                  1    wreg      void 
 16574 ;; Registers used:
 16575 ;;		wreg, status,2, status,0
 16576 ;; Tracked objects:
 16577 ;;		On entry : 0/0
 16578 ;;		On exit  : 0/0
 16579 ;;		Unchanged: 0/0
 16580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16585 ;;Total ram usage:        1 bytes
 16586 ;; Hardware stack levels used:    1
 16587 ;; This function calls:
 16588 ;;		Nothing
 16589 ;; This function is called by:
 16590 ;;		i2_marcharAdelante
 16591 ;;		i2_marcharAtras
 16592 ;;		i2_girarXgradosizquierda
 16593 ;;		i2_girarXgradosderecha
 16594 ;;		i2_detenerse
 16595 ;; This function uses a non-reentrant model
 16596 ;;
 16597                           
 16598                           	psect	text124
 16599  0037FE                     __ptext124:
 16600                           	opt stack 0
 16601  0037FE                     i2_motorIz_set:
 16602                           	opt stack 8
 16603                           
 16604                           ;incstack = 0
 16605                           ;i2motorIz_set@a stored from wreg
 16606  0037FE  6E01               	movwf	i2motorIz_set@a,c
 16607                           
 16608                           ;drv_motores.c: 26: switch (a)
 16609  003800  D009               	goto	i2l785
 16610  003802                     
 16611                           ;drv_motores.c: 29: do { LATEbits.LATE0 = 0; } while(0);
 16612  003802  9087               	bcf	3975,0,c	;volatile
 16613                           
 16614                           ;drv_motores.c: 30: do { LATAbits.LATA5 = 0; } while(0);
 16615  003804  9A83               	bcf	3971,5,c	;volatile
 16616                           
 16617                           ;drv_motores.c: 31: break;
 16618  003806  0012               	return	
 16619  003808                     
 16620                           ;drv_motores.c: 33: do { LATEbits.LATE0 = 0; } while(0);
 16621  003808  9087               	bcf	3975,0,c	;volatile
 16622                           
 16623                           ;drv_motores.c: 34: do { LATAbits.LATA5 = 1; } while(0);
 16624  00380A  8A83               	bsf	3971,5,c	;volatile
 16625                           
 16626                           ;drv_motores.c: 35: break;
 16627  00380C  0012               	return	
 16628  00380E                     
 16629                           ;drv_motores.c: 37: do { LATEbits.LATE0 = 1; } while(0);
 16630  00380E  8087               	bsf	3975,0,c	;volatile
 16631                           
 16632                           ;drv_motores.c: 38: do { LATAbits.LATA5 = 0; } while(0);
 16633  003810  9A83               	bcf	3971,5,c	;volatile
 16634                           
 16635                           ;drv_motores.c: 40: }
 16636                           
 16637                           ;drv_motores.c: 39: break;
 16638  003812  0012               	return	
 16639  003814                     i2l785:
 16640  003814  5001               	movf	i2motorIz_set@a,w,c
 16641                           
 16642                           ; Switch size 1, requested type "space"
 16643                           ; Number of cases is 3, Range of values is 0 to 2
 16644                           ; switch strategies available:
 16645                           ; Name         Instructions Cycles
 16646                           ; simple_byte           10     6 (average)
 16647                           ;	Chosen strategy is simple_byte
 16648  003816  0A00               	xorlw	0	; case 0
 16649  003818  B4D8               	btfsc	status,2,c
 16650  00381A  D7F3               	goto	i2l786
 16651  00381C  0A01               	xorlw	1	; case 1
 16652  00381E  B4D8               	btfsc	status,2,c
 16653  003820  D7F3               	goto	i2l792
 16654  003822  0A03               	xorlw	3	; case 2
 16655  003824  A4D8               	btfss	status,2,c
 16656  003826  0012               	return	
 16657  003828  D7F2               	goto	i2l797
 16658  00382A                     __end_ofi2_motorIz_set:
 16659                           	opt stack 0
 16660                           tosu	equ	0xFFF
 16661                           tosh	equ	0xFFE
 16662                           tosl	equ	0xFFD
 16663                           pclatu	equ	0xFFB
 16664                           pclath	equ	0xFFA
 16665                           tblptru	equ	0xFF8
 16666                           tblptrh	equ	0xFF7
 16667                           tblptrl	equ	0xFF6
 16668                           tablat	equ	0xFF5
 16669                           prodh	equ	0xFF4
 16670                           prodl	equ	0xFF3
 16671                           intcon	equ	0xFF2
 16672                           postinc0	equ	0xFEE
 16673                           fsr0h	equ	0xFEA
 16674                           fsr0l	equ	0xFE9
 16675                           wreg	equ	0xFE8
 16676                           fsr1h	equ	0xFE2
 16677                           fsr1l	equ	0xFE1
 16678                           bsr	equ	0xFE0
 16679                           indf2	equ	0xFDF
 16680                           postinc2	equ	0xFDE
 16681                           postdec2	equ	0xFDD
 16682                           fsr2h	equ	0xFDA
 16683                           fsr2l	equ	0xFD9
 16684                           status	equ	0xFD8
 16685                           
 16686 ;; *************** function i2_motorDe_set *****************
 16687 ;; Defined at:
 16688 ;;		line 4 in file "drv_motores.c"
 16689 ;; Parameters:    Size  Location     Type
 16690 ;;  a               1    wreg     unsigned char 
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;  a               1    0[COMRAM] unsigned char 
 16693 ;; Return value:  Size  Location     Type
 16694 ;;                  1    wreg      void 
 16695 ;; Registers used:
 16696 ;;		wreg, status,2, status,0
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16706 ;;Total ram usage:        1 bytes
 16707 ;; Hardware stack levels used:    1
 16708 ;; This function calls:
 16709 ;;		Nothing
 16710 ;; This function is called by:
 16711 ;;		i2_marcharAdelante
 16712 ;;		i2_marcharAtras
 16713 ;;		i2_girarXgradosizquierda
 16714 ;;		i2_girarXgradosderecha
 16715 ;;		i2_detenerse
 16716 ;; This function uses a non-reentrant model
 16717 ;;
 16718                           
 16719                           	psect	text125
 16720  00382A                     __ptext125:
 16721                           	opt stack 0
 16722  00382A                     i2_motorDe_set:
 16723                           	opt stack 8
 16724                           
 16725                           ;incstack = 0
 16726                           ;i2motorDe_set@a stored from wreg
 16727  00382A  6E01               	movwf	i2motorDe_set@a,c
 16728                           
 16729                           ;drv_motores.c: 6: switch (a)
 16730  00382C  D009               	goto	i2l765
 16731  00382E                     
 16732                           ;drv_motores.c: 9: do { LATEbits.LATE2 = 0; } while(0);
 16733  00382E  9487               	bcf	3975,2,c	;volatile
 16734                           
 16735                           ;drv_motores.c: 10: do { LATEbits.LATE1 = 0; } while(0);
 16736  003830  9287               	bcf	3975,1,c	;volatile
 16737                           
 16738                           ;drv_motores.c: 11: break;
 16739  003832  0012               	return	
 16740  003834                     
 16741                           ;drv_motores.c: 13: do { LATEbits.LATE2 = 1; } while(0);
 16742  003834  8487               	bsf	3975,2,c	;volatile
 16743                           
 16744                           ;drv_motores.c: 14: do { LATEbits.LATE1 = 0; } while(0);
 16745  003836  9287               	bcf	3975,1,c	;volatile
 16746                           
 16747                           ;drv_motores.c: 15: break;
 16748  003838  0012               	return	
 16749  00383A                     
 16750                           ;drv_motores.c: 17: do { LATEbits.LATE2 = 0; } while(0);
 16751  00383A  9487               	bcf	3975,2,c	;volatile
 16752                           
 16753                           ;drv_motores.c: 18: do { LATEbits.LATE1 = 1; } while(0);
 16754  00383C  8287               	bsf	3975,1,c	;volatile
 16755                           
 16756                           ;drv_motores.c: 20: }
 16757                           
 16758                           ;drv_motores.c: 19: break;
 16759  00383E  0012               	return	
 16760  003840                     i2l765:
 16761  003840  5001               	movf	i2motorDe_set@a,w,c
 16762                           
 16763                           ; Switch size 1, requested type "space"
 16764                           ; Number of cases is 3, Range of values is 0 to 2
 16765                           ; switch strategies available:
 16766                           ; Name         Instructions Cycles
 16767                           ; simple_byte           10     6 (average)
 16768                           ;	Chosen strategy is simple_byte
 16769  003842  0A00               	xorlw	0	; case 0
 16770  003844  B4D8               	btfsc	status,2,c
 16771  003846  D7F3               	goto	i2l766
 16772  003848  0A01               	xorlw	1	; case 1
 16773  00384A  B4D8               	btfsc	status,2,c
 16774  00384C  D7F6               	goto	i2l777
 16775  00384E  0A03               	xorlw	3	; case 2
 16776  003850  A4D8               	btfss	status,2,c
 16777  003852  0012               	return	
 16778  003854  D7EF               	goto	i2l772
 16779  003856                     __end_ofi2_motorDe_set:
 16780                           	opt stack 0
 16781                           tosu	equ	0xFFF
 16782                           tosh	equ	0xFFE
 16783                           tosl	equ	0xFFD
 16784                           pclatu	equ	0xFFB
 16785                           pclath	equ	0xFFA
 16786                           tblptru	equ	0xFF8
 16787                           tblptrh	equ	0xFF7
 16788                           tblptrl	equ	0xFF6
 16789                           tablat	equ	0xFF5
 16790                           prodh	equ	0xFF4
 16791                           prodl	equ	0xFF3
 16792                           intcon	equ	0xFF2
 16793                           postinc0	equ	0xFEE
 16794                           fsr0h	equ	0xFEA
 16795                           fsr0l	equ	0xFE9
 16796                           wreg	equ	0xFE8
 16797                           fsr1h	equ	0xFE2
 16798                           fsr1l	equ	0xFE1
 16799                           bsr	equ	0xFE0
 16800                           indf2	equ	0xFDF
 16801                           postinc2	equ	0xFDE
 16802                           postdec2	equ	0xFDD
 16803                           fsr2h	equ	0xFDA
 16804                           fsr2l	equ	0xFD9
 16805                           status	equ	0xFD8
 16806                           
 16807 ;; *************** function i2_delayTmr *****************
 16808 ;; Defined at:
 16809 ;;		line 199 in file "main.c"
 16810 ;; Parameters:    Size  Location     Type
 16811 ;;  miliSegundos    2   58[COMRAM] unsigned int 
 16812 ;; Auto vars:     Size  Location     Type
 16813 ;;		None
 16814 ;; Return value:  Size  Location     Type
 16815 ;;                  1    wreg      unsigned char 
 16816 ;; Registers used:
 16817 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16818 ;; Tracked objects:
 16819 ;;		On entry : 0/0
 16820 ;;		On exit  : 0/0
 16821 ;;		Unchanged: 0/0
 16822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16825 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16826 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16827 ;;Total ram usage:        5 bytes
 16828 ;; Hardware stack levels used:    1
 16829 ;; Hardware stack levels required when called:    2
 16830 ;; This function calls:
 16831 ;;		i2_TMR0_Reload
 16832 ;;		i2_TMR0_StartTimer
 16833 ;;		i2_TMR0_StopTimer
 16834 ;;		i2_TMR0_WriteTimer
 16835 ;;		i2___ftadd
 16836 ;;		i2___ftdiv
 16837 ;;		i2___ftneg
 16838 ;;		i2___fttol
 16839 ;;		i2___lwtoft
 16840 ;;		i2___wmul
 16841 ;; This function is called by:
 16842 ;;		i2_marcharAdelanteTiempo
 16843 ;;		i2_marcharAtrasTiempo
 16844 ;;		i2_girarXgradosizquierda
 16845 ;;		i2_girarXgradosderecha
 16846 ;; This function uses a non-reentrant model
 16847 ;;
 16848                           
 16849                           	psect	text126
 16850  002716                     __ptext126:
 16851                           	opt stack 0
 16852  002716                     i2_delayTmr:
 16853                           	opt stack 7
 16854                           
 16855                           ;main.c: 201: TMR0_WriteTimer(0xFFFF - (miliSegundos / 1.03));
 16856                           
 16857                           ;incstack = 0
 16858  002716  0EFF               	movlw	255
 16859  002718  6E21               	movwf	i2___ftadd@f2,c
 16860  00271A  0E7F               	movlw	127
 16861  00271C  6E22               	movwf	i2___ftadd@f2+1,c
 16862  00271E  0E47               	movlw	71
 16863  002720  6E23               	movwf	i2___ftadd@f2+2,c
 16864  002722  0ED7               	movlw	215
 16865  002724  6E0F               	movwf	i2___ftdiv@f2,c
 16866  002726  0E83               	movlw	131
 16867  002728  6E10               	movwf	i2___ftdiv@f2+1,c
 16868  00272A  0E3F               	movlw	63
 16869  00272C  6E11               	movwf	i2___ftdiv@f2+2,c
 16870  00272E  C03B  F009         	movff	i2delayTmr@miliSegundos,i2___lwtoft@c
 16871  002732  C03C  F00A         	movff	i2delayTmr@miliSegundos+1,i2___lwtoft@c+1
 16872  002736  EC8B  F01D         	call	i2___lwtoft	;wreg free
 16873  00273A  C009  F00C         	movff	?i2___lwtoft,i2___ftdiv@f1
 16874  00273E  C00A  F00D         	movff	?i2___lwtoft+1,i2___ftdiv@f1+1
 16875  002742  C00B  F00E         	movff	?i2___lwtoft+2,i2___ftdiv@f1+2
 16876  002746  ECA6  F012         	call	i2___ftdiv	;wreg free
 16877  00274A  C00C  F01B         	movff	?i2___ftdiv,i2___ftneg@f1
 16878  00274E  C00D  F01C         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 16879  002752  C00E  F01D         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 16880  002756  EC9D  F01D         	call	i2___ftneg	;wreg free
 16881  00275A  C01B  F01E         	movff	?i2___ftneg,i2___ftadd@f1
 16882  00275E  C01C  F01F         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 16883  002762  C01D  F020         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 16884  002766  ECF1  F00C         	call	i2___ftadd	;wreg free
 16885  00276A  C01E  F02A         	movff	?i2___ftadd,i2___fttol@f1
 16886  00276E  C01F  F02B         	movff	?i2___ftadd+1,i2___fttol@f1+1
 16887  002772  C020  F02C         	movff	?i2___ftadd+2,i2___fttol@f1+2
 16888  002776  ECCB  F010         	call	i2___fttol	;wreg free
 16889  00277A  C02A  F039         	movff	?i2___fttol,i2TMR0_WriteTimer@timerVal
 16890  00277E  C02B  F03A         	movff	?i2___fttol+1,i2TMR0_WriteTimer@timerVal+1
 16891  002782  EC4A  F01F         	call	i2_TMR0_WriteTimer	;wreg free
 16892                           
 16893                           ;main.c: 202: TMR0_StartTimer();
 16894  002786  EC5D  F01F         	call	i2_TMR0_StartTimer	;wreg free
 16895                           
 16896                           ;main.c: 203: while (PIR0bits.TMR0IF == 0)
 16897  00278A  D026               	goto	i2l720
 16898  00278C                     
 16899                           ;main.c: 204: {
 16900                           ;main.c: 205: if ((interrupt_flags.borde_activado * interrupt_flags.borde_detectado) * i
      +                          nterrupt_flags.int_delay_activado)
 16901  00278C  0100               	movlb	0	; () banked
 16902  00278E  A5C4               	btfss	(_interrupt_flags+2)& (0+255),2,b	;volatile
 16903  002790  D003               	goto	i2u351_40
 16904  002792  6A3D               	clrf	??i2_delayTmr& (0+255),c
 16905  002794  2A3D               	incf	??i2_delayTmr& (0+255),f,c
 16906  002796  D001               	goto	i2u351_48
 16907  002798                     i2u351_40:
 16908  002798  6A3D               	clrf	??i2_delayTmr& (0+255),c
 16909  00279A                     i2u351_48:
 16910  00279A  0100               	movlb	0	; () banked
 16911  00279C  A7C4               	btfss	(_interrupt_flags+2)& (0+255),3,b	;volatile
 16912  00279E  D003               	goto	i2u352_40
 16913  0027A0  6A3E               	clrf	(??i2_delayTmr+1)& (0+255),c
 16914  0027A2  2A3E               	incf	(??i2_delayTmr+1)& (0+255),f,c
 16915  0027A4  D001               	goto	i2u352_48
 16916  0027A6                     i2u352_40:
 16917  0027A6  6A3E               	clrf	(??i2_delayTmr+1)& (0+255),c
 16918  0027A8                     i2u352_48:
 16919  0027A8  503E               	movf	??i2_delayTmr+1,w,c
 16920  0027AA  023D               	mulwf	??i2_delayTmr,c
 16921  0027AC  CFF3 F001          	movff	prodl,i2___wmul@multiplier
 16922  0027B0  CFF4 F002          	movff	prodh,i2___wmul@multiplier+1
 16923  0027B4  0100               	movlb	0	; () banked
 16924  0027B6  A9C4               	btfss	(_interrupt_flags+2)& (0+255),4,b	;volatile
 16925  0027B8  D003               	goto	i2u353_40
 16926  0027BA  6A3F               	clrf	(??i2_delayTmr+2)& (0+255),c
 16927  0027BC  2A3F               	incf	(??i2_delayTmr+2)& (0+255),f,c
 16928  0027BE  D001               	goto	i2u353_48
 16929  0027C0                     i2u353_40:
 16930  0027C0  6A3F               	clrf	(??i2_delayTmr+2)& (0+255),c
 16931  0027C2                     i2u353_48:
 16932  0027C2  503F               	movf	??i2_delayTmr+2,w,c
 16933  0027C4  6E03               	movwf	i2___wmul@multiplicand,c
 16934  0027C6  6A04               	clrf	i2___wmul@multiplicand+1,c
 16935  0027C8  EC42  F01D         	call	i2___wmul	;wreg free
 16936  0027CC  5001               	movf	?i2___wmul,w,c
 16937  0027CE  1002               	iorwf	?i2___wmul+1,w,c
 16938  0027D0  B4D8               	btfsc	status,2,c
 16939  0027D2  D002               	goto	i2l720
 16940                           
 16941                           ;main.c: 206: return 1;
 16942  0027D4  0E01               	movlw	1
 16943  0027D6  0012               	return	
 16944  0027D8                     i2l720:
 16945  0027D8  010E               	movlb	14	; () banked
 16946  0027DA  ABCA               	btfss	202,5,b	;volatile
 16947  0027DC  D7D7               	goto	i2l719
 16948                           
 16949                           ; BSR set to: 14
 16950                           ;main.c: 207: }
 16951                           ;main.c: 208: PIR0bits.TMR0IF = 0;
 16952  0027DE  9BCA               	bcf	202,5,b	;volatile
 16953                           
 16954                           ; BSR set to: 14
 16955                           ;main.c: 209: TMR0_StopTimer();
 16956  0027E0  EC5B  F01F         	call	i2_TMR0_StopTimer	;wreg free
 16957                           
 16958                           ;main.c: 210: TMR0_Reload();
 16959  0027E4  EC44  F01F         	call	i2_TMR0_Reload	;wreg free
 16960                           
 16961                           ;main.c: 211: return 0;
 16962  0027E8  0E00               	movlw	0
 16963  0027EA  0012               	return	
 16964  0027EC                     __end_ofi2_delayTmr:
 16965                           	opt stack 0
 16966                           tosu	equ	0xFFF
 16967                           tosh	equ	0xFFE
 16968                           tosl	equ	0xFFD
 16969                           pclatu	equ	0xFFB
 16970                           pclath	equ	0xFFA
 16971                           tblptru	equ	0xFF8
 16972                           tblptrh	equ	0xFF7
 16973                           tblptrl	equ	0xFF6
 16974                           tablat	equ	0xFF5
 16975                           prodh	equ	0xFF4
 16976                           prodl	equ	0xFF3
 16977                           intcon	equ	0xFF2
 16978                           postinc0	equ	0xFEE
 16979                           fsr0h	equ	0xFEA
 16980                           fsr0l	equ	0xFE9
 16981                           wreg	equ	0xFE8
 16982                           fsr1h	equ	0xFE2
 16983                           fsr1l	equ	0xFE1
 16984                           bsr	equ	0xFE0
 16985                           indf2	equ	0xFDF
 16986                           postinc2	equ	0xFDE
 16987                           postdec2	equ	0xFDD
 16988                           fsr2h	equ	0xFDA
 16989                           fsr2l	equ	0xFD9
 16990                           status	equ	0xFD8
 16991                           
 16992 ;; *************** function i2___wmul *****************
 16993 ;; Defined at:
 16994 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 16995 ;; Parameters:    Size  Location     Type
 16996 ;;  multiplier      2    0[COMRAM] unsigned int 
 16997 ;;  multiplicand    2    2[COMRAM] unsigned int 
 16998 ;; Auto vars:     Size  Location     Type
 16999 ;;  __wmul          2    4[COMRAM] unsigned int 
 17000 ;; Return value:  Size  Location     Type
 17001 ;;                  2    0[COMRAM] unsigned int 
 17002 ;; Registers used:
 17003 ;;		wreg, status,2, status,0, prodl, prodh
 17004 ;; Tracked objects:
 17005 ;;		On entry : 0/0
 17006 ;;		On exit  : 0/0
 17007 ;;		Unchanged: 0/0
 17008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17012 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17013 ;;Total ram usage:        6 bytes
 17014 ;; Hardware stack levels used:    1
 17015 ;; This function calls:
 17016 ;;		Nothing
 17017 ;; This function is called by:
 17018 ;;		i2_delayTmr
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022                           	psect	text127
 17023  003A84                     __ptext127:
 17024                           	opt stack 0
 17025  003A84                     i2___wmul:
 17026                           	opt stack 8
 17027                           
 17028                           ;incstack = 0
 17029  003A84  5001               	movf	i2___wmul@multiplier,w,c
 17030  003A86  0203               	mulwf	i2___wmul@multiplicand,c
 17031  003A88  CFF3 F005          	movff	prodl,i2___wmul@product
 17032  003A8C  CFF4 F006          	movff	prodh,i2___wmul@product+1
 17033  003A90  5001               	movf	i2___wmul@multiplier,w,c
 17034  003A92  0204               	mulwf	i2___wmul@multiplicand+1,c
 17035  003A94  50F3               	movf	prodl,w,c
 17036  003A96  2606               	addwf	i2___wmul@product+1,f,c
 17037  003A98  5002               	movf	i2___wmul@multiplier+1,w,c
 17038  003A9A  0203               	mulwf	i2___wmul@multiplicand,c
 17039  003A9C  50F3               	movf	prodl,w,c
 17040  003A9E  2606               	addwf	i2___wmul@product+1,f,c
 17041  003AA0  C005  F001         	movff	i2___wmul@product,?i2___wmul
 17042  003AA4  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 17043  003AA8  0012               	return	
 17044  003AAA                     __end_ofi2___wmul:
 17045                           	opt stack 0
 17046                           tosu	equ	0xFFF
 17047                           tosh	equ	0xFFE
 17048                           tosl	equ	0xFFD
 17049                           pclatu	equ	0xFFB
 17050                           pclath	equ	0xFFA
 17051                           tblptru	equ	0xFF8
 17052                           tblptrh	equ	0xFF7
 17053                           tblptrl	equ	0xFF6
 17054                           tablat	equ	0xFF5
 17055                           prodh	equ	0xFF4
 17056                           prodl	equ	0xFF3
 17057                           intcon	equ	0xFF2
 17058                           postinc0	equ	0xFEE
 17059                           fsr0h	equ	0xFEA
 17060                           fsr0l	equ	0xFE9
 17061                           wreg	equ	0xFE8
 17062                           fsr1h	equ	0xFE2
 17063                           fsr1l	equ	0xFE1
 17064                           bsr	equ	0xFE0
 17065                           indf2	equ	0xFDF
 17066                           postinc2	equ	0xFDE
 17067                           postdec2	equ	0xFDD
 17068                           fsr2h	equ	0xFDA
 17069                           fsr2l	equ	0xFD9
 17070                           status	equ	0xFD8
 17071                           
 17072 ;; *************** function i2___lwtoft *****************
 17073 ;; Defined at:
 17074 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;  c               2    8[COMRAM] unsigned int 
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;		None
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  3    8[COMRAM] float 
 17081 ;; Registers used:
 17082 ;;		wreg, status,2, status,0, cstack
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17088 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17091 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17092 ;;Total ram usage:        3 bytes
 17093 ;; Hardware stack levels used:    1
 17094 ;; Hardware stack levels required when called:    1
 17095 ;; This function calls:
 17096 ;;		i2___ftpack
 17097 ;; This function is called by:
 17098 ;;		i2_delayTmr
 17099 ;;		i2_girarXgradosizquierda
 17100 ;;		i2_girarXgradosderecha
 17101 ;; This function uses a non-reentrant model
 17102 ;;
 17103                           
 17104                           	psect	text128
 17105  003B16                     __ptext128:
 17106                           	opt stack 0
 17107  003B16                     i2___lwtoft:
 17108                           	opt stack 7
 17109                           
 17110                           ;incstack = 0
 17111  003B16  C009  F001         	movff	i2___lwtoft@c,i2___ftpack@arg
 17112  003B1A  C00A  F002         	movff	i2___lwtoft@c+1,i2___ftpack@arg+1
 17113  003B1E  6A03               	clrf	i2___ftpack@arg+2,c
 17114  003B20  0E8E               	movlw	142
 17115  003B22  6E04               	movwf	i2___ftpack@exp,c
 17116  003B24  0E00               	movlw	0
 17117  003B26  6E05               	movwf	i2___ftpack@sign,c
 17118  003B28  ECC4  F015         	call	i2___ftpack	;wreg free
 17119  003B2C  C001  F009         	movff	?i2___ftpack,?i2___lwtoft
 17120  003B30  C002  F00A         	movff	?i2___ftpack+1,?i2___lwtoft+1
 17121  003B34  C003  F00B         	movff	?i2___ftpack+2,?i2___lwtoft+2
 17122  003B38  0012               	return	
 17123  003B3A                     __end_ofi2___lwtoft:
 17124                           	opt stack 0
 17125                           tosu	equ	0xFFF
 17126                           tosh	equ	0xFFE
 17127                           tosl	equ	0xFFD
 17128                           pclatu	equ	0xFFB
 17129                           pclath	equ	0xFFA
 17130                           tblptru	equ	0xFF8
 17131                           tblptrh	equ	0xFF7
 17132                           tblptrl	equ	0xFF6
 17133                           tablat	equ	0xFF5
 17134                           prodh	equ	0xFF4
 17135                           prodl	equ	0xFF3
 17136                           intcon	equ	0xFF2
 17137                           postinc0	equ	0xFEE
 17138                           fsr0h	equ	0xFEA
 17139                           fsr0l	equ	0xFE9
 17140                           wreg	equ	0xFE8
 17141                           fsr1h	equ	0xFE2
 17142                           fsr1l	equ	0xFE1
 17143                           bsr	equ	0xFE0
 17144                           indf2	equ	0xFDF
 17145                           postinc2	equ	0xFDE
 17146                           postdec2	equ	0xFDD
 17147                           fsr2h	equ	0xFDA
 17148                           fsr2l	equ	0xFD9
 17149                           status	equ	0xFD8
 17150                           
 17151 ;; *************** function i2___fttol *****************
 17152 ;; Defined at:
 17153 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 17154 ;; Parameters:    Size  Location     Type
 17155 ;;  f1              3   41[COMRAM] float 
 17156 ;; Auto vars:     Size  Location     Type
 17157 ;;  __fttol         4   51[COMRAM] unsigned long 
 17158 ;;  __fttol         1   55[COMRAM] unsigned char 
 17159 ;;  __fttol         1   50[COMRAM] unsigned char 
 17160 ;; Return value:  Size  Location     Type
 17161 ;;                  4   41[COMRAM] long 
 17162 ;; Registers used:
 17163 ;;		wreg, status,2, status,0
 17164 ;; Tracked objects:
 17165 ;;		On entry : 0/0
 17166 ;;		On exit  : 0/0
 17167 ;;		Unchanged: 0/0
 17168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17170 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17171 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17172 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17173 ;;Total ram usage:       15 bytes
 17174 ;; Hardware stack levels used:    1
 17175 ;; This function calls:
 17176 ;;		Nothing
 17177 ;; This function is called by:
 17178 ;;		i2_delayTmr
 17179 ;;		i2_girarXgradosizquierda
 17180 ;;		i2_girarXgradosderecha
 17181 ;; This function uses a non-reentrant model
 17182 ;;
 17183                           
 17184                           	psect	text129
 17185  002196                     __ptext129:
 17186                           	opt stack 0
 17187  002196                     i2___fttol:
 17188                           	opt stack 8
 17189                           
 17190                           ;incstack = 0
 17191  002196  C02C  F02E         	movff	i2___fttol@f1+2,??i2___fttol
 17192  00219A  6A2F               	clrf	(??i2___fttol+1)& (0+255),c
 17193  00219C  6A30               	clrf	(??i2___fttol+2)& (0+255),c
 17194  00219E  342B               	rlcf	i2___fttol@f1+1,w,c
 17195  0021A0  362E               	rlcf	??i2___fttol& (0+255),f,c
 17196  0021A2  E301               	bnc	u343_41
 17197  0021A4  802F               	bsf	(??i2___fttol+1)& (0+255),0,c
 17198  0021A6                     u343_41:
 17199  0021A6  502E               	movf	??i2___fttol,w,c
 17200  0021A8  6E38               	movwf	i2___fttol@exp1,c
 17201  0021AA  5038               	movf	i2___fttol@exp1,w,c
 17202  0021AC  A4D8               	btfss	status,2,c
 17203  0021AE  D009               	goto	i2l1871
 17204  0021B0  0E00               	movlw	0
 17205  0021B2  6E2A               	movwf	?i2___fttol,c
 17206  0021B4  0E00               	movlw	0
 17207  0021B6  6E2B               	movwf	?i2___fttol+1,c
 17208  0021B8  0E00               	movlw	0
 17209  0021BA  6E2C               	movwf	?i2___fttol+2,c
 17210  0021BC  0E00               	movlw	0
 17211  0021BE  6E2D               	movwf	?i2___fttol+3,c
 17212  0021C0  0012               	return	
 17213  0021C2                     i2l1871:
 17214  0021C2  0E17               	movlw	23
 17215  0021C4  6E2E               	movwf	??i2___fttol& (0+255),c
 17216  0021C6  C02A  F02F         	movff	i2___fttol@f1,??i2___fttol+1
 17217  0021CA  C02B  F030         	movff	i2___fttol@f1+1,??i2___fttol+2
 17218  0021CE  C02C  F031         	movff	i2___fttol@f1+2,??i2___fttol+3
 17219  0021D2  282E               	incf	??i2___fttol,w,c
 17220  0021D4  6E32               	movwf	(??i2___fttol+4)& (0+255),c
 17221  0021D6  D004               	goto	i2u345_40
 17222  0021D8                     i2u345_45:
 17223  0021D8  90D8               	bcf	status,0,c
 17224  0021DA  3231               	rrcf	??i2___fttol+3,f,c
 17225  0021DC  3230               	rrcf	??i2___fttol+2,f,c
 17226  0021DE  322F               	rrcf	??i2___fttol+1,f,c
 17227  0021E0                     i2u345_40:
 17228  0021E0  2E32               	decfsz	(??i2___fttol+4)& (0+255),f,c
 17229  0021E2  D7FA               	goto	i2u345_45
 17230  0021E4  502F               	movf	??i2___fttol+1,w,c
 17231  0021E6  6E33               	movwf	i2___fttol@sign1,c
 17232  0021E8  8E2B               	bsf	i2___fttol@f1+1,7,c
 17233  0021EA  0EFF               	movlw	255
 17234  0021EC  162A               	andwf	i2___fttol@f1,f,c
 17235  0021EE  0EFF               	movlw	255
 17236  0021F0  162B               	andwf	i2___fttol@f1+1,f,c
 17237  0021F2  0E00               	movlw	0
 17238  0021F4  162C               	andwf	i2___fttol@f1+2,f,c
 17239  0021F6  502A               	movf	i2___fttol@f1,w,c
 17240  0021F8  6E34               	movwf	i2___fttol@lval,c
 17241  0021FA  502B               	movf	i2___fttol@f1+1,w,c
 17242  0021FC  6E35               	movwf	i2___fttol@lval+1,c
 17243  0021FE  502C               	movf	i2___fttol@f1+2,w,c
 17244  002200  6E36               	movwf	i2___fttol@lval+2,c
 17245  002202  6A37               	clrf	i2___fttol@lval+3,c
 17246  002204  0E8E               	movlw	142
 17247  002206  5E38               	subwf	i2___fttol@exp1,f,c
 17248  002208  AE38               	btfss	i2___fttol@exp1,7,c
 17249  00220A  D016               	goto	i2l1873
 17250  00220C  5038               	movf	i2___fttol@exp1,w,c
 17251  00220E  0A80               	xorlw	128
 17252  002210  0F8F               	addlw	143
 17253  002212  B0D8               	btfsc	status,0,c
 17254  002214  D009               	goto	i2l1874
 17255  002216  0E00               	movlw	0
 17256  002218  6E2A               	movwf	?i2___fttol,c
 17257  00221A  0E00               	movlw	0
 17258  00221C  6E2B               	movwf	?i2___fttol+1,c
 17259  00221E  0E00               	movlw	0
 17260  002220  6E2C               	movwf	?i2___fttol+2,c
 17261  002222  0E00               	movlw	0
 17262  002224  6E2D               	movwf	?i2___fttol+3,c
 17263  002226  0012               	return	
 17264  002228                     i2l1874:
 17265  002228  90D8               	bcf	status,0,c
 17266  00222A  3237               	rrcf	i2___fttol@lval+3,f,c
 17267  00222C  3236               	rrcf	i2___fttol@lval+2,f,c
 17268  00222E  3235               	rrcf	i2___fttol@lval+1,f,c
 17269  002230  3234               	rrcf	i2___fttol@lval,f,c
 17270  002232  3E38               	incfsz	i2___fttol@exp1,f,c
 17271  002234  D7F9               	goto	i2l1874
 17272  002236  D015               	goto	i2u349_40
 17273  002238                     i2l1873:
 17274  002238  0E17               	movlw	23
 17275  00223A  6438               	cpfsgt	i2___fttol@exp1,c
 17276  00223C  D00F               	goto	i2l1879
 17277  00223E  0E00               	movlw	0
 17278  002240  6E2A               	movwf	?i2___fttol,c
 17279  002242  0E00               	movlw	0
 17280  002244  6E2B               	movwf	?i2___fttol+1,c
 17281  002246  0E00               	movlw	0
 17282  002248  6E2C               	movwf	?i2___fttol+2,c
 17283  00224A  0E00               	movlw	0
 17284  00224C  6E2D               	movwf	?i2___fttol+3,c
 17285  00224E  0012               	return	
 17286  002250  90D8               	bcf	status,0,c
 17287  002252  3634               	rlcf	i2___fttol@lval,f,c
 17288  002254  3635               	rlcf	i2___fttol@lval+1,f,c
 17289  002256  3636               	rlcf	i2___fttol@lval+2,f,c
 17290  002258  3637               	rlcf	i2___fttol@lval+3,f,c
 17291  00225A  0638               	decf	i2___fttol@exp1,f,c
 17292  00225C                     i2l1879:
 17293  00225C  5038               	movf	i2___fttol@exp1,w,c
 17294  00225E  A4D8               	btfss	status,2,c
 17295  002260  D7F7               	goto	i2l1880
 17296  002262                     i2u349_40:
 17297  002262  5033               	movf	i2___fttol@sign1,w,c
 17298  002264  B4D8               	btfsc	status,2,c
 17299  002266  D008               	goto	i2l1882
 17300  002268  1E37               	comf	i2___fttol@lval+3,f,c
 17301  00226A  1E36               	comf	i2___fttol@lval+2,f,c
 17302  00226C  1E35               	comf	i2___fttol@lval+1,f,c
 17303  00226E  6C34               	negf	i2___fttol@lval,c
 17304  002270  0E00               	movlw	0
 17305  002272  2235               	addwfc	i2___fttol@lval+1,f,c
 17306  002274  2236               	addwfc	i2___fttol@lval+2,f,c
 17307  002276  2237               	addwfc	i2___fttol@lval+3,f,c
 17308  002278                     i2l1882:
 17309  002278  C034  F02A         	movff	i2___fttol@lval,?i2___fttol
 17310  00227C  C035  F02B         	movff	i2___fttol@lval+1,?i2___fttol+1
 17311  002280  C036  F02C         	movff	i2___fttol@lval+2,?i2___fttol+2
 17312  002284  C037  F02D         	movff	i2___fttol@lval+3,?i2___fttol+3
 17313  002288  0012               	return	
 17314  00228A                     __end_ofi2___fttol:
 17315                           	opt stack 0
 17316                           tosu	equ	0xFFF
 17317                           tosh	equ	0xFFE
 17318                           tosl	equ	0xFFD
 17319                           pclatu	equ	0xFFB
 17320                           pclath	equ	0xFFA
 17321                           tblptru	equ	0xFF8
 17322                           tblptrh	equ	0xFF7
 17323                           tblptrl	equ	0xFF6
 17324                           tablat	equ	0xFF5
 17325                           prodh	equ	0xFF4
 17326                           prodl	equ	0xFF3
 17327                           intcon	equ	0xFF2
 17328                           postinc0	equ	0xFEE
 17329                           fsr0h	equ	0xFEA
 17330                           fsr0l	equ	0xFE9
 17331                           wreg	equ	0xFE8
 17332                           fsr1h	equ	0xFE2
 17333                           fsr1l	equ	0xFE1
 17334                           bsr	equ	0xFE0
 17335                           indf2	equ	0xFDF
 17336                           postinc2	equ	0xFDE
 17337                           postdec2	equ	0xFDD
 17338                           fsr2h	equ	0xFDA
 17339                           fsr2l	equ	0xFD9
 17340                           status	equ	0xFD8
 17341                           
 17342 ;; *************** function i2___ftneg *****************
 17343 ;; Defined at:
 17344 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 17345 ;; Parameters:    Size  Location     Type
 17346 ;;  f1              3   26[COMRAM] float 
 17347 ;; Auto vars:     Size  Location     Type
 17348 ;;		None
 17349 ;; Return value:  Size  Location     Type
 17350 ;;                  3   26[COMRAM] float 
 17351 ;; Registers used:
 17352 ;;		wreg, status,2, status,0
 17353 ;; Tracked objects:
 17354 ;;		On entry : 0/0
 17355 ;;		On exit  : 0/0
 17356 ;;		Unchanged: 0/0
 17357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17358 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17362 ;;Total ram usage:        3 bytes
 17363 ;; Hardware stack levels used:    1
 17364 ;; This function calls:
 17365 ;;		Nothing
 17366 ;; This function is called by:
 17367 ;;		i2_delayTmr
 17368 ;; This function uses a non-reentrant model
 17369 ;;
 17370                           
 17371                           	psect	text130
 17372  003B3A                     __ptext130:
 17373                           	opt stack 0
 17374  003B3A                     i2___ftneg:
 17375                           	opt stack 8
 17376                           
 17377                           ;incstack = 0
 17378  003B3A  501B               	movf	i2___ftneg@f1,w,c
 17379  003B3C  101C               	iorwf	i2___ftneg@f1+1,w,c
 17380  003B3E  101D               	iorwf	i2___ftneg@f1+2,w,c
 17381  003B40  B4D8               	btfsc	status,2,c
 17382  003B42  D006               	goto	i2l1861
 17383  003B44  0E00               	movlw	0
 17384  003B46  1A1B               	xorwf	i2___ftneg@f1,f,c
 17385  003B48  0E00               	movlw	0
 17386  003B4A  1A1C               	xorwf	i2___ftneg@f1+1,f,c
 17387  003B4C  0E80               	movlw	128
 17388  003B4E  1A1D               	xorwf	i2___ftneg@f1+2,f,c
 17389  003B50                     i2l1861:
 17390  003B50  C01B  F01B         	movff	i2___ftneg@f1,?i2___ftneg
 17391  003B54  C01C  F01C         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 17392  003B58  C01D  F01D         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 17393  003B5C  0012               	return		;funcret
 17394  003B5E                     __end_ofi2___ftneg:
 17395                           	opt stack 0
 17396                           tosu	equ	0xFFF
 17397                           tosh	equ	0xFFE
 17398                           tosl	equ	0xFFD
 17399                           pclatu	equ	0xFFB
 17400                           pclath	equ	0xFFA
 17401                           tblptru	equ	0xFF8
 17402                           tblptrh	equ	0xFF7
 17403                           tblptrl	equ	0xFF6
 17404                           tablat	equ	0xFF5
 17405                           prodh	equ	0xFF4
 17406                           prodl	equ	0xFF3
 17407                           intcon	equ	0xFF2
 17408                           postinc0	equ	0xFEE
 17409                           fsr0h	equ	0xFEA
 17410                           fsr0l	equ	0xFE9
 17411                           wreg	equ	0xFE8
 17412                           fsr1h	equ	0xFE2
 17413                           fsr1l	equ	0xFE1
 17414                           bsr	equ	0xFE0
 17415                           indf2	equ	0xFDF
 17416                           postinc2	equ	0xFDE
 17417                           postdec2	equ	0xFDD
 17418                           fsr2h	equ	0xFDA
 17419                           fsr2l	equ	0xFD9
 17420                           status	equ	0xFD8
 17421                           
 17422 ;; *************** function i2___ftdiv *****************
 17423 ;; Defined at:
 17424 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
 17425 ;; Parameters:    Size  Location     Type
 17426 ;;  f1              3   11[COMRAM] float 
 17427 ;;  f2              3   14[COMRAM] float 
 17428 ;; Auto vars:     Size  Location     Type
 17429 ;;  __ftdiv         3   21[COMRAM] float 
 17430 ;;  __ftdiv         1   25[COMRAM] unsigned char 
 17431 ;;  __ftdiv         1   24[COMRAM] unsigned char 
 17432 ;;  __ftdiv         1   20[COMRAM] unsigned char 
 17433 ;; Return value:  Size  Location     Type
 17434 ;;                  3   11[COMRAM] float 
 17435 ;; Registers used:
 17436 ;;		wreg, status,2, status,0, cstack
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17442 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17443 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17444 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17445 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17446 ;;Total ram usage:       15 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; Hardware stack levels required when called:    1
 17449 ;; This function calls:
 17450 ;;		i2___ftpack
 17451 ;; This function is called by:
 17452 ;;		i2_delayTmr
 17453 ;; This function uses a non-reentrant model
 17454 ;;
 17455                           
 17456                           	psect	text131
 17457  00254C                     __ptext131:
 17458                           	opt stack 0
 17459  00254C                     i2___ftdiv:
 17460                           	opt stack 7
 17461                           
 17462                           ;incstack = 0
 17463  00254C  C00E  F012         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 17464  002550  6A13               	clrf	(??i2___ftdiv+1)& (0+255),c
 17465  002552  6A14               	clrf	(??i2___ftdiv+2)& (0+255),c
 17466  002554  340D               	rlcf	i2___ftdiv@f1+1,w,c
 17467  002556  3612               	rlcf	??i2___ftdiv& (0+255),f,c
 17468  002558  E301               	bnc	u337_41
 17469  00255A  8013               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 17470  00255C                     u337_41:
 17471  00255C  5012               	movf	??i2___ftdiv,w,c
 17472  00255E  6E19               	movwf	i2___ftdiv@exp,c
 17473  002560  5019               	movf	i2___ftdiv@exp,w,c
 17474  002562  A4D8               	btfss	status,2,c
 17475  002564  D007               	goto	i2l1835
 17476  002566  0E00               	movlw	0
 17477  002568  6E0C               	movwf	?i2___ftdiv,c
 17478  00256A  0E00               	movlw	0
 17479  00256C  6E0D               	movwf	?i2___ftdiv+1,c
 17480  00256E  0E00               	movlw	0
 17481  002570  6E0E               	movwf	?i2___ftdiv+2,c
 17482  002572  0012               	return	
 17483  002574                     i2l1835:
 17484  002574  C011  F012         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 17485  002578  6A13               	clrf	(??i2___ftdiv+1)& (0+255),c
 17486  00257A  6A14               	clrf	(??i2___ftdiv+2)& (0+255),c
 17487  00257C  3410               	rlcf	i2___ftdiv@f2+1,w,c
 17488  00257E  3612               	rlcf	??i2___ftdiv& (0+255),f,c
 17489  002580  E301               	bnc	u339_41
 17490  002582  8013               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 17491  002584                     u339_41:
 17492  002584  5012               	movf	??i2___ftdiv,w,c
 17493  002586  6E1A               	movwf	i2___ftdiv@sign,c
 17494  002588  501A               	movf	i2___ftdiv@sign,w,c
 17495  00258A  A4D8               	btfss	status,2,c
 17496  00258C  D007               	goto	i2l1837
 17497  00258E  0E00               	movlw	0
 17498  002590  6E0C               	movwf	?i2___ftdiv,c
 17499  002592  0E00               	movlw	0
 17500  002594  6E0D               	movwf	?i2___ftdiv+1,c
 17501  002596  0E00               	movlw	0
 17502  002598  6E0E               	movwf	?i2___ftdiv+2,c
 17503  00259A  0012               	return	
 17504  00259C                     i2l1837:
 17505  00259C  0E00               	movlw	0
 17506  00259E  6E16               	movwf	i2___ftdiv@f3,c
 17507  0025A0  0E00               	movlw	0
 17508  0025A2  6E17               	movwf	i2___ftdiv@f3+1,c
 17509  0025A4  0E00               	movlw	0
 17510  0025A6  6E18               	movwf	i2___ftdiv@f3+2,c
 17511  0025A8  501A               	movf	i2___ftdiv@sign,w,c
 17512  0025AA  0F89               	addlw	137
 17513  0025AC  5E19               	subwf	i2___ftdiv@exp,f,c
 17514  0025AE  C00E  F01A         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 17515  0025B2  5011               	movf	i2___ftdiv@f2+2,w,c
 17516  0025B4  1A1A               	xorwf	i2___ftdiv@sign,f,c
 17517  0025B6  0E80               	movlw	128
 17518  0025B8  161A               	andwf	i2___ftdiv@sign,f,c
 17519  0025BA  8E0D               	bsf	i2___ftdiv@f1+1,7,c
 17520  0025BC  0EFF               	movlw	255
 17521  0025BE  160C               	andwf	i2___ftdiv@f1,f,c
 17522  0025C0  0EFF               	movlw	255
 17523  0025C2  160D               	andwf	i2___ftdiv@f1+1,f,c
 17524  0025C4  0E00               	movlw	0
 17525  0025C6  160E               	andwf	i2___ftdiv@f1+2,f,c
 17526  0025C8  8E10               	bsf	i2___ftdiv@f2+1,7,c
 17527  0025CA  0EFF               	movlw	255
 17528  0025CC  160F               	andwf	i2___ftdiv@f2,f,c
 17529  0025CE  0EFF               	movlw	255
 17530  0025D0  1610               	andwf	i2___ftdiv@f2+1,f,c
 17531  0025D2  0E00               	movlw	0
 17532  0025D4  1611               	andwf	i2___ftdiv@f2+2,f,c
 17533  0025D6  0E18               	movlw	24
 17534  0025D8  6E15               	movwf	i2___ftdiv@cntr,c
 17535  0025DA  90D8               	bcf	status,0,c
 17536  0025DC  3616               	rlcf	i2___ftdiv@f3,f,c
 17537  0025DE  3617               	rlcf	i2___ftdiv@f3+1,f,c
 17538  0025E0  3618               	rlcf	i2___ftdiv@f3+2,f,c
 17539  0025E2  500F               	movf	i2___ftdiv@f2,w,c
 17540  0025E4  5C0C               	subwf	i2___ftdiv@f1,w,c
 17541  0025E6  5010               	movf	i2___ftdiv@f2+1,w,c
 17542  0025E8  580D               	subwfb	i2___ftdiv@f1+1,w,c
 17543  0025EA  5011               	movf	i2___ftdiv@f2+2,w,c
 17544  0025EC  580E               	subwfb	i2___ftdiv@f1+2,w,c
 17545  0025EE  A0D8               	btfss	status,0,c
 17546  0025F0  D007               	goto	i2l1839
 17547  0025F2  500F               	movf	i2___ftdiv@f2,w,c
 17548  0025F4  5E0C               	subwf	i2___ftdiv@f1,f,c
 17549  0025F6  5010               	movf	i2___ftdiv@f2+1,w,c
 17550  0025F8  5A0D               	subwfb	i2___ftdiv@f1+1,f,c
 17551  0025FA  5011               	movf	i2___ftdiv@f2+2,w,c
 17552  0025FC  5A0E               	subwfb	i2___ftdiv@f1+2,f,c
 17553  0025FE  8016               	bsf	i2___ftdiv@f3,0,c
 17554  002600                     i2l1839:
 17555  002600  90D8               	bcf	status,0,c
 17556  002602  360C               	rlcf	i2___ftdiv@f1,f,c
 17557  002604  360D               	rlcf	i2___ftdiv@f1+1,f,c
 17558  002606  360E               	rlcf	i2___ftdiv@f1+2,f,c
 17559  002608  2E15               	decfsz	i2___ftdiv@cntr,f,c
 17560  00260A  D7E7               	goto	i2l1838
 17561  00260C  C016  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 17562  002610  C017  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 17563  002614  C018  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 17564  002618  C019  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 17565  00261C  C01A  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 17566  002620  ECC4  F015         	call	i2___ftpack	;wreg free
 17567  002624  C001  F00C         	movff	?i2___ftpack,?i2___ftdiv
 17568  002628  C002  F00D         	movff	?i2___ftpack+1,?i2___ftdiv+1
 17569  00262C  C003  F00E         	movff	?i2___ftpack+2,?i2___ftdiv+2
 17570  002630  0012               	return	
 17571  002632                     __end_ofi2___ftdiv:
 17572                           	opt stack 0
 17573                           tosu	equ	0xFFF
 17574                           tosh	equ	0xFFE
 17575                           tosl	equ	0xFFD
 17576                           pclatu	equ	0xFFB
 17577                           pclath	equ	0xFFA
 17578                           tblptru	equ	0xFF8
 17579                           tblptrh	equ	0xFF7
 17580                           tblptrl	equ	0xFF6
 17581                           tablat	equ	0xFF5
 17582                           prodh	equ	0xFF4
 17583                           prodl	equ	0xFF3
 17584                           intcon	equ	0xFF2
 17585                           postinc0	equ	0xFEE
 17586                           fsr0h	equ	0xFEA
 17587                           fsr0l	equ	0xFE9
 17588                           wreg	equ	0xFE8
 17589                           fsr1h	equ	0xFE2
 17590                           fsr1l	equ	0xFE1
 17591                           bsr	equ	0xFE0
 17592                           indf2	equ	0xFDF
 17593                           postinc2	equ	0xFDE
 17594                           postdec2	equ	0xFDD
 17595                           fsr2h	equ	0xFDA
 17596                           fsr2l	equ	0xFD9
 17597                           status	equ	0xFD8
 17598                           
 17599 ;; *************** function i2___ftadd *****************
 17600 ;; Defined at:
 17601 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 17602 ;; Parameters:    Size  Location     Type
 17603 ;;  f1              3   29[COMRAM] float 
 17604 ;;  f2              3   32[COMRAM] float 
 17605 ;; Auto vars:     Size  Location     Type
 17606 ;;  __ftadd         1   40[COMRAM] unsigned char 
 17607 ;;  __ftadd         1   39[COMRAM] unsigned char 
 17608 ;;  __ftadd         1   38[COMRAM] unsigned char 
 17609 ;; Return value:  Size  Location     Type
 17610 ;;                  3   29[COMRAM] float 
 17611 ;; Registers used:
 17612 ;;		wreg, status,2, status,0, cstack
 17613 ;; Tracked objects:
 17614 ;;		On entry : 0/0
 17615 ;;		On exit  : 0/0
 17616 ;;		Unchanged: 0/0
 17617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17618 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17619 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17620 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17621 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17622 ;;Total ram usage:       12 bytes
 17623 ;; Hardware stack levels used:    1
 17624 ;; Hardware stack levels required when called:    1
 17625 ;; This function calls:
 17626 ;;		i2___ftpack
 17627 ;; This function is called by:
 17628 ;;		i2_delayTmr
 17629 ;; This function uses a non-reentrant model
 17630 ;;
 17631                           
 17632                           	psect	text132
 17633  0019E2                     __ptext132:
 17634                           	opt stack 0
 17635  0019E2                     i2___ftadd:
 17636                           	opt stack 7
 17637                           
 17638                           ;incstack = 0
 17639  0019E2  C020  F024         	movff	i2___ftadd@f1+2,??i2___ftadd
 17640  0019E6  6A25               	clrf	(??i2___ftadd+1)& (0+255),c
 17641  0019E8  6A26               	clrf	(??i2___ftadd+2)& (0+255),c
 17642  0019EA  341F               	rlcf	i2___ftadd@f1+1,w,c
 17643  0019EC  3624               	rlcf	??i2___ftadd& (0+255),f,c
 17644  0019EE  E301               	bnc	u316_41
 17645  0019F0  8025               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17646  0019F2                     u316_41:
 17647  0019F2  5024               	movf	??i2___ftadd,w,c
 17648  0019F4  6E29               	movwf	i2___ftadd@exp1,c
 17649  0019F6  C023  F024         	movff	i2___ftadd@f2+2,??i2___ftadd
 17650  0019FA  6A25               	clrf	(??i2___ftadd+1)& (0+255),c
 17651  0019FC  6A26               	clrf	(??i2___ftadd+2)& (0+255),c
 17652  0019FE  3422               	rlcf	i2___ftadd@f2+1,w,c
 17653  001A00  3624               	rlcf	??i2___ftadd& (0+255),f,c
 17654  001A02  E301               	bnc	u317_41
 17655  001A04  8025               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17656  001A06                     u317_41:
 17657  001A06  5024               	movf	??i2___ftadd,w,c
 17658  001A08  6E28               	movwf	i2___ftadd@exp2,c
 17659  001A0A  5029               	movf	i2___ftadd@exp1,w,c
 17660  001A0C  B4D8               	btfsc	status,2,c
 17661  001A0E  D00B               	goto	i2u320_40
 17662  001A10  5028               	movf	i2___ftadd@exp2,w,c
 17663  001A12  5C29               	subwf	i2___ftadd@exp1,w,c
 17664  001A14  B0D8               	btfsc	status,0,c
 17665  001A16  D00E               	goto	i2l1802
 17666  001A18  5029               	movf	i2___ftadd@exp1,w,c
 17667  001A1A  0800               	sublw	0
 17668  001A1C  2428               	addwf	i2___ftadd@exp2,w,c
 17669  001A1E  6E24               	movwf	??i2___ftadd& (0+255),c
 17670  001A20  0E18               	movlw	24
 17671  001A22  6424               	cpfsgt	??i2___ftadd,c
 17672  001A24  D007               	goto	i2l1802
 17673  001A26                     i2u320_40:
 17674  001A26  C021  F01E         	movff	i2___ftadd@f2,?i2___ftadd
 17675  001A2A  C022  F01F         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 17676  001A2E  C023  F020         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 17677  001A32  0012               	return	
 17678  001A34                     i2l1802:
 17679  001A34  5028               	movf	i2___ftadd@exp2,w,c
 17680  001A36  B4D8               	btfsc	status,2,c
 17681  001A38  D00B               	goto	i2u323_40
 17682  001A3A  5029               	movf	i2___ftadd@exp1,w,c
 17683  001A3C  5C28               	subwf	i2___ftadd@exp2,w,c
 17684  001A3E  B0D8               	btfsc	status,0,c
 17685  001A40  D00E               	goto	i2l1806
 17686  001A42  5028               	movf	i2___ftadd@exp2,w,c
 17687  001A44  0800               	sublw	0
 17688  001A46  2429               	addwf	i2___ftadd@exp1,w,c
 17689  001A48  6E24               	movwf	??i2___ftadd& (0+255),c
 17690  001A4A  0E18               	movlw	24
 17691  001A4C  6424               	cpfsgt	??i2___ftadd,c
 17692  001A4E  D007               	goto	i2l1806
 17693  001A50                     i2u323_40:
 17694  001A50  C01E  F01E         	movff	i2___ftadd@f1,?i2___ftadd
 17695  001A54  C01F  F01F         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 17696  001A58  C020  F020         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 17697  001A5C  0012               	return	
 17698  001A5E                     i2l1806:
 17699  001A5E  0E06               	movlw	6
 17700  001A60  6E27               	movwf	i2___ftadd@sign,c
 17701  001A62  BE20               	btfsc	i2___ftadd@f1+2,7,c
 17702  001A64  8E27               	bsf	i2___ftadd@sign,7,c
 17703  001A66  BE23               	btfsc	i2___ftadd@f2+2,7,c
 17704  001A68  8C27               	bsf	i2___ftadd@sign,6,c
 17705  001A6A  8E1F               	bsf	i2___ftadd@f1+1,7,c
 17706  001A6C  0EFF               	movlw	255
 17707  001A6E  161E               	andwf	i2___ftadd@f1,f,c
 17708  001A70  0EFF               	movlw	255
 17709  001A72  161F               	andwf	i2___ftadd@f1+1,f,c
 17710  001A74  0E00               	movlw	0
 17711  001A76  1620               	andwf	i2___ftadd@f1+2,f,c
 17712  001A78  8E22               	bsf	i2___ftadd@f2+1,7,c
 17713  001A7A  0EFF               	movlw	255
 17714  001A7C  1621               	andwf	i2___ftadd@f2,f,c
 17715  001A7E  0EFF               	movlw	255
 17716  001A80  1622               	andwf	i2___ftadd@f2+1,f,c
 17717  001A82  0E00               	movlw	0
 17718  001A84  1623               	andwf	i2___ftadd@f2+2,f,c
 17719  001A86  5028               	movf	i2___ftadd@exp2,w,c
 17720  001A88  5C29               	subwf	i2___ftadd@exp1,w,c
 17721  001A8A  B0D8               	btfsc	status,0,c
 17722  001A8C  D01B               	goto	i2l1811
 17723  001A8E                     i2u326_40:
 17724  001A8E  90D8               	bcf	status,0,c
 17725  001A90  3621               	rlcf	i2___ftadd@f2,f,c
 17726  001A92  3622               	rlcf	i2___ftadd@f2+1,f,c
 17727  001A94  3623               	rlcf	i2___ftadd@f2+2,f,c
 17728  001A96  0628               	decf	i2___ftadd@exp2,f,c
 17729  001A98  5029               	movf	i2___ftadd@exp1,w,c
 17730  001A9A  1828               	xorwf	i2___ftadd@exp2,w,c
 17731  001A9C  B4D8               	btfsc	status,2,c
 17732  001A9E  D00D               	goto	i2l1816
 17733  001AA0  0627               	decf	i2___ftadd@sign,f,c
 17734  001AA2  C027  F024         	movff	i2___ftadd@sign,??i2___ftadd
 17735  001AA6  0E07               	movlw	7
 17736  001AA8  1624               	andwf	??i2___ftadd,f,c
 17737  001AAA  B4D8               	btfsc	status,2,c
 17738  001AAC  D006               	goto	i2l1816
 17739  001AAE  D7EF               	goto	i2u326_40
 17740  001AB0  90D8               	bcf	status,0,c
 17741  001AB2  3220               	rrcf	i2___ftadd@f1+2,f,c
 17742  001AB4  321F               	rrcf	i2___ftadd@f1+1,f,c
 17743  001AB6  321E               	rrcf	i2___ftadd@f1,f,c
 17744  001AB8  2A29               	incf	i2___ftadd@exp1,f,c
 17745  001ABA                     i2l1816:
 17746  001ABA  5028               	movf	i2___ftadd@exp2,w,c
 17747  001ABC  1829               	xorwf	i2___ftadd@exp1,w,c
 17748  001ABE  B4D8               	btfsc	status,2,c
 17749  001AC0  D01F               	goto	i2u333_40
 17750  001AC2  D7F6               	goto	i2l1817
 17751  001AC4                     i2l1811:
 17752  001AC4  5029               	movf	i2___ftadd@exp1,w,c
 17753  001AC6  5C28               	subwf	i2___ftadd@exp2,w,c
 17754  001AC8  B0D8               	btfsc	status,0,c
 17755  001ACA  D01A               	goto	i2u333_40
 17756  001ACC                     i2u330_40:
 17757  001ACC  90D8               	bcf	status,0,c
 17758  001ACE  361E               	rlcf	i2___ftadd@f1,f,c
 17759  001AD0  361F               	rlcf	i2___ftadd@f1+1,f,c
 17760  001AD2  3620               	rlcf	i2___ftadd@f1+2,f,c
 17761  001AD4  0629               	decf	i2___ftadd@exp1,f,c
 17762  001AD6  5029               	movf	i2___ftadd@exp1,w,c
 17763  001AD8  1828               	xorwf	i2___ftadd@exp2,w,c
 17764  001ADA  B4D8               	btfsc	status,2,c
 17765  001ADC  D00D               	goto	i2l1825
 17766  001ADE  0627               	decf	i2___ftadd@sign,f,c
 17767  001AE0  C027  F024         	movff	i2___ftadd@sign,??i2___ftadd
 17768  001AE4  0E07               	movlw	7
 17769  001AE6  1624               	andwf	??i2___ftadd,f,c
 17770  001AE8  B4D8               	btfsc	status,2,c
 17771  001AEA  D006               	goto	i2l1825
 17772  001AEC  D7EF               	goto	i2u330_40
 17773  001AEE  90D8               	bcf	status,0,c
 17774  001AF0  3223               	rrcf	i2___ftadd@f2+2,f,c
 17775  001AF2  3222               	rrcf	i2___ftadd@f2+1,f,c
 17776  001AF4  3221               	rrcf	i2___ftadd@f2,f,c
 17777  001AF6  2A28               	incf	i2___ftadd@exp2,f,c
 17778  001AF8                     i2l1825:
 17779  001AF8  5028               	movf	i2___ftadd@exp2,w,c
 17780  001AFA  1829               	xorwf	i2___ftadd@exp1,w,c
 17781  001AFC  A4D8               	btfss	status,2,c
 17782  001AFE  D7F7               	goto	i2l1826
 17783  001B00                     i2u333_40:
 17784  001B00  AE27               	btfss	i2___ftadd@sign,7,c
 17785  001B02  D00C               	goto	i2l1828
 17786  001B04  0EFF               	movlw	255
 17787  001B06  1A1E               	xorwf	i2___ftadd@f1,f,c
 17788  001B08  0EFF               	movlw	255
 17789  001B0A  1A1F               	xorwf	i2___ftadd@f1+1,f,c
 17790  001B0C  0EFF               	movlw	255
 17791  001B0E  1A20               	xorwf	i2___ftadd@f1+2,f,c
 17792  001B10  0E01               	movlw	1
 17793  001B12  261E               	addwf	i2___ftadd@f1,f,c
 17794  001B14  0E00               	movlw	0
 17795  001B16  221F               	addwfc	i2___ftadd@f1+1,f,c
 17796  001B18  0E00               	movlw	0
 17797  001B1A  2220               	addwfc	i2___ftadd@f1+2,f,c
 17798  001B1C                     i2l1828:
 17799  001B1C  AC27               	btfss	i2___ftadd@sign,6,c
 17800  001B1E  D00C               	goto	i2l1829
 17801  001B20  0EFF               	movlw	255
 17802  001B22  1A21               	xorwf	i2___ftadd@f2,f,c
 17803  001B24  0EFF               	movlw	255
 17804  001B26  1A22               	xorwf	i2___ftadd@f2+1,f,c
 17805  001B28  0EFF               	movlw	255
 17806  001B2A  1A23               	xorwf	i2___ftadd@f2+2,f,c
 17807  001B2C  0E01               	movlw	1
 17808  001B2E  2621               	addwf	i2___ftadd@f2,f,c
 17809  001B30  0E00               	movlw	0
 17810  001B32  2222               	addwfc	i2___ftadd@f2+1,f,c
 17811  001B34  0E00               	movlw	0
 17812  001B36  2223               	addwfc	i2___ftadd@f2+2,f,c
 17813  001B38                     i2l1829:
 17814  001B38  0E00               	movlw	0
 17815  001B3A  6E27               	movwf	i2___ftadd@sign,c
 17816  001B3C  501E               	movf	i2___ftadd@f1,w,c
 17817  001B3E  2621               	addwf	i2___ftadd@f2,f,c
 17818  001B40  501F               	movf	i2___ftadd@f1+1,w,c
 17819  001B42  2222               	addwfc	i2___ftadd@f2+1,f,c
 17820  001B44  5020               	movf	i2___ftadd@f1+2,w,c
 17821  001B46  2223               	addwfc	i2___ftadd@f2+2,f,c
 17822  001B48  AE23               	btfss	i2___ftadd@f2+2,7,c
 17823  001B4A  D00E               	goto	i2l1830
 17824  001B4C  0EFF               	movlw	255
 17825  001B4E  1A21               	xorwf	i2___ftadd@f2,f,c
 17826  001B50  0EFF               	movlw	255
 17827  001B52  1A22               	xorwf	i2___ftadd@f2+1,f,c
 17828  001B54  0EFF               	movlw	255
 17829  001B56  1A23               	xorwf	i2___ftadd@f2+2,f,c
 17830  001B58  0E01               	movlw	1
 17831  001B5A  2621               	addwf	i2___ftadd@f2,f,c
 17832  001B5C  0E00               	movlw	0
 17833  001B5E  2222               	addwfc	i2___ftadd@f2+1,f,c
 17834  001B60  0E00               	movlw	0
 17835  001B62  2223               	addwfc	i2___ftadd@f2+2,f,c
 17836  001B64  0E01               	movlw	1
 17837  001B66  6E27               	movwf	i2___ftadd@sign,c
 17838  001B68                     i2l1830:
 17839  001B68  C021  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 17840  001B6C  C022  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 17841  001B70  C023  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 17842  001B74  C029  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 17843  001B78  C027  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 17844  001B7C  ECC4  F015         	call	i2___ftpack	;wreg free
 17845  001B80  C001  F01E         	movff	?i2___ftpack,?i2___ftadd
 17846  001B84  C002  F01F         	movff	?i2___ftpack+1,?i2___ftadd+1
 17847  001B88  C003  F020         	movff	?i2___ftpack+2,?i2___ftadd+2
 17848  001B8C  0012               	return	
 17849  001B8E                     __end_ofi2___ftadd:
 17850                           	opt stack 0
 17851                           tosu	equ	0xFFF
 17852                           tosh	equ	0xFFE
 17853                           tosl	equ	0xFFD
 17854                           pclatu	equ	0xFFB
 17855                           pclath	equ	0xFFA
 17856                           tblptru	equ	0xFF8
 17857                           tblptrh	equ	0xFF7
 17858                           tblptrl	equ	0xFF6
 17859                           tablat	equ	0xFF5
 17860                           prodh	equ	0xFF4
 17861                           prodl	equ	0xFF3
 17862                           intcon	equ	0xFF2
 17863                           postinc0	equ	0xFEE
 17864                           fsr0h	equ	0xFEA
 17865                           fsr0l	equ	0xFE9
 17866                           wreg	equ	0xFE8
 17867                           fsr1h	equ	0xFE2
 17868                           fsr1l	equ	0xFE1
 17869                           bsr	equ	0xFE0
 17870                           indf2	equ	0xFDF
 17871                           postinc2	equ	0xFDE
 17872                           postdec2	equ	0xFDD
 17873                           fsr2h	equ	0xFDA
 17874                           fsr2l	equ	0xFD9
 17875                           status	equ	0xFD8
 17876                           
 17877 ;; *************** function i2_TMR0_WriteTimer *****************
 17878 ;; Defined at:
 17879 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 17880 ;; Parameters:    Size  Location     Type
 17881 ;;  timerVal        2   56[COMRAM] unsigned int 
 17882 ;; Auto vars:     Size  Location     Type
 17883 ;;		None
 17884 ;; Return value:  Size  Location     Type
 17885 ;;                  1    wreg      void 
 17886 ;; Registers used:
 17887 ;;		wreg, status,2
 17888 ;; Tracked objects:
 17889 ;;		On entry : 0/0
 17890 ;;		On exit  : 0/0
 17891 ;;		Unchanged: 0/0
 17892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17897 ;;Total ram usage:        2 bytes
 17898 ;; Hardware stack levels used:    1
 17899 ;; This function calls:
 17900 ;;		Nothing
 17901 ;; This function is called by:
 17902 ;;		i2_delayTmr
 17903 ;; This function uses a non-reentrant model
 17904 ;;
 17905                           
 17906                           	psect	text133
 17907  003E94                     __ptext133:
 17908                           	opt stack 0
 17909  003E94                     i2_TMR0_WriteTimer:
 17910                           	opt stack 8
 17911                           
 17912                           ;tmr0.c: 116: TMR0H = timerVal >> 8;
 17913                           
 17914                           ;incstack = 0
 17915  003E94  503A               	movf	i2TMR0_WriteTimer@timerVal+1,w,c
 17916  003E96  6ED4               	movwf	4052,c	;volatile
 17917                           
 17918                           ;tmr0.c: 117: TMR0L = (uint8_t) timerVal;
 17919  003E98  C039  FFD3         	movff	i2TMR0_WriteTimer@timerVal,4051	;volatile
 17920  003E9C  0012               	return		;funcret
 17921  003E9E                     __end_ofi2_TMR0_WriteTimer:
 17922                           	opt stack 0
 17923                           tosu	equ	0xFFF
 17924                           tosh	equ	0xFFE
 17925                           tosl	equ	0xFFD
 17926                           pclatu	equ	0xFFB
 17927                           pclath	equ	0xFFA
 17928                           tblptru	equ	0xFF8
 17929                           tblptrh	equ	0xFF7
 17930                           tblptrl	equ	0xFF6
 17931                           tablat	equ	0xFF5
 17932                           prodh	equ	0xFF4
 17933                           prodl	equ	0xFF3
 17934                           intcon	equ	0xFF2
 17935                           postinc0	equ	0xFEE
 17936                           fsr0h	equ	0xFEA
 17937                           fsr0l	equ	0xFE9
 17938                           wreg	equ	0xFE8
 17939                           fsr1h	equ	0xFE2
 17940                           fsr1l	equ	0xFE1
 17941                           bsr	equ	0xFE0
 17942                           indf2	equ	0xFDF
 17943                           postinc2	equ	0xFDE
 17944                           postdec2	equ	0xFDD
 17945                           fsr2h	equ	0xFDA
 17946                           fsr2l	equ	0xFD9
 17947                           status	equ	0xFD8
 17948                           
 17949 ;; *************** function i2_TMR0_StopTimer *****************
 17950 ;; Defined at:
 17951 ;;		line 94 in file "mcc_generated_files/tmr0.c"
 17952 ;; Parameters:    Size  Location     Type
 17953 ;;		None
 17954 ;; Auto vars:     Size  Location     Type
 17955 ;;		None
 17956 ;; Return value:  Size  Location     Type
 17957 ;;                  1    wreg      void 
 17958 ;; Registers used:
 17959 ;;		None
 17960 ;; Tracked objects:
 17961 ;;		On entry : 0/0
 17962 ;;		On exit  : 0/0
 17963 ;;		Unchanged: 0/0
 17964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17969 ;;Total ram usage:        0 bytes
 17970 ;; Hardware stack levels used:    1
 17971 ;; This function calls:
 17972 ;;		Nothing
 17973 ;; This function is called by:
 17974 ;;		i2_delayTmr
 17975 ;; This function uses a non-reentrant model
 17976 ;;
 17977                           
 17978                           	psect	text134
 17979  003EB6                     __ptext134:
 17980                           	opt stack 0
 17981  003EB6                     i2_TMR0_StopTimer:
 17982                           	opt stack 8
 17983                           
 17984                           ;tmr0.c: 97: T0CON0bits.T0EN = 0;
 17985                           
 17986                           ;incstack = 0
 17987  003EB6  9ED5               	bcf	4053,7,c	;volatile
 17988  003EB8  0012               	return		;funcret
 17989  003EBA                     __end_ofi2_TMR0_StopTimer:
 17990                           	opt stack 0
 17991                           tosu	equ	0xFFF
 17992                           tosh	equ	0xFFE
 17993                           tosl	equ	0xFFD
 17994                           pclatu	equ	0xFFB
 17995                           pclath	equ	0xFFA
 17996                           tblptru	equ	0xFF8
 17997                           tblptrh	equ	0xFF7
 17998                           tblptrl	equ	0xFF6
 17999                           tablat	equ	0xFF5
 18000                           prodh	equ	0xFF4
 18001                           prodl	equ	0xFF3
 18002                           intcon	equ	0xFF2
 18003                           postinc0	equ	0xFEE
 18004                           fsr0h	equ	0xFEA
 18005                           fsr0l	equ	0xFE9
 18006                           wreg	equ	0xFE8
 18007                           fsr1h	equ	0xFE2
 18008                           fsr1l	equ	0xFE1
 18009                           bsr	equ	0xFE0
 18010                           indf2	equ	0xFDF
 18011                           postinc2	equ	0xFDE
 18012                           postdec2	equ	0xFDD
 18013                           fsr2h	equ	0xFDA
 18014                           fsr2l	equ	0xFD9
 18015                           status	equ	0xFD8
 18016                           
 18017 ;; *************** function i2_TMR0_StartTimer *****************
 18018 ;; Defined at:
 18019 ;;		line 88 in file "mcc_generated_files/tmr0.c"
 18020 ;; Parameters:    Size  Location     Type
 18021 ;;		None
 18022 ;; Auto vars:     Size  Location     Type
 18023 ;;		None
 18024 ;; Return value:  Size  Location     Type
 18025 ;;                  1    wreg      void 
 18026 ;; Registers used:
 18027 ;;		None
 18028 ;; Tracked objects:
 18029 ;;		On entry : 0/0
 18030 ;;		On exit  : 0/0
 18031 ;;		Unchanged: 0/0
 18032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18037 ;;Total ram usage:        0 bytes
 18038 ;; Hardware stack levels used:    1
 18039 ;; This function calls:
 18040 ;;		Nothing
 18041 ;; This function is called by:
 18042 ;;		i2_delayTmr
 18043 ;; This function uses a non-reentrant model
 18044 ;;
 18045                           
 18046                           	psect	text135
 18047  003EBA                     __ptext135:
 18048                           	opt stack 0
 18049  003EBA                     i2_TMR0_StartTimer:
 18050                           	opt stack 8
 18051                           
 18052                           ;tmr0.c: 91: T0CON0bits.T0EN = 1;
 18053                           
 18054                           ;incstack = 0
 18055  003EBA  8ED5               	bsf	4053,7,c	;volatile
 18056  003EBC  0012               	return		;funcret
 18057  003EBE                     __end_ofi2_TMR0_StartTimer:
 18058                           	opt stack 0
 18059                           tosu	equ	0xFFF
 18060                           tosh	equ	0xFFE
 18061                           tosl	equ	0xFFD
 18062                           pclatu	equ	0xFFB
 18063                           pclath	equ	0xFFA
 18064                           tblptru	equ	0xFF8
 18065                           tblptrh	equ	0xFF7
 18066                           tblptrl	equ	0xFF6
 18067                           tablat	equ	0xFF5
 18068                           prodh	equ	0xFF4
 18069                           prodl	equ	0xFF3
 18070                           intcon	equ	0xFF2
 18071                           postinc0	equ	0xFEE
 18072                           fsr0h	equ	0xFEA
 18073                           fsr0l	equ	0xFE9
 18074                           wreg	equ	0xFE8
 18075                           fsr1h	equ	0xFE2
 18076                           fsr1l	equ	0xFE1
 18077                           bsr	equ	0xFE0
 18078                           indf2	equ	0xFDF
 18079                           postinc2	equ	0xFDE
 18080                           postdec2	equ	0xFDD
 18081                           fsr2h	equ	0xFDA
 18082                           fsr2l	equ	0xFD9
 18083                           status	equ	0xFD8
 18084                           
 18085 ;; *************** function i2_TMR0_Reload *****************
 18086 ;; Defined at:
 18087 ;;		line 120 in file "mcc_generated_files/tmr0.c"
 18088 ;; Parameters:    Size  Location     Type
 18089 ;;		None
 18090 ;; Auto vars:     Size  Location     Type
 18091 ;;		None
 18092 ;; Return value:  Size  Location     Type
 18093 ;;                  1    wreg      void 
 18094 ;; Registers used:
 18095 ;;		wreg, status,2
 18096 ;; Tracked objects:
 18097 ;;		On entry : 0/0
 18098 ;;		On exit  : 0/0
 18099 ;;		Unchanged: 0/0
 18100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18105 ;;Total ram usage:        0 bytes
 18106 ;; Hardware stack levels used:    1
 18107 ;; This function calls:
 18108 ;;		Nothing
 18109 ;; This function is called by:
 18110 ;;		i2_delayTmr
 18111 ;; This function uses a non-reentrant model
 18112 ;;
 18113                           
 18114                           	psect	text136
 18115  003E88                     __ptext136:
 18116                           	opt stack 0
 18117  003E88                     i2_TMR0_Reload:
 18118                           	opt stack 8
 18119                           
 18120                           ;tmr0.c: 123: TMR0H = timer0ReloadVal16bit >> 8;
 18121                           
 18122                           ;incstack = 0
 18123  003E88  0100               	movlb	0	; () banked
 18124  003E8A  51F0               	movf	(_timer0ReloadVal16bit+1)& (0+255),w,b	;volatile
 18125  003E8C  6ED4               	movwf	4052,c	;volatile
 18126                           
 18127                           ; BSR set to: 0
 18128                           ;tmr0.c: 124: TMR0L = (uint8_t) timer0ReloadVal16bit;
 18129  003E8E  C0EF  FFD3         	movff	_timer0ReloadVal16bit,4051	;volatile
 18130                           
 18131                           ; BSR set to: 0
 18132  003E92  0012               	return		;funcret
 18133  003E94                     __end_ofi2_TMR0_Reload:
 18134                           	opt stack 0
 18135                           tosu	equ	0xFFF
 18136                           tosh	equ	0xFFE
 18137                           tosl	equ	0xFFD
 18138                           pclatu	equ	0xFFB
 18139                           pclath	equ	0xFFA
 18140                           tblptru	equ	0xFF8
 18141                           tblptrh	equ	0xFF7
 18142                           tblptrl	equ	0xFF6
 18143                           tablat	equ	0xFF5
 18144                           prodh	equ	0xFF4
 18145                           prodl	equ	0xFF3
 18146                           intcon	equ	0xFF2
 18147                           postinc0	equ	0xFEE
 18148                           fsr0h	equ	0xFEA
 18149                           fsr0l	equ	0xFE9
 18150                           wreg	equ	0xFE8
 18151                           fsr1h	equ	0xFE2
 18152                           fsr1l	equ	0xFE1
 18153                           bsr	equ	0xFE0
 18154                           indf2	equ	0xFDF
 18155                           postinc2	equ	0xFDE
 18156                           postdec2	equ	0xFDD
 18157                           fsr2h	equ	0xFDA
 18158                           fsr2l	equ	0xFD9
 18159                           status	equ	0xFD8
 18160                           
 18161 ;; *************** function i2___ftmul *****************
 18162 ;; Defined at:
 18163 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 18164 ;; Parameters:    Size  Location     Type
 18165 ;;  f1              3   11[COMRAM] float 
 18166 ;;  f2              3   14[COMRAM] float 
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;  __ftmul         3   21[COMRAM] unsigned um
 18169 ;;  __ftmul         1   25[COMRAM] unsigned char 
 18170 ;;  __ftmul         1   24[COMRAM] unsigned char 
 18171 ;;  __ftmul         1   20[COMRAM] unsigned char 
 18172 ;; Return value:  Size  Location     Type
 18173 ;;                  3   11[COMRAM] float 
 18174 ;; Registers used:
 18175 ;;		wreg, status,2, status,0, cstack
 18176 ;; Tracked objects:
 18177 ;;		On entry : 0/0
 18178 ;;		On exit  : 0/0
 18179 ;;		Unchanged: 0/0
 18180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18181 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18182 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18183 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18184 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18185 ;;Total ram usage:       15 bytes
 18186 ;; Hardware stack levels used:    1
 18187 ;; Hardware stack levels required when called:    1
 18188 ;; This function calls:
 18189 ;;		i2___ftpack
 18190 ;; This function is called by:
 18191 ;;		i2_girarXgradosizquierda
 18192 ;;		i2_girarXgradosderecha
 18193 ;; This function uses a non-reentrant model
 18194 ;;
 18195                           
 18196                           	psect	text137
 18197  00228A                     __ptext137:
 18198                           	opt stack 0
 18199  00228A                     i2___ftmul:
 18200                           	opt stack 8
 18201                           
 18202                           ; BSR set to: 0
 18203                           ;incstack = 0
 18204  00228A  C00E  F012         	movff	i2___ftmul@f1+2,??i2___ftmul
 18205  00228E  6A13               	clrf	(??i2___ftmul+1)& (0+255),c
 18206  002290  6A14               	clrf	(??i2___ftmul+2)& (0+255),c
 18207  002292  340D               	rlcf	i2___ftmul@f1+1,w,c
 18208  002294  3612               	rlcf	??i2___ftmul& (0+255),f,c
 18209  002296  E301               	bnc	u364_41
 18210  002298  8013               	bsf	(??i2___ftmul+1)& (0+255),0,c
 18211  00229A                     u364_41:
 18212  00229A  5012               	movf	??i2___ftmul,w,c
 18213  00229C  6E15               	movwf	i2___ftmul@exp,c
 18214  00229E  5015               	movf	i2___ftmul@exp,w,c
 18215  0022A0  A4D8               	btfss	status,2,c
 18216  0022A2  D007               	goto	i2l1850
 18217  0022A4  0E00               	movlw	0
 18218  0022A6  6E0C               	movwf	?i2___ftmul,c
 18219  0022A8  0E00               	movlw	0
 18220  0022AA  6E0D               	movwf	?i2___ftmul+1,c
 18221  0022AC  0E00               	movlw	0
 18222  0022AE  6E0E               	movwf	?i2___ftmul+2,c
 18223  0022B0  0012               	return	
 18224  0022B2                     i2l1850:
 18225  0022B2  C011  F012         	movff	i2___ftmul@f2+2,??i2___ftmul
 18226  0022B6  6A13               	clrf	(??i2___ftmul+1)& (0+255),c
 18227  0022B8  6A14               	clrf	(??i2___ftmul+2)& (0+255),c
 18228  0022BA  3410               	rlcf	i2___ftmul@f2+1,w,c
 18229  0022BC  3612               	rlcf	??i2___ftmul& (0+255),f,c
 18230  0022BE  E301               	bnc	u366_41
 18231  0022C0  8013               	bsf	(??i2___ftmul+1)& (0+255),0,c
 18232  0022C2                     u366_41:
 18233  0022C2  5012               	movf	??i2___ftmul,w,c
 18234  0022C4  6E1A               	movwf	i2___ftmul@sign,c
 18235  0022C6  501A               	movf	i2___ftmul@sign,w,c
 18236  0022C8  A4D8               	btfss	status,2,c
 18237  0022CA  D007               	goto	i2l1852
 18238  0022CC  0E00               	movlw	0
 18239  0022CE  6E0C               	movwf	?i2___ftmul,c
 18240  0022D0  0E00               	movlw	0
 18241  0022D2  6E0D               	movwf	?i2___ftmul+1,c
 18242  0022D4  0E00               	movlw	0
 18243  0022D6  6E0E               	movwf	?i2___ftmul+2,c
 18244  0022D8  0012               	return	
 18245  0022DA                     i2l1852:
 18246  0022DA  501A               	movf	i2___ftmul@sign,w,c
 18247  0022DC  0F7B               	addlw	123
 18248  0022DE  2615               	addwf	i2___ftmul@exp,f,c
 18249  0022E0  C00E  F01A         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 18250  0022E4  5011               	movf	i2___ftmul@f2+2,w,c
 18251  0022E6  1A1A               	xorwf	i2___ftmul@sign,f,c
 18252  0022E8  0E80               	movlw	128
 18253  0022EA  161A               	andwf	i2___ftmul@sign,f,c
 18254  0022EC  8E0D               	bsf	i2___ftmul@f1+1,7,c
 18255  0022EE  8E10               	bsf	i2___ftmul@f2+1,7,c
 18256  0022F0  0EFF               	movlw	255
 18257  0022F2  160F               	andwf	i2___ftmul@f2,f,c
 18258  0022F4  0EFF               	movlw	255
 18259  0022F6  1610               	andwf	i2___ftmul@f2+1,f,c
 18260  0022F8  0E00               	movlw	0
 18261  0022FA  1611               	andwf	i2___ftmul@f2+2,f,c
 18262  0022FC  0E00               	movlw	0
 18263  0022FE  6E16               	movwf	i2___ftmul@f3_as_product,c
 18264  002300  0E00               	movlw	0
 18265  002302  6E17               	movwf	i2___ftmul@f3_as_product+1,c
 18266  002304  0E00               	movlw	0
 18267  002306  6E18               	movwf	i2___ftmul@f3_as_product+2,c
 18268  002308  0E07               	movlw	7
 18269  00230A  6E19               	movwf	i2___ftmul@cntr,c
 18270  00230C  A00C               	btfss	i2___ftmul@f1,0,c
 18271  00230E  D006               	goto	i2l1854
 18272  002310  500F               	movf	i2___ftmul@f2,w,c
 18273  002312  2616               	addwf	i2___ftmul@f3_as_product,f,c
 18274  002314  5010               	movf	i2___ftmul@f2+1,w,c
 18275  002316  2217               	addwfc	i2___ftmul@f3_as_product+1,f,c
 18276  002318  5011               	movf	i2___ftmul@f2+2,w,c
 18277  00231A  2218               	addwfc	i2___ftmul@f3_as_product+2,f,c
 18278  00231C                     i2l1854:
 18279  00231C  90D8               	bcf	status,0,c
 18280  00231E  320E               	rrcf	i2___ftmul@f1+2,f,c
 18281  002320  320D               	rrcf	i2___ftmul@f1+1,f,c
 18282  002322  320C               	rrcf	i2___ftmul@f1,f,c
 18283  002324  90D8               	bcf	status,0,c
 18284  002326  360F               	rlcf	i2___ftmul@f2,f,c
 18285  002328  3610               	rlcf	i2___ftmul@f2+1,f,c
 18286  00232A  3611               	rlcf	i2___ftmul@f2+2,f,c
 18287  00232C  2E19               	decfsz	i2___ftmul@cntr,f,c
 18288  00232E  D7EE               	goto	i2l1853
 18289  002330  0E09               	movlw	9
 18290  002332  6E19               	movwf	i2___ftmul@cntr,c
 18291  002334  A00C               	btfss	i2___ftmul@f1,0,c
 18292  002336  D006               	goto	i2l1857
 18293  002338  500F               	movf	i2___ftmul@f2,w,c
 18294  00233A  2616               	addwf	i2___ftmul@f3_as_product,f,c
 18295  00233C  5010               	movf	i2___ftmul@f2+1,w,c
 18296  00233E  2217               	addwfc	i2___ftmul@f3_as_product+1,f,c
 18297  002340  5011               	movf	i2___ftmul@f2+2,w,c
 18298  002342  2218               	addwfc	i2___ftmul@f3_as_product+2,f,c
 18299  002344                     i2l1857:
 18300  002344  90D8               	bcf	status,0,c
 18301  002346  320E               	rrcf	i2___ftmul@f1+2,f,c
 18302  002348  320D               	rrcf	i2___ftmul@f1+1,f,c
 18303  00234A  320C               	rrcf	i2___ftmul@f1,f,c
 18304  00234C  90D8               	bcf	status,0,c
 18305  00234E  3218               	rrcf	i2___ftmul@f3_as_product+2,f,c
 18306  002350  3217               	rrcf	i2___ftmul@f3_as_product+1,f,c
 18307  002352  3216               	rrcf	i2___ftmul@f3_as_product,f,c
 18308  002354  2E19               	decfsz	i2___ftmul@cntr,f,c
 18309  002356  D7EE               	goto	i2l1856
 18310  002358  C016  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 18311  00235C  C017  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 18312  002360  C018  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 18313  002364  C015  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 18314  002368  C01A  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 18315  00236C  ECC4  F015         	call	i2___ftpack	;wreg free
 18316  002370  C001  F00C         	movff	?i2___ftpack,?i2___ftmul
 18317  002374  C002  F00D         	movff	?i2___ftpack+1,?i2___ftmul+1
 18318  002378  C003  F00E         	movff	?i2___ftpack+2,?i2___ftmul+2
 18319  00237C  0012               	return	
 18320  00237E                     __end_ofi2___ftmul:
 18321                           	opt stack 0
 18322                           tosu	equ	0xFFF
 18323                           tosh	equ	0xFFE
 18324                           tosl	equ	0xFFD
 18325                           pclatu	equ	0xFFB
 18326                           pclath	equ	0xFFA
 18327                           tblptru	equ	0xFF8
 18328                           tblptrh	equ	0xFF7
 18329                           tblptrl	equ	0xFF6
 18330                           tablat	equ	0xFF5
 18331                           prodh	equ	0xFF4
 18332                           prodl	equ	0xFF3
 18333                           intcon	equ	0xFF2
 18334                           postinc0	equ	0xFEE
 18335                           fsr0h	equ	0xFEA
 18336                           fsr0l	equ	0xFE9
 18337                           wreg	equ	0xFE8
 18338                           fsr1h	equ	0xFE2
 18339                           fsr1l	equ	0xFE1
 18340                           bsr	equ	0xFE0
 18341                           indf2	equ	0xFDF
 18342                           postinc2	equ	0xFDE
 18343                           postdec2	equ	0xFDD
 18344                           fsr2h	equ	0xFDA
 18345                           fsr2l	equ	0xFD9
 18346                           status	equ	0xFD8
 18347                           
 18348 ;; *************** function i2___ftpack *****************
 18349 ;; Defined at:
 18350 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 18351 ;; Parameters:    Size  Location     Type
 18352 ;;  arg             3    0[COMRAM] unsigned um
 18353 ;;  exp             1    3[COMRAM] unsigned char 
 18354 ;;  sign            1    4[COMRAM] unsigned char 
 18355 ;; Auto vars:     Size  Location     Type
 18356 ;;		None
 18357 ;; Return value:  Size  Location     Type
 18358 ;;                  3    0[COMRAM] float 
 18359 ;; Registers used:
 18360 ;;		wreg, status,2, status,0
 18361 ;; Tracked objects:
 18362 ;;		On entry : 0/0
 18363 ;;		On exit  : 0/0
 18364 ;;		Unchanged: 0/0
 18365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18366 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18368 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18369 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18370 ;;Total ram usage:        8 bytes
 18371 ;; Hardware stack levels used:    1
 18372 ;; This function calls:
 18373 ;;		Nothing
 18374 ;; This function is called by:
 18375 ;;		i2___ftadd
 18376 ;;		i2___ftdiv
 18377 ;;		i2___ftmul
 18378 ;;		i2___lwtoft
 18379 ;; This function uses a non-reentrant model
 18380 ;;
 18381                           
 18382                           	psect	text138
 18383  002B88                     __ptext138:
 18384                           	opt stack 0
 18385  002B88                     i2___ftpack:
 18386                           	opt stack 7
 18387                           
 18388                           ;incstack = 0
 18389  002B88  5004               	movf	i2___ftpack@exp,w,c
 18390  002B8A  B4D8               	btfsc	status,2,c
 18391  002B8C  D005               	goto	i2u309_40
 18392  002B8E  5001               	movf	i2___ftpack@arg,w,c
 18393  002B90  1002               	iorwf	i2___ftpack@arg+1,w,c
 18394  002B92  1003               	iorwf	i2___ftpack@arg+2,w,c
 18395  002B94  A4D8               	btfss	status,2,c
 18396  002B96  D00C               	goto	i2l1771
 18397  002B98                     i2u309_40:
 18398  002B98  0E00               	movlw	0
 18399  002B9A  6E01               	movwf	?i2___ftpack,c
 18400  002B9C  0E00               	movlw	0
 18401  002B9E  6E02               	movwf	?i2___ftpack+1,c
 18402  002BA0  0E00               	movlw	0
 18403  002BA2  6E03               	movwf	?i2___ftpack+2,c
 18404  002BA4  0012               	return	
 18405  002BA6  2A04               	incf	i2___ftpack@exp,f,c
 18406  002BA8  90D8               	bcf	status,0,c
 18407  002BAA  3203               	rrcf	i2___ftpack@arg+2,f,c
 18408  002BAC  3202               	rrcf	i2___ftpack@arg+1,f,c
 18409  002BAE  3201               	rrcf	i2___ftpack@arg,f,c
 18410  002BB0                     i2l1771:
 18411  002BB0  0E00               	movlw	0
 18412  002BB2  1401               	andwf	i2___ftpack@arg,w,c
 18413  002BB4  6E06               	movwf	??i2___ftpack& (0+255),c
 18414  002BB6  0E00               	movlw	0
 18415  002BB8  1402               	andwf	i2___ftpack@arg+1,w,c
 18416  002BBA  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 18417  002BBC  0EFE               	movlw	254
 18418  002BBE  1403               	andwf	i2___ftpack@arg+2,w,c
 18419  002BC0  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 18420  002BC2  5006               	movf	??i2___ftpack,w,c
 18421  002BC4  1007               	iorwf	??i2___ftpack+1,w,c
 18422  002BC6  1008               	iorwf	??i2___ftpack+2,w,c
 18423  002BC8  B4D8               	btfsc	status,2,c
 18424  002BCA  D00C               	goto	i2l1774
 18425  002BCC  D7EC               	goto	i2l1772
 18426  002BCE  2A04               	incf	i2___ftpack@exp,f,c
 18427  002BD0  0E01               	movlw	1
 18428  002BD2  2601               	addwf	i2___ftpack@arg,f,c
 18429  002BD4  0E00               	movlw	0
 18430  002BD6  2202               	addwfc	i2___ftpack@arg+1,f,c
 18431  002BD8  0E00               	movlw	0
 18432  002BDA  2203               	addwfc	i2___ftpack@arg+2,f,c
 18433  002BDC  90D8               	bcf	status,0,c
 18434  002BDE  3203               	rrcf	i2___ftpack@arg+2,f,c
 18435  002BE0  3202               	rrcf	i2___ftpack@arg+1,f,c
 18436  002BE2  3201               	rrcf	i2___ftpack@arg,f,c
 18437  002BE4                     i2l1774:
 18438  002BE4  0E00               	movlw	0
 18439  002BE6  1401               	andwf	i2___ftpack@arg,w,c
 18440  002BE8  6E06               	movwf	??i2___ftpack& (0+255),c
 18441  002BEA  0E00               	movlw	0
 18442  002BEC  1402               	andwf	i2___ftpack@arg+1,w,c
 18443  002BEE  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 18444  002BF0  0EFF               	movlw	255
 18445  002BF2  1403               	andwf	i2___ftpack@arg+2,w,c
 18446  002BF4  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 18447  002BF6  5006               	movf	??i2___ftpack,w,c
 18448  002BF8  1007               	iorwf	??i2___ftpack+1,w,c
 18449  002BFA  1008               	iorwf	??i2___ftpack+2,w,c
 18450  002BFC  B4D8               	btfsc	status,2,c
 18451  002BFE  D006               	goto	i2l1777
 18452  002C00  D7E6               	goto	i2l1775
 18453  002C02  0604               	decf	i2___ftpack@exp,f,c
 18454  002C04  90D8               	bcf	status,0,c
 18455  002C06  3601               	rlcf	i2___ftpack@arg,f,c
 18456  002C08  3602               	rlcf	i2___ftpack@arg+1,f,c
 18457  002C0A  3603               	rlcf	i2___ftpack@arg+2,f,c
 18458  002C0C                     i2l1777:
 18459  002C0C  BE02               	btfsc	i2___ftpack@arg+1,7,c
 18460  002C0E  D003               	goto	i2u313_40
 18461  002C10  0E02               	movlw	2
 18462  002C12  6004               	cpfslt	i2___ftpack@exp,c
 18463  002C14  D7F6               	goto	i2l1778
 18464  002C16                     i2u313_40:
 18465  002C16  A004               	btfss	i2___ftpack@exp,0,c
 18466  002C18  9E02               	bcf	i2___ftpack@arg+1,7,c
 18467  002C1A  90D8               	bcf	status,0,c
 18468  002C1C  3204               	rrcf	i2___ftpack@exp,f,c
 18469  002C1E  5004               	movf	i2___ftpack@exp,w,c
 18470  002C20  1203               	iorwf	i2___ftpack@arg+2,f,c
 18471  002C22  5005               	movf	i2___ftpack@sign,w,c
 18472  002C24  A4D8               	btfss	status,2,c
 18473  002C26  8E03               	bsf	i2___ftpack@arg+2,7,c
 18474  002C28  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 18475  002C2C  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 18476  002C30  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 18477  002C34  0012               	return	
 18478  002C36                     __end_ofi2___ftpack:
 18479                           	opt stack 0
 18480                           tosu	equ	0xFFF
 18481                           tosh	equ	0xFFE
 18482                           tosl	equ	0xFFD
 18483                           pclatu	equ	0xFFB
 18484                           pclath	equ	0xFFA
 18485                           tblptru	equ	0xFF8
 18486                           tblptrh	equ	0xFF7
 18487                           tblptrl	equ	0xFF6
 18488                           tablat	equ	0xFF5
 18489                           prodh	equ	0xFF4
 18490                           prodl	equ	0xFF3
 18491                           intcon	equ	0xFF2
 18492                           postinc0	equ	0xFEE
 18493                           fsr0h	equ	0xFEA
 18494                           fsr0l	equ	0xFE9
 18495                           wreg	equ	0xFE8
 18496                           fsr1h	equ	0xFE2
 18497                           fsr1l	equ	0xFE1
 18498                           bsr	equ	0xFE0
 18499                           indf2	equ	0xFDF
 18500                           postinc2	equ	0xFDE
 18501                           postdec2	equ	0xFDD
 18502                           fsr2h	equ	0xFDA
 18503                           fsr2l	equ	0xFD9
 18504                           status	equ	0xFD8
 18505                           tosu	equ	0xFFF
 18506                           tosh	equ	0xFFE
 18507                           tosl	equ	0xFFD
 18508                           pclatu	equ	0xFFB
 18509                           pclath	equ	0xFFA
 18510                           tblptru	equ	0xFF8
 18511                           tblptrh	equ	0xFF7
 18512                           tblptrl	equ	0xFF6
 18513                           tablat	equ	0xFF5
 18514                           prodh	equ	0xFF4
 18515                           prodl	equ	0xFF3
 18516                           intcon	equ	0xFF2
 18517                           postinc0	equ	0xFEE
 18518                           fsr0h	equ	0xFEA
 18519                           fsr0l	equ	0xFE9
 18520                           wreg	equ	0xFE8
 18521                           fsr1h	equ	0xFE2
 18522                           fsr1l	equ	0xFE1
 18523                           bsr	equ	0xFE0
 18524                           indf2	equ	0xFDF
 18525                           postinc2	equ	0xFDE
 18526                           postdec2	equ	0xFDD
 18527                           fsr2h	equ	0xFDA
 18528                           fsr2l	equ	0xFD9
 18529                           status	equ	0xFD8
 18530                           
 18531                           	psect	text139
 18532  000000                     __ptext139:
 18533                           	opt stack 0
 18534                           tosu	equ	0xFFF
 18535                           tosh	equ	0xFFE
 18536                           tosl	equ	0xFFD
 18537                           pclatu	equ	0xFFB
 18538                           pclath	equ	0xFFA
 18539                           tblptru	equ	0xFF8
 18540                           tblptrh	equ	0xFF7
 18541                           tblptrl	equ	0xFF6
 18542                           tablat	equ	0xFF5
 18543                           prodh	equ	0xFF4
 18544                           prodl	equ	0xFF3
 18545                           intcon	equ	0xFF2
 18546                           postinc0	equ	0xFEE
 18547                           fsr0h	equ	0xFEA
 18548                           fsr0l	equ	0xFE9
 18549                           wreg	equ	0xFE8
 18550                           fsr1h	equ	0xFE2
 18551                           fsr1l	equ	0xFE1
 18552                           bsr	equ	0xFE0
 18553                           indf2	equ	0xFDF
 18554                           postinc2	equ	0xFDE
 18555                           postdec2	equ	0xFDD
 18556                           fsr2h	equ	0xFDA
 18557                           fsr2l	equ	0xFD9
 18558                           status	equ	0xFD8
 18559                           
 18560                           	psect	rparam
 18561  0000                     tosu	equ	0xFFF
 18562                           tosh	equ	0xFFE
 18563                           tosl	equ	0xFFD
 18564                           pclatu	equ	0xFFB
 18565                           pclath	equ	0xFFA
 18566                           tblptru	equ	0xFF8
 18567                           tblptrh	equ	0xFF7
 18568                           tblptrl	equ	0xFF6
 18569                           tablat	equ	0xFF5
 18570                           prodh	equ	0xFF4
 18571                           prodl	equ	0xFF3
 18572                           intcon	equ	0xFF2
 18573                           postinc0	equ	0xFEE
 18574                           fsr0h	equ	0xFEA
 18575                           fsr0l	equ	0xFE9
 18576                           wreg	equ	0xFE8
 18577                           fsr1h	equ	0xFE2
 18578                           fsr1l	equ	0xFE1
 18579                           bsr	equ	0xFE0
 18580                           indf2	equ	0xFDF
 18581                           postinc2	equ	0xFDE
 18582                           postdec2	equ	0xFDD
 18583                           fsr2h	equ	0xFDA
 18584                           fsr2l	equ	0xFD9
 18585                           status	equ	0xFD8
 18586                           
 18587                           	psect	temp
 18588  00005F                     btemp:
 18589                           	opt stack 0
 18590  00005F                     	ds	1
 18591  0000                     int$flags	set	btemp
 18592  0000                     wtemp6	set	btemp+1
 18593                           tosu	equ	0xFFF
 18594                           tosh	equ	0xFFE
 18595                           tosl	equ	0xFFD
 18596                           pclatu	equ	0xFFB
 18597                           pclath	equ	0xFFA
 18598                           tblptru	equ	0xFF8
 18599                           tblptrh	equ	0xFF7
 18600                           tblptrl	equ	0xFF6
 18601                           tablat	equ	0xFF5
 18602                           prodh	equ	0xFF4
 18603                           prodl	equ	0xFF3
 18604                           intcon	equ	0xFF2
 18605                           postinc0	equ	0xFEE
 18606                           fsr0h	equ	0xFEA
 18607                           fsr0l	equ	0xFE9
 18608                           wreg	equ	0xFE8
 18609                           fsr1h	equ	0xFE2
 18610                           fsr1l	equ	0xFE1
 18611                           bsr	equ	0xFE0
 18612                           indf2	equ	0xFDF
 18613                           postinc2	equ	0xFDE
 18614                           postdec2	equ	0xFDD
 18615                           fsr2h	equ	0xFDA
 18616                           fsr2l	equ	0xFD9
 18617                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         63
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160     75     149
    BANK1           256     75      94
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    buscar_t_init@med	PTR struct buscar_t size(2) Largest target is 4
		 -> med_right(BANK1[4]), med_left(BANK1[4]), med_back(BANK1[4]), med_front(BANK1[4]), 
		 -> med_final(BANK0[4]), 

    tactica_elegir@tactica_funcion	PTR FTN()void  size(3) Largest target is 1
		 -> tactica_right_1(), tactica_left_1(), tactica_front_2(), tactica_front_1(), 
		 -> tactica_back_1(), tactica_default(), 

    tactica_elegida	PTR FTN()void  size(3) Largest target is 1
		 -> tactica_right_1(), tactica_left_1(), tactica_front_2(), tactica_front_1(), 
		 -> tactica_back_1(), tactica_default(), Absolute function(), 

    findClosest@arr	PTR unsigned char  size(2) Largest target is 2
		 -> dist_tacticas_back(BANK0[1]), dist_tacticas_front(BANK0[2]), dist_tacticas_right(BANK0[1]), dist_tacticas_left(BANK0[1]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> usonic_tick(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> usonic_tick(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3G_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> pulsoCapturadoTimer3(), 

    TMR3G_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> pulsoCapturadoTimer3(), Absolute function(), 

    TMR1G_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> pulsoCapturadoTimer1(), 

    TMR1G_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> pulsoCapturadoTimer1(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> borde_isr(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> borde_isr(), Absolute function(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> borde_isr(), IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> borde_isr(), Absolute function(), IOCBF2_DefaultInterruptHandler(), 

    IOCBF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> borde_isr(), IOCBF1_DefaultInterruptHandler(), 

    IOCBF1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> borde_isr(), Absolute function(), IOCBF1_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> borde_isr(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> borde_isr(), Absolute function(), IOCBF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _pulsoCapturadoTimer3->_TMR3_ReadTimer
    _TMR3_Reload->_TMR3_WriteTimer
    _pulsoCapturadoTimer1->_TMR1_ReadTimer
    _TMR1_Reload->_TMR1_WriteTimer
    _IOCBF3_ISR->_borde_isr
    _IOCBF2_ISR->_borde_isr
    _IOCBF1_ISR->_borde_isr
    _IOCBF0_ISR->_borde_isr
    _borde_isr->_borde_detectado
    _acomodarse->i2_girarXgradosderecha
    _acomodarse->i2_girarXgradosizquierda
    i2_marcharAtrasTiempo->i2_delayTmr
    i2_marcharAtras->i2_motorDe_set
    i2_marcharAtras->i2_motorIz_set
    i2_marcharAdelanteTiempo->i2_delayTmr
    i2_marcharAdelante->i2_motorDe_set
    i2_marcharAdelante->i2_motorIz_set
    i2_girarXgradosizquierda->i2_delayTmr
    i2_girarXgradosderecha->i2_delayTmr
    i2_detenerse->i2_motorDe_set
    i2_detenerse->i2_motorIz_set
    i2_delayTmr->i2_TMR0_WriteTimer
    i2___lwtoft->i2___ftpack
    i2___fttol->i2___ftadd
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___lwtoft
    i2___ftadd->i2___ftneg
    i2_TMR0_WriteTimer->i2___fttol
    i2___ftmul->i2___lwtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    _usonic_tick->_tomaRealizadaT1G
    _usonic_tick->_tomaRealizadaT3G
    _tomaRealizadaT3G->_computarMedicion
    _tomaRealizadaT1G->_computarMedicion
    _computarMedicion->i1___fttol
    i1___lwtoft->i1___ftpack
    i1___fttol->i1___ftmul
    i1___ftmul->i1___lwtoft

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_buscarEnemigo
    _usonic_init->_TMR1G_SetInterruptHandler
    _usonic_init->_TMR3G_SetInterruptHandler
    _usonic_init->_TMR5_SetInterruptHandler
    _tacticas_init->_tactica_elegir
    _tactica_right_1->_girarXgradosderecha
    _giroLeveIzquierdaAvanzar->_delayTmr
    _tactica_left_1->_girarXgradosizquierda
    _giroLeveIzquierdaRetroceder->_delayTmr
    _giroLeveDerechaAvanzar->_delayTmr
    _tactica_front_2->_girarXgradosizquierda
    _giroLeveDerechaRetroceder->_delayTmr
    _setPwmIz->_PWM3_LoadDutyValue
    _setPwmDe->_PWM4_LoadDutyValue
    _tactica_front_1->_girarXgradosderecha
    _marcharAdelanteTiempo->_delayTmr
    _girarXgradosderecha->_delayTmr
    _tactica_back_1->_girarXgradosizquierda
    _marcharAtrasTiempo->_delayTmr
    _marcharAtras->_motorDe_set
    _marcharAtras->_motorIz_set
    _girarXgradosizquierda->_delayTmr
    ___ftmul->___lwtoft
    _elegirTactica->_findClosest
    _findClosest->_getClosest
    _drv_cny70_init->_IOCBF0_SetInterruptHandler
    _drv_cny70_init->_IOCBF1_SetInterruptHandler
    _drv_cny70_init->_IOCBF2_SetInterruptHandler
    _drv_cny70_init->_IOCBF3_SetInterruptHandler
    _detectarPosInicio->_getLowestDistanceOnSensors_func
    _buscarEnemigo->_delayTmr
    _delayTmr->_TMR0_WriteTimer
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftneg->___ftdiv
    ___ftdiv->___lwtoft
    ___ftadd->___ftneg
    _TMR0_WriteTimer->___fttol
    _marcharAdelante->_motorDe_set
    _marcharAdelante->_motorIz_set
    _detenerse->_motorDe_set
    _detenerse->_motorIz_set
    _SYSTEM_Initialize->_TMR5_Initialize
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  423205
                                             74 BANK1      1     1      0
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                     _TMR0_ReadTimer
                        _TMR0_Reload
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR0_WriteTimer
                             _atacar
                      _buscarEnemigo
                  _detectarPosInicio
                     _drv_cny70_init
                      _elegirTactica
              _marcharAdelanteTiempo
                   _tactica_ejecutar
                      _tacticas_init
                        _usonic_init
 ---------------------------------------------------------------------------------
 (1) _usonic_init                                          0     0      0     484
          _TMR1G_SetInterruptHandler
   _TMR1_StartSinglePulseAcquisition
          _TMR3G_SetInterruptHandler
   _TMR3_StartSinglePulseAcquisition
           _TMR5_SetInterruptHandler
                     _usonic_trigger
 ---------------------------------------------------------------------------------
 (2) _usonic_trigger                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR3_StartSinglePulseAcquisition                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3G_SetInterruptHandler                            3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartSinglePulseAcquisition                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1G_SetInterruptHandler                            3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _tacticas_init                                        0     0      0     571
                     _tactica_elegir
 ---------------------------------------------------------------------------------
 (1) _tactica_ejecutar                                     0     0      0  358970
                   Absolute function *
                     _tactica_back_1 *
                    _tactica_default *
                    _tactica_front_1 *
                    _tactica_front_2 *
                     _tactica_left_1 *
                    _tactica_right_1 *
 ---------------------------------------------------------------------------------
 (2) _tactica_right_1                                      0     0      0   71915
                _girarXgradosderecha
          _giroLeveDerechaRetroceder
           _giroLeveIzquierdaAvanzar
 ---------------------------------------------------------------------------------
 (3) _giroLeveIzquierdaAvanzar                             2     0      2   20226
                                             63 BANK1      2     0      2
                           _delayTmr
                          _detenerse
                    _marcharAdelante
                           _setPwmDe
                           _setPwmIz
 ---------------------------------------------------------------------------------
 (2) _tactica_left_1                                       0     0      0   72005
              _girarXgradosizquierda
             _giroLeveDerechaAvanzar
        _giroLeveIzquierdaRetroceder
 ---------------------------------------------------------------------------------
 (3) _giroLeveIzquierdaRetroceder                          2     0      2   20226
                                             63 BANK1      2     0      2
                           _delayTmr
                          _detenerse
                       _marcharAtras
                           _setPwmDe
                           _setPwmIz
 ---------------------------------------------------------------------------------
 (3) _giroLeveDerechaAvanzar                               2     0      2   20226
                                             63 BANK1      2     0      2
                           _delayTmr
                          _detenerse
                    _marcharAdelante
                           _setPwmDe
                           _setPwmIz
 ---------------------------------------------------------------------------------
 (2) _tactica_front_2                                      0     0      0   72074
              _girarXgradosizquierda
          _giroLeveDerechaRetroceder
              _marcharAdelanteTiempo
 ---------------------------------------------------------------------------------
 (3) _giroLeveDerechaRetroceder                            2     0      2   20316
                                             63 BANK1      2     0      2
                           _delayTmr
                          _detenerse
                       _marcharAtras
                           _setPwmDe
                           _setPwmIz
 ---------------------------------------------------------------------------------
 (4) _setPwmIz                                             1     1      0     183
                                              4 BANK1      1     1      0
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (5) _PWM3_LoadDutyValue                                   4     2      2     152
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (4) _setPwmDe                                             1     1      0     183
                                              4 BANK1      1     1      0
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (5) _PWM4_LoadDutyValue                                   4     2      2     152
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _tactica_front_1                                      0     0      0   71693
                _girarXgradosderecha
              _marcharAdelanteTiempo
                 _marcharAtrasTiempo
 ---------------------------------------------------------------------------------
 (3) _marcharAdelanteTiempo                                2     0      2   20205
                                             63 BANK1      2     0      2
                           _delayTmr
                          _detenerse
                    _marcharAdelante
 ---------------------------------------------------------------------------------
 (3) _girarXgradosderecha                                  4     2      2   31373
                                             63 BANK1      4     2      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _delayTmr
                          _detenerse
                        _motorDe_set
                        _motorIz_set
 ---------------------------------------------------------------------------------
 (2) _tactica_default                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tactica_back_1                                       0     0      0   71283
                           _delayTmr
              _girarXgradosizquierda
                 _marcharAtrasTiempo
 ---------------------------------------------------------------------------------
 (3) _marcharAtrasTiempo                                   2     0      2   20115
                                             63 BANK1      2     0      2
                           _delayTmr
                          _detenerse
                       _marcharAtras
 ---------------------------------------------------------------------------------
 (4) _marcharAtras                                         0     0      0      62
                        _motorDe_set
                        _motorIz_set
 ---------------------------------------------------------------------------------
 (3) _girarXgradosizquierda                                4     2      2   31553
                                             63 BANK1      4     2      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _delayTmr
                          _detenerse
                        _motorDe_set
                        _motorIz_set
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5861
                                             11 BANK1     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _elegirTactica                                        3     2      1    4957
                                             28 BANK1      3     2      1
                        _findClosest
                     _tactica_elegir
 ---------------------------------------------------------------------------------
 (2) _tactica_elegir                                       3     0      3     571
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _findClosest                                         16    12      4    4005
                                             12 BANK1     16    12      4
                            ___awdiv
                         _getClosest
 ---------------------------------------------------------------------------------
 (3) _getClosest                                          12    10      2     546
                                              0 BANK1     12    10      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     805
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _drv_cny70_init                                       0     0      0     844
         _IOCBF0_SetInterruptHandler
         _IOCBF1_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _detectarPosInicio                                    0     0      0     445
    _getLowestDistanceOnSensors_func
 ---------------------------------------------------------------------------------
 (2) _getLowestDistanceOnSensors_func                      8     8      0     445
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (1) _buscarEnemigo                                       11    11      0   35076
                                             63 BANK1     11    11      0
                     _TMR0_ReadTimer
                        _TMR0_Reload
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR0_WriteTimer
                            ___ftadd
                            ___ftneg
                            ___fttol
                           ___lwtoft
                      _buscar_t_init
                           _delayTmr
                          _detenerse
                        _motorDe_set
                        _motorIz_set
 ---------------------------------------------------------------------------------
 (4) _delayTmr                                             5     3      2   19615
                                             58 BANK1      5     3      2
                        _TMR0_Reload
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR0_WriteTimer
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     878
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             3     0      3    3954
                                              8 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4    1464
                                             41 BANK1     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     885
                                             26 BANK1      3     0      3
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    4133
                                             11 BANK1     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    7038
                                             29 BANK1     12     6      6
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2893
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (5) _TMR0_WriteTimer                                      2     0      2     332
                                             56 BANK1      2     0      2
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buscar_t_init                                        3     0      3    1024
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_ReadTimer                                       8     6      2     102
                                              0 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (1) _atacar                                               4     4      0     164
                                              1 BANK1      4     4      0
                          _detenerse
                    _marcharAdelante
 ---------------------------------------------------------------------------------
 (4) _marcharAdelante                                      0     0      0      62
                        _motorDe_set
                        _motorIz_set
 ---------------------------------------------------------------------------------
 (4) _detenerse                                            0     0      0      62
                        _motorDe_set
                        _motorIz_set
 ---------------------------------------------------------------------------------
 (5) _motorIz_set                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _motorDe_set                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1055
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                              3 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR5_SetInterruptHandler                             3     0      3     211
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     844
         _IOCBF0_SetInterruptHandler
         _IOCBF1_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _IOCBF3_SetInterruptHandler                           3     0      3     211
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _IOCBF2_SetInterruptHandler                           3     0      3     211
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _IOCBF1_SetInterruptHandler                           3     0      3     211
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _IOCBF0_SetInterruptHandler                           3     0      3     211
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManagerLow                       21    21      0    6992
                                             54 BANK0     21    21      0
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR5_ISR                                             0     0      0    6992
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR5_WriteTimer                                      2     0      2     240
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR5_CallBack                                        0     0      0    6752
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                        _usonic_tick *
 ---------------------------------------------------------------------------------
 (10) _usonic_tick                                         0     0      0    6752
            _TMR1_HasOverflowOccured
            _TMR3_HasOverflowOccured
                   _tomaRealizadaT1G
                   _tomaRealizadaT3G
 ---------------------------------------------------------------------------------
 (11) _tomaRealizadaT3G                                    2     2      0    3376
                                             52 BANK0      2     2      0
                   _computarMedicion
 i1_TMR3_StartSinglePulseAcquisition
                   i1_usonic_trigger
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_StartSinglePulseAcquisition                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _tomaRealizadaT1G                                    2     2      0    3376
                                             52 BANK0      2     2      0
                   _computarMedicion
 i1_TMR1_StartSinglePulseAcquisition
                   i1_usonic_trigger
 ---------------------------------------------------------------------------------
 (12) i1_usonic_trigger                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_TMR1_StartSinglePulseAcquisition                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _computarMedicion                                   11     9      2    3310
                                             41 BANK0     11     9      2
                            ___lwdiv
                          i1___ftmul
                          i1___fttol
                         i1___lwtoft
 ---------------------------------------------------------------------------------
 (13) i1___lwtoft                                          3     0      3     513
                                              8 BANK0      3     0      3
                            ___lwdiv (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (13) i1___fttol                                          15    11      4     356
                                             26 BANK0     15    11      4
                            ___lwdiv (ARG)
                          i1___ftmul (ARG)
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___ftmul                                          15     9      6     921
                                             11 BANK0     15     9      6
                            ___lwdiv (ARG)
                         i1___ftpack
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (14) i1___ftpack                                          8     3      5     387
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (13) ___lwdiv                                             7     3      4     922
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _TMR3_HasOverflowOccured                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_HasOverflowOccured                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManagerHigh                     18    18      0   79162
                                             74 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
                      _TMR1_GATE_ISR
                      _TMR3_GATE_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR3_GATE_ISR                                       0     0      0     233
                   Absolute function *
               _pulsoCapturadoTimer3 *
 ---------------------------------------------------------------------------------
 (17) _pulsoCapturadoTimer3                                0     0      0     233
                     _TMR3_ReadTimer
                        _TMR3_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR3_Reload                                         0     0      0     164
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR3_WriteTimer                                     2     0      2     164
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR3_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_GATE_ISR                                       0     0      0     233
                   Absolute function *
               _pulsoCapturadoTimer1 *
 ---------------------------------------------------------------------------------
 (17) _pulsoCapturadoTimer1                                0     0      0     233
                     _TMR1_ReadTimer
                        _TMR1_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR1_Reload                                         0     0      0     164
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR1_WriteTimer                                     2     0      2     164
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR1_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0   78696
                         _IOCBF0_ISR
                         _IOCBF1_ISR
                         _IOCBF2_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCBF3_ISR                                          0     0      0   19674
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                          _borde_isr *
 ---------------------------------------------------------------------------------
 (18) _IOCBF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _IOCBF2_ISR                                          0     0      0   19674
                   Absolute function *
     _IOCBF2_DefaultInterruptHandler *
                          _borde_isr *
 ---------------------------------------------------------------------------------
 (18) _IOCBF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _IOCBF1_ISR                                          0     0      0   19674
                   Absolute function *
     _IOCBF1_DefaultInterruptHandler *
                          _borde_isr *
 ---------------------------------------------------------------------------------
 (18) _IOCBF1_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _IOCBF0_ISR                                          0     0      0   19674
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                          _borde_isr *
 ---------------------------------------------------------------------------------
 (18) _borde_isr                                           1     1      0   19674
                                             73 COMRAM     1     1      0
                    _borde_detectado
 ---------------------------------------------------------------------------------
 (19) _borde_detectado                                     6     6      0   19674
                                             67 COMRAM     6     6      0
                         _acomodarse
 ---------------------------------------------------------------------------------
 (20) _acomodarse                                          0     0      0   19674
              i2_girarXgradosderecha
            i2_girarXgradosizquierda
            i2_marcharAdelanteTiempo
               i2_marcharAtrasTiempo
 ---------------------------------------------------------------------------------
 (21) i2_marcharAtrasTiempo                                2     0      2    3947
                                             63 COMRAM     2     0      2
                         i2_delayTmr
                        i2_detenerse
                     i2_marcharAtras
 ---------------------------------------------------------------------------------
 (22) i2_marcharAtras                                      0     0      0      44
                      i2_motorDe_set
                      i2_motorIz_set
 ---------------------------------------------------------------------------------
 (21) i2_marcharAdelanteTiempo                             2     0      2    3947
                                             63 COMRAM     2     0      2
                         i2_delayTmr
                        i2_detenerse
                  i2_marcharAdelante
 ---------------------------------------------------------------------------------
 (22) i2_marcharAdelante                                   0     0      0      44
                      i2_motorDe_set
                      i2_motorIz_set
 ---------------------------------------------------------------------------------
 (21) i2_girarXgradosizquierda                             4     2      2    5890
                                             63 COMRAM     4     2      2
                          i2___ftmul
                          i2___fttol
                         i2___lwtoft
                         i2_delayTmr
                        i2_detenerse
                      i2_motorDe_set
                      i2_motorIz_set
 ---------------------------------------------------------------------------------
 (21) i2_girarXgradosderecha                               4     2      2    5890
                                             63 COMRAM     4     2      2
                          i2___ftmul
                          i2___fttol
                         i2___lwtoft
                         i2_delayTmr
                        i2_detenerse
                      i2_motorDe_set
                      i2_motorIz_set
 ---------------------------------------------------------------------------------
 (22) i2_detenerse                                         0     0      0      44
                      i2_motorDe_set
                      i2_motorIz_set
 ---------------------------------------------------------------------------------
 (23) i2_motorIz_set                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (23) i2_motorDe_set                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (22) i2_delayTmr                                          5     3      2    3759
                                             58 COMRAM     5     3      2
                      i2_TMR0_Reload
                  i2_TMR0_StartTimer
                   i2_TMR0_StopTimer
                  i2_TMR0_WriteTimer
                          i2___ftadd
                          i2___ftdiv
                          i2___ftneg
                          i2___fttol
                         i2___lwtoft
                           i2___wmul
 ---------------------------------------------------------------------------------
 (23) i2___wmul                                            6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (23) i2___lwtoft                                          3     0      3     643
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (23) i2___fttol                                          15    11      4     330
                                             41 COMRAM    15    11      4
                          i2___ftadd (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (23) i2___ftneg                                           3     0      3      71
                                             26 COMRAM     3     0      3
                          i2___ftdiv (ARG)
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (23) i2___ftdiv                                          15     9      6     875
                                             11 COMRAM    15     9      6
                         i2___ftpack
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (23) i2___ftadd                                          12     6      6    1435
                                             29 COMRAM    12     6      6
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (23) i2_TMR0_WriteTimer                                   2     0      2      70
                                             56 COMRAM     2     0      2
                          i2___ftadd (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                          i2___fttol (ARG)
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (23) i2_TMR0_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (23) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (23) i2_TMR0_Reload                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i2___ftmul                                          15     9      6     973
                                             11 COMRAM    15     9      6
                         i2___ftpack
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (24) i2___ftpack                                          8     3      5     543
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (18) _IOCBF0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 24
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF1_SetInterruptHandler
       _IOCBF2_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PMD_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR0_HasOverflowOccured
   _TMR0_ReadTimer
   _TMR0_Reload
   _TMR0_StartTimer
   _TMR0_StopTimer
   _TMR0_WriteTimer
     ___ftadd (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _atacar
     _detenerse
       _motorDe_set
       _motorIz_set
     _marcharAdelante
       _motorDe_set
       _motorIz_set
   _buscarEnemigo
     _TMR0_ReadTimer
     _TMR0_Reload
     _TMR0_StartTimer
     _TMR0_StopTimer
     _TMR0_WriteTimer
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftadd
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _buscar_t_init
     _delayTmr
       _TMR0_Reload
       _TMR0_StartTimer
       _TMR0_StopTimer
       _TMR0_WriteTimer
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftadd
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       ___wmul
     _detenerse
       _motorDe_set
       _motorIz_set
     _motorDe_set
     _motorIz_set
   _detectarPosInicio
     _getLowestDistanceOnSensors_func
   _drv_cny70_init
     _IOCBF0_SetInterruptHandler
     _IOCBF1_SetInterruptHandler
     _IOCBF2_SetInterruptHandler
     _IOCBF3_SetInterruptHandler
   _elegirTactica
     _findClosest
       ___awdiv
       _getClosest
     _tactica_elegir
   _marcharAdelanteTiempo
     _delayTmr
       _TMR0_Reload
       _TMR0_StartTimer
       _TMR0_StopTimer
       _TMR0_WriteTimer
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftadd
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       ___wmul
     _detenerse
       _motorDe_set
       _motorIz_set
     _marcharAdelante
       _motorDe_set
       _motorIz_set
   _tactica_ejecutar
     Absolute function(Fake) *
     _tactica_back_1 *
       _delayTmr
         _TMR0_Reload
         _TMR0_StartTimer
         _TMR0_StopTimer
         _TMR0_WriteTimer
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftadd
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         ___wmul
       _girarXgradosizquierda
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _motorDe_set
         _motorIz_set
       _marcharAtrasTiempo
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _marcharAtras
           _motorDe_set
           _motorIz_set
     _tactica_default *
     _tactica_front_1 *
       _girarXgradosderecha
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _motorDe_set
         _motorIz_set
       _marcharAdelanteTiempo
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _marcharAdelante
           _motorDe_set
           _motorIz_set
       _marcharAtrasTiempo
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _marcharAtras
           _motorDe_set
           _motorIz_set
     _tactica_front_2 *
       _girarXgradosizquierda
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _motorDe_set
         _motorIz_set
       _giroLeveDerechaRetroceder
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _marcharAtras
           _motorDe_set
           _motorIz_set
         _setPwmDe
           _PWM4_LoadDutyValue
         _setPwmIz
           _PWM3_LoadDutyValue
       _marcharAdelanteTiempo
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _marcharAdelante
           _motorDe_set
           _motorIz_set
     _tactica_left_1 *
       _girarXgradosizquierda
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _motorDe_set
         _motorIz_set
       _giroLeveDerechaAvanzar
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _marcharAdelante
           _motorDe_set
           _motorIz_set
         _setPwmDe
           _PWM4_LoadDutyValue
         _setPwmIz
           _PWM3_LoadDutyValue
       _giroLeveIzquierdaRetroceder
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _marcharAtras
           _motorDe_set
           _motorIz_set
         _setPwmDe
           _PWM4_LoadDutyValue
         _setPwmIz
           _PWM3_LoadDutyValue
     _tactica_right_1 *
       _girarXgradosderecha
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _motorDe_set
         _motorIz_set
       _giroLeveDerechaRetroceder
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _marcharAtras
           _motorDe_set
           _motorIz_set
         _setPwmDe
           _PWM4_LoadDutyValue
         _setPwmIz
           _PWM3_LoadDutyValue
       _giroLeveIzquierdaAvanzar
         _delayTmr
           _TMR0_Reload
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftadd
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           ___wmul
         _detenerse
           _motorDe_set
           _motorIz_set
         _marcharAdelante
           _motorDe_set
           _motorIz_set
         _setPwmDe
           _PWM4_LoadDutyValue
         _setPwmIz
           _PWM3_LoadDutyValue
   _tacticas_init
     _tactica_elegir
   _usonic_init
     _TMR1G_SetInterruptHandler
     _TMR1_StartSinglePulseAcquisition
     _TMR3G_SetInterruptHandler
     _TMR3_StartSinglePulseAcquisition
     _TMR5_SetInterruptHandler
     _usonic_trigger

 _INTERRUPT_InterruptManagerLow (ROOT)
   _TMR5_ISR
     _TMR5_CallBack
       Absolute function(Fake) *
       _TMR5_DefaultInterruptHandler *
       _usonic_tick *
         _TMR1_HasOverflowOccured
         _TMR3_HasOverflowOccured
         _tomaRealizadaT1G
           _computarMedicion
             ___lwdiv
             i1___ftmul
               ___lwdiv (ARG)
               i1___ftpack (ARG)
               i1___lwtoft (ARG)
                 ___lwdiv (ARG)
                 i1___ftpack (ARG)
             i1___fttol
               ___lwdiv (ARG)
               i1___ftmul (ARG)
                 ___lwdiv (ARG)
                 i1___ftpack (ARG)
                 i1___lwtoft (ARG)
                   ___lwdiv (ARG)
                   i1___ftpack (ARG)
               i1___lwtoft (ARG)
                 ___lwdiv (ARG)
                 i1___ftpack (ARG)
             i1___lwtoft
               ___lwdiv (ARG)
               i1___ftpack (ARG)
           i1_TMR1_StartSinglePulseAcquisition
           i1_usonic_trigger
         _tomaRealizadaT3G
           _computarMedicion
             ___lwdiv
             i1___ftmul
               ___lwdiv (ARG)
               i1___ftpack (ARG)
               i1___lwtoft (ARG)
                 ___lwdiv (ARG)
                 i1___ftpack (ARG)
             i1___fttol
               ___lwdiv (ARG)
               i1___ftmul (ARG)
                 ___lwdiv (ARG)
                 i1___ftpack (ARG)
                 i1___lwtoft (ARG)
                   ___lwdiv (ARG)
                   i1___ftpack (ARG)
               i1___lwtoft (ARG)
                 ___lwdiv (ARG)
                 i1___ftpack (ARG)
             i1___lwtoft
               ___lwdiv (ARG)
               i1___ftpack (ARG)
           i1_TMR3_StartSinglePulseAcquisition
           i1_usonic_trigger
     _TMR5_WriteTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _borde_isr *
         _borde_detectado
           _acomodarse
             i2_girarXgradosderecha
               i2___ftmul
                 i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___fttol
                 i2___ftadd (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftmul (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___lwtoft
                 i2___ftpack
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_motorDe_set
               i2_motorIz_set
             i2_girarXgradosizquierda
               i2___ftmul
                 i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___fttol
                 i2___ftadd (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftmul (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___lwtoft
                 i2___ftpack
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_motorDe_set
               i2_motorIz_set
             i2_marcharAdelanteTiempo
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_marcharAdelante
                 i2_motorDe_set
                 i2_motorIz_set
             i2_marcharAtrasTiempo
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_marcharAtras
                 i2_motorDe_set
                 i2_motorIz_set
     _IOCBF1_ISR
       Absolute function(Fake) *
       _IOCBF1_DefaultInterruptHandler *
       _borde_isr *
         _borde_detectado
           _acomodarse
             i2_girarXgradosderecha
               i2___ftmul
                 i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___fttol
                 i2___ftadd (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftmul (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___lwtoft
                 i2___ftpack
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_motorDe_set
               i2_motorIz_set
             i2_girarXgradosizquierda
               i2___ftmul
                 i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___fttol
                 i2___ftadd (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftmul (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___lwtoft
                 i2___ftpack
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_motorDe_set
               i2_motorIz_set
             i2_marcharAdelanteTiempo
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_marcharAdelante
                 i2_motorDe_set
                 i2_motorIz_set
             i2_marcharAtrasTiempo
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_marcharAtras
                 i2_motorDe_set
                 i2_motorIz_set
     _IOCBF2_ISR
       Absolute function(Fake) *
       _IOCBF2_DefaultInterruptHandler *
       _borde_isr *
         _borde_detectado
           _acomodarse
             i2_girarXgradosderecha
               i2___ftmul
                 i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___fttol
                 i2___ftadd (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftmul (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___lwtoft
                 i2___ftpack
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_motorDe_set
               i2_motorIz_set
             i2_girarXgradosizquierda
               i2___ftmul
                 i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___fttol
                 i2___ftadd (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftmul (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___lwtoft
                 i2___ftpack
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_motorDe_set
               i2_motorIz_set
             i2_marcharAdelanteTiempo
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_marcharAdelante
                 i2_motorDe_set
                 i2_motorIz_set
             i2_marcharAtrasTiempo
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_marcharAtras
                 i2_motorDe_set
                 i2_motorIz_set
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _borde_isr *
         _borde_detectado
           _acomodarse
             i2_girarXgradosderecha
               i2___ftmul
                 i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___fttol
                 i2___ftadd (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftmul (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___lwtoft
                 i2___ftpack
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_motorDe_set
               i2_motorIz_set
             i2_girarXgradosizquierda
               i2___ftmul
                 i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___fttol
                 i2___ftadd (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftmul (ARG)
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg (ARG)
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft (ARG)
                   i2___ftpack
               i2___lwtoft
                 i2___ftpack
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_motorDe_set
               i2_motorIz_set
             i2_marcharAdelanteTiempo
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_marcharAdelante
                 i2_motorDe_set
                 i2_motorIz_set
             i2_marcharAtrasTiempo
               i2_delayTmr
                 i2_TMR0_Reload
                 i2_TMR0_StartTimer
                 i2_TMR0_StopTimer
                 i2_TMR0_WriteTimer
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___fttol (ARG)
                     i2___ftadd (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftneg (ARG)
                         i2___ftdiv (ARG)
                           i2___ftpack
                           i2___lwtoft (ARG)
                             i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftmul (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftadd
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftdiv
                   i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___ftneg
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftneg (ARG)
                       i2___ftdiv (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftdiv (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftmul (ARG)
                     i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___ftneg (ARG)
                     i2___ftdiv (ARG)
                       i2___ftpack
                       i2___lwtoft (ARG)
                         i2___ftpack
                     i2___lwtoft (ARG)
                       i2___ftpack
                   i2___lwtoft (ARG)
                     i2___ftpack
                 i2___lwtoft
                   i2___ftpack
                 i2___wmul
               i2_detenerse
                 i2_motorDe_set
                 i2_motorIz_set
               i2_marcharAtras
                 i2_motorDe_set
                 i2_motorIz_set
   _TMR1_GATE_ISR
     Absolute function(Fake) *
     _pulsoCapturadoTimer1 *
       _TMR1_ReadTimer
       _TMR1_Reload
         _TMR1_WriteTimer
   _TMR3_GATE_ISR
     Absolute function(Fake) *
     _pulsoCapturadoTimer3 *
       _TMR3_ReadTimer
       _TMR3_Reload
         _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     4B      5E       8       36.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4B      95       5       93.1%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     151       6        0.0%
DATA                 0      0     151       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Nov 10 12:50:45 2018

                           _marcharAtrasTiempo 39EC               __end_of_TMR5_SetInterruptHandler 3DE4  
                       elegirTactica@distancia 011C               ??_IOCBF3_DefaultInterruptHandler 0001  
              ?_IOCBF3_DefaultInterruptHandler 0001                                     i1___ftpack 2AD8  
                            _detectarPosInicio 3DAC                __end_of_TMR0_HasOverflowOccured 3DD6  
                                  __CFG_CP$OFF 000000                __end_of_TMR3_HasOverflowOccured 3E38  
                              ??_elegirTactica 011D                                   ___awdiv@sign 0105  
                                           _ak 00C7                                             bsr 000FE0  
                                   i1___lwtoft 3A5E                            ___wmul@multiplicand 0102  
                       __size_of_buscar_t_init 0034              __end_of_giroLeveDerechaRetroceder 35C0  
                            ??_TMR5_WriteTimer 0062                             ?_detectarPosInicio 0001  
                                   i2___ftpack 2B88                                   ___ftadd@exp1 0128  
                                 ___ftadd@exp2 0127                  ??_giroLeveIzquierdaRetroceder 0141  
                                 ___ftadd@sign 0126                                            l703 2D94  
                                          l720 2538                                            l705 2DAC  
                                          l706 2DC2                                            l709 2DFA  
                   computarMedicion@anchoPulso 0089                                            l719 24DE  
                                          l671 1CF8                                            l680 1D7A  
                                          l681 1D7E                                            l673 1D32  
                                          l682 1D90                                            l674 1D14  
                                          l772 37AC                                            l684 1DAA  
                                          l765 37B8                                            l677 1D52  
                                          l766 37A6                                            l951 39E4  
                                          l679 1D78                                            l792 377C  
                                          l880 1776                            ?_marcharAtrasTiempo 013F  
                                          l777 37B2                                            l785 3788  
                                          l786 3776                                            l882 176C  
                                          l874 163E                                            l962 3068  
                                          l970 34F2                                            l891 32AC  
                                          l883 1770                                            l955 3A0A  
                                          l884 1828                                            l876 166C  
                                          l797 3782                                     i2___lwtoft 3B16  
                                          l886 1820                                            l878 167A  
                                          l966 2FF8                                            l982 35AC  
                                          l974 3530                                            l887 1824  
                                          l879 16B2                                            l978 356E  
                                          _PR2 000FBC                                   __CFG_CPD$OFF 000000  
                             i1_usonic_trigger 31FA                                _timer1ReloadVal 00F3  
                      __size_of_PMD_Initialize 001C                           buscarEnemigo@medidas 0141  
                              _TMR2_Initialize 3C1E                                _PWM4_Initialize 3CA8  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                            ??_detectarPosInicio 0108  
                                   i2_delayTmr 2716             __end_of_IOCBF1_SetInterruptHandler 3E0E  
                   _IOCBF1_SetInterruptHandler 3E00                           delayTmr@miliSegundos 013A  
                                 i1___ftmul@f1 006B                                   i1___ftmul@f2 006E  
                                 i1___fttol@f1 007A                                 _tactica_back_1 33FC  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___ftdiv@cntr 0114                                   ___ftdiv@sign 0119  
                                         l1140 31B2                                           l1133 31DC  
                                         l1150 31CE                                           l1134 31A4  
                                         l1145 31C0                                           l1501 1096  
                                         l1510 115C                                           l1511 11BC  
                                         l1503 10C8                                           l1520 13DE  
                                         l1512 11D2                                           l1360 1B94  
                                         l1505 10FE                                           l1361 1BC2  
                                         l1514 137E                                           l1370 1C20  
                                         l1362 1BB0                                           l1515 1250  
                                         l1507 1232                                           l1371 1C4C  
                              _timer3ReloadVal 00F1                                           l1516 139A  
                                         l1508 110C                                           l1372 1C3A  
                                         l1517 12A0                                           l1365 1BCE  
                                         l1518 1300                                           l1374 1C58  
                                         l1366 1C0E                                           l1519 1368  
                                         l1359 1C90                                           l1375 1C84  
                                         l1367 1BE8                                           l1376 1C72  
                                         l1481 3160                                           l1369 1BFA  
                                         l1802 1888                                           l1490 0FCA  
                                         l1811 1918                                           l1491 0FD6  
                                         l1483 3190                                           l1731 2E78  
                                         l1732 2E82                                           l1724 2E2A  
                                         l1493 0FE2                                           l1733 2E90  
                                         l1725 2E3A                                           l1830 19BC  
                                         l1806 18B2                                           l1495 102A  
                                         l1727 2E58                                           l1816 190E  
                                         l1728 2E50                                           l1825 194C  
                                         l1817 1904                                           l1497 104E  
                                         l1826 1942                                           l1850 1FD4  
                                         l1771 2A52                                           l1835 23A8  
                                         l1499 1072                                           l1772 2A48  
                                         l1828 1970                                           l1852 1FFC  
                                         l1829 198C                                           l1837 23D0  
                                         l1861 3A50                                           l1853 202E  
                                         l1774 2A86                                           l1838 240E  
                                         l1854 203E                                           l1775 2A70  
                                         l1839 2434                                           l1871 1DE8  
                                         l1880 1E78                                           l1856 2056  
                                         l1777 2AAE                                           l1873 1E60  
                                         l1857 2066                                           l1778 2AA4  
                                         l1882 1EA0                                           l1874 1E50  
                                         l1879 1E84                                           l7554 3158  
                                         l7830 10C0                                 _tactica_elegir 3D9E  
                                         _LATA 000F83                                           _LATB 000F84  
                                         _LATC 000F85                                           _LATD 000F86  
                                         _LATE 000F87                                           _T2PR 000FBC  
                                         u4500 1E8A                                           u4441 1DCC  
                                         u6130 2A3A                                           u4460 1E06  
                                         _PMD0 000EE1                                           u6221 1846  
                                         u6205 36C6                                           _PMD1 000EE2  
                                         _PMD2 000EE3                                           u6231 185A  
                                         u6215 36FA                                           _PMD3 000EE4  
                                         u6320 18E2                                           _PMD4 000EE5  
                                         u4465 1DFE                                           _PMD5 000EE6  
                                         u6170 2AB8                                           u6260 187A  
                                         u6500 24FE                                           u6510 251C  
                                         u6431 2390                                           u7240 2DD0  
                                         u6360 1920                                           u6290 18A4  
                                         u7090 3194                                           u6451 23B8  
                                         u7180 3DD2                                           u6508 2502  
                                         u6541 1FBC                                           u7270 2E04  
                                         u6390 1954                                           u6518 2520  
                                         u7248 2DD4                                           u7440 1104  
                                         u6720 2E5C                                           u6561 1FE4  
                                         u6490 24EC                        _TMR1_HasOverflowOccured 3E38  
                                         u7460 13B4                                 _tactica_left_1 35C0  
                                         u6498 24F0                                           u7466 13B6  
                                         u8658 3ABA                                           u8780 1D1C  
                                         u8847 31A8                                           u8857 31B6  
                                         u8786 1D1E                                           u8867 31C4  
                                         u8877 31D2                                           _TMR2 000FBB  
                                         _WPUA 000F10                                           _WPUB 000F18  
                                         _WPUC 000F20                                           _WPUD 000F25  
                                         _WPUE 000F2D                                  __CFG_FCMEN$ON 000000  
                                         _main 1CAE                                   ___ftpack@arg 0100  
                                 ___ftpack@exp 0103                                _TMR0_StartTimer 3EAA  
                         ??_marcharAtrasTiempo 0141                                   i1___lwtoft@c 0068  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
                                 i2___ftadd@f1 001E                                   i2___ftadd@f2 0021  
             getLowestDistanceOnSensors_func@i 0107                    ??_TMR3G_SetInterruptHandler 0103  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00D2                                _timer5ReloadVal 00ED  
                        __end_of_tacticas_init 3880                                   i2___ftdiv@f1 000C  
                                 i2___ftdiv@f2 000F                                   i2___ftdiv@f3 0016  
                      ??_marcharAdelanteTiempo 0141                                _TMR3_Initialize 3448  
                                 i2___ftneg@f1 001B                              ?_computarMedicion 0089  
                                __CFG_CSWEN$ON 000000                      __end_of_detectarPosInicio 3DBA  
                                 ___ftmul@cntr 0118                   __size_of_girarXgradosderecha 0070  
                                 i2___ftmul@f1 000C                                   i2___ftmul@f2 000F  
                                 ___param_bank 000000                                   ___ftmul@sign 0119  
                                 i2___fttol@f1 002A                                  i1___ftmul@exp 0074  
                        __end_ofi2_motorDe_set 3856                          __end_ofi2_TMR0_Reload 3E94  
                           ??_computarMedicion 008B                                  __CFG_SCANE$ON 000000  
                                  i2_detenerse 3E62                                   ___fttol@exp1 0137  
                                 ___fttol@lval 0133                        __end_of_TMR0_Initialize 3770  
                        __end_ofi2_motorIz_set 382A                        i1___ftmul@f3_as_product 0075  
               __size_of_OSCILLATOR_Initialize 0018                            __size_of_IOCBF0_ISR 002A  
                          __size_of_IOCBF1_ISR 002A                            __size_of_IOCBF2_ISR 002A  
                          __size_of_IOCBF3_ISR 002A                  __end_of_OSCILLATOR_Initialize 3CA8  
                                _buscarEnemigo 0F3C                                _tactica_default 3EBE  
                                        ?_main 0001                                __end_of___awdiv 2E9A  
                              __end_of___ftadd 19E2                                  __CFG_WDTE$OFF 000000  
                    TMR0_ReadTimer@readValHigh 0107                                __end_of___ftdiv 2466  
                              __end_of___ftneg 3A5E                                   i2___lwtoft@c 0009  
                              _tactica_elegida 015B                                __end_of___ftmul 20A0  
                                        _T1CLK 000FD2                                ___awdiv@divisor 0102  
                                        _T1CON 000FCF                                __end_of___fttol 1EB2  
                                        _T3CLK 000FCC                                          _T2CON 000FBD  
                                        _T3CON 000FC9                                          _T5CLK 000FC6  
                                  _usonic_init 27EC                                          _T2HLT 000FBE  
                                        _T5CON 000FC3                                 __CFG_DEBUG$OFF 000000  
                              __end_of___lwdiv 335A                  tactica_elegir@tactica_funcion 0100  
                                  _usonic_tick 2E9A                                          _T2TMR 000FBB  
                                        _T2RST 000FC0                                          i1l262 007A  
                                        i2l251 29C6                                          i1l555 3B92  
                                        i2l253 29D2                                _TMR0_WriteTimer 3E70  
                                        i2l255 29DC                                          i2l451 3C6A  
                                        i2l720 27D8                                          i2l386 3C86  
                                        i2l719 278C                                          i2l691 28D0  
                                        i2l772 3834                                          i2l765 3840  
                                        i2l693 28F2                                          i2l766 382E  
                                        i2l694 2914                                          i2l695 292C  
                               i2motorDe_set@a 0001                                          i2l792 3808  
                                        i2l696 294E                                          i2l777 383A  
                                        i2l785 3814                                          i2l786 3802  
                              ___awdiv@counter 0104                                          i2l797 380E  
                                        _OSCEN 000EDC                             _PWM4_LoadDutyValue 36D4  
                                        _TMR0H 000FD4                                          _TMR1H 000FCE  
                                        _TMR0L 000FD3                                          _TMR1L 000FCD  
                                        _TMR3H 000FC8                                          _TMR3L 000FC7  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                      __size_of_drv_cny70_init 0052                                          _TRISA 000F88  
                                        _TRISB 000F89                                          _TRISC 000F8A  
                                        _TRISD 000F8B                                          _TRISE 000F8C  
                    TMR3_ReadTimer@readValHigh 0007                                _tactica_front_1 3630  
                              _tactica_front_2 35F8                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                         __end_of_tactica_back_1 3448  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                          i2_girarXgradosderecha 30D8  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                _tactica_right_1 3668  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 3CEA  
                       __end_of_tactica_elegir 3DAC                                 __CFG_EBTRB$OFF 000000  
                       __end_of_tactica_left_1 35F8                        __end_of_PIN_MANAGER_IOC 3B16  
              __end_ofi2_girarXgradosizquierda 30D8                               ??_usonic_trigger 0100  
                                        _errno 00C5                            ?_PWM4_LoadDutyValue 0100  
                           __CFG_MCLRE$EXTMCLR 000000                                  ___ftpack@sign 0104  
                                ?_marcharAtras 0001                        __end_of_PWM3_Initialize 3CD4  
                      __end_of_TMR1_Initialize 34C8                                 __CFG_BOREN$OFF 000000  
                                _buscar_t_init 3708                                          pclath 000FFA  
                                        tablat 000FF5           __size_of_giroLeveIzquierdaRetroceder 003E  
                             __end_ofi2___wmul 3AAA                                          status 000FD8  
                                        wtemp6 0060                             __size_ofi1___ftmul 00F6  
                           __size_ofi1___fttol 00F8                                 i2motorIz_set@a 0001  
                              _TMR1_WriteTimer 3C74                 ?_INTERRUPT_InterruptManagerLow 0001  
                     __size_of_borde_detectado 0072                                  i2___ftdiv@exp 0019  
                           __size_ofi2___ftadd 01AC                             __size_ofi2___ftdiv 00E6  
                           __size_ofi2___ftneg 0024                                 i1___ftpack@arg 0060  
                           __size_ofi2___ftmul 00F4                                 i1___ftpack@exp 0063  
                           __size_ofi2___fttol 00F4                                _TMR5_Initialize 33AC  
                              __initialization 39A0                                   __end_of_main 1DBA  
                                i2___ftmul@exp 0015                           ??_PWM4_LoadDutyValue 0102  
                                  ?i1___ftpack 0060                                 i1___ftmul@cntr 0078  
                               i1___ftmul@sign 0079                       ??_giroLeveDerechaAvanzar 0141  
                      __end_of_PWM4_Initialize 3CBE                        __end_of_TMR2_Initialize 3C3C  
                                  ?i1___lwtoft 0068                                 ?_buscarEnemigo 0001  
                               i1___fttol@exp1 0088                                    ?i2___ftpack 0001  
                               i1___fttol@lval 0084                                         ??_main 014A  
            giroLeveIzquierdaRetroceder@tiempo 013F                                  ___fttol@sign1 0132  
                     _TMR5_SetInterruptHandler 3DD6                                    ?i2___lwtoft 0009  
                    _TMR3G_SetInterruptHandler 3D82                                  __activetblptr 000003  
                      _IOCBF0_InterruptHandler 00EA                      __size_of_tomaRealizadaT1G 00A4  
                    __size_of_tomaRealizadaT3G 00A6                                ?_tactica_back_1 0001  
                                  ?i2_delayTmr 003B                               ??i2_marcharAtras 0002  
                    ??_TMR1_HasOverflowOccured 0060                                ?_tactica_elegir 0100  
                         __size_of_findClosest 020C                        __end_of_TMR0_StartTimer 3EAE  
                 ??_IOCBF2_SetInterruptHandler 0103                                ?_tactica_left_1 0001  
                               ??_marcharAtras 0101                      __size_ofi2_TMR0_StopTimer 0004  
                             ___awdiv@dividend 0100                                 ?_buscar_t_init 0100  
                                       _ANSELA 000F11                                         _ANSELB 000F19  
                                       _ANSELC 000F21                                         _ANSELD 000F26  
                                       _ANSELE 000F2E                               __end_of___ftpack 2AD8  
                             _tactica_ejecutar 3AAA                                         _T0CON0 000FD5  
                                       _T0CON1 000FD6                                         _T1GATE 000FD1  
                                       _T1GCON 000FD0                                         _T3GATE 000FCB  
                                       _T3GCON 000FCA                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _RA3PPS 000EEA  
                                       _RA4PPS 000EEB                                         i1l1101 2C7C  
                                       i1l1110 160A                                         i1l1102 2C56  
                                       i1l1111 13E8                                         i1l1103 2C64  
                                       i1l1120 1572                                         i1l1104 2CB8  
                                       i1l1121 1582                                         i1l1113 1462  
                                       i1l1105 2C94                                         i1l1106 2CA2  
                      TMR1_WriteTimer@timerVal 0001                                         i1l1123 15FA  
                                       i1l1115 1472                                         i1l1140 320E  
                                       i1l1117 14EA                                         i1l1133 3238  
                                       i1l1118 14FA                                         i1l1150 322A  
                                       i1l1134 3200                                         i1l1080 2ED6  
                                       i1l1145 321C                                         i1l1083 2EFA  
                                       i1l1092 2D22                                         i1l1093 2CFC  
                                       i1l1077 2EB8                                         i1l1094 2D0A  
                                       i1l1095 2D5E                                         i1l1096 2D3A  
                                       i1l1097 2D48                                         _ODCONA 000F0F  
                                       _ODCONB 000F17                                         _ODCONC 000F1F  
                                       _ODCOND 000F24                                         _ODCONE 000F2C  
                                       i1l1850 20CA                                         i1l1771 2B02  
                                       i1l1772 2AF8                                         i1l1852 20F2  
                      __end_of_TMR3_Initialize 3488                                         i1l1853 2124  
                                       i1l1774 2B36                                         i1l1854 2134  
                                       i1l1775 2B20                                         i1l1871 1EE0  
                                       i1l1960 3326                                         i1l1856 214C  
                                       i1l1880 1F70                                         i1l1961 331E  
                                       i1l1777 2B5E                                         i1l1857 215C  
                                       i1l1873 1F58                                         i1l1778 2B54  
                                       i1l1882 1F98                                         i1l1874 1F48  
                                       i1l1964 3346                                         i1l1965 3350  
                                       i1l1879 1F7C                                         i2l1249 2F8C  
                                       i2l1802 1A34                                         i2l1811 1AC4  
                                       i2l1830 1B68                                         i2l1806 1A5E  
                                       i2l1816 1ABA                                         i2l1825 1AF8  
                                       i2l1817 1AB0                                         i2l1850 22B2  
                                       i2l1826 1AEE                                         i2l1771 2BB0  
                                       i2l1835 2574                                         i2l1772 2BA6  
                                       i2l1852 22DA                                         i2l1828 1B1C  
                                       i2l1853 230C                                         i2l1829 1B38  
                                       i2l1837 259C                                         i2l1861 3B50  
                                       i2l1774 2BE4                                         i2l1854 231C  
                                       i2l1838 25DA                                         i2l1775 2BCE  
                                       i2l1839 2600                                         i2l1871 21C2  
                                       i2l1856 2334                                         i2l1880 2250  
                                       i2l1777 2C0C                                         i2l1857 2344  
                                       i2l1873 2238                                         i2l1778 2C02  
                                       i2l1882 2278                                         i2l1874 2228  
                                       i2l1879 225C                                         u316_41 19F2  
                                       u317_41 1A06                                         u343_41 21A6  
                                       u337_41 255C                               __end_of___lwtoft 3A38  
                                       u339_41 2584                                         u364_41 229A  
                                       u366_41 22C2                                         u391_21 1EC4  
                                       u385_21 20B2                                         u387_21 20DA  
                                       _OSCFRQ 000EDE               __size_of_TMR0_HasOverflowOccured 000E  
             __size_of_TMR3_HasOverflowOccured 000E                                _TMR3_WriteTimer 3C58  
                             __end_of_delayTmr 254C                                 __CFG_PWRTE$OFF 000000  
                               __CFG_XINST$OFF 000000                          __end_of_TMR1_GATE_ISR 39A0  
                   __size_of_detectarPosInicio 000E                        __end_of_tactica_default 3EC0  
                    __CFG_RSTOSC$HFINTOSC_1MHZ 000000                                   ?_motorDe_set 0001  
                                 ?_TMR0_Reload 0001                    __size_of_PWM3_LoadDutyValue 0034  
                                 ?_TMR1_Reload 0001                                         ___wmul 3928  
                                    ??___awdiv 0104                                      ??___ftadd 0123  
                   buscarEnemigo@precargaTimer 0145                                 __CFG_STVREN$ON 000000  
                                    ??___ftdiv 0111                        __end_of_TMR0_WriteTimer 3E7C  
                                    ??___ftneg 011D                                      ??___ftmul 0111  
                                       _atacar 2D80                                      ??___fttol 012D  
                                 ?_TMR3_Reload 0001                                      ??___lwdiv 0064  
                     __size_of_marcharAdelante 0012                                         _bordes 005D  
     getLowestDistanceOnSensors_func@ladoMenor 0101                                   ?_motorIz_set 0001  
                    i2TMR0_WriteTimer@timerVal 0039                        __end_of_tactica_front_1 3668  
                      __end_of_tactica_front_2 3630                               ?_TMR0_Initialize 0001  
                                       clear_0 39A6                                         clear_1 39B2  
                             ___awdiv@quotient 0106                          __end_of_TMR3_GATE_ISR 3978  
                      __end_of_tactica_right_1 36A0            __size_of_IOCBF2_SetInterruptHandler 000E  
                     _giroLeveIzquierdaAvanzar 34C8                                         _usonic 00AB  
                        ___ftmul@f3_as_product 0115                               __end_of_setPwmDe 3D3A  
                             __end_of_setPwmIz 3D28                              __end_ofi1___ftmul 2196  
                            __end_ofi1___fttol 1FAA                                 _PMD_Initialize 3C3C  
                       ?i2_girarXgradosderecha 0040                              __end_ofi2___ftadd 1B8E  
                            __end_ofi2___ftdiv 2632                                 i2___ftadd@exp1 0029  
                               i2___ftadd@exp2 0028                              __end_ofi2___ftneg 3B5E  
                            __end_ofi2___ftmul 237E                              __end_ofi2___fttol 228A  
                               i2___ftadd@sign 0027                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                   __end_ofi2_marcharAtrasTiempo 3BFE  
                i2girarXgradosizquierda@grados 0040       TMR5_SetInterruptHandler@InterruptHandler 0100  
    TMR3G_SetInterruptHandler@InterruptHandler 0100      TMR1G_SetInterruptHandler@InterruptHandler 0100  
   IOCBF3_SetInterruptHandler@InterruptHandler 0100     IOCBF2_SetInterruptHandler@InterruptHandler 0100  
   IOCBF1_SetInterruptHandler@InterruptHandler 0100     IOCBF0_SetInterruptHandler@InterruptHandler 0100  
                             ?_PIN_MANAGER_IOC 0001                        __end_of_TMR1_WriteTimer 3C90  
                                 ??_IOCBF0_ISR 004B                                   ??_IOCBF1_ISR 004B  
                                 ??_IOCBF2_ISR 004B                                   ??_IOCBF3_ISR 004B  
                __size_of_INTERRUPT_Initialize 000E                            __size_ofi1___ftpack 00B0  
                             ?_TMR1_Initialize 0001                               ?_PWM3_Initialize 0001  
                      __end_of_TMR5_Initialize 33FC                               __end_ofexp@coeff 0F1F  
             ??_INTERRUPT_InterruptManagerHigh 004B                ?_INTERRUPT_InterruptManagerHigh 0001  
                            _SYSTEM_Initialize 37D0                               __end_oflog@coeff 0F3A  
                               i2___ftdiv@cntr 0015                                     __accesstop 0060  
                      __end_of__initialization 39BC                                 i2___ftdiv@sign 001A  
                          __size_ofi1___lwtoft 0026                                     ___ftadd@f1 011D  
                                   ___ftadd@f2 0120                            __size_ofi2___ftpack 00AE  
                __size_of_pulsoCapturadoTimer1 0016                  __size_of_pulsoCapturadoTimer3 0016  
                              i1___ftpack@sign 0064                             ?_SYSTEM_Initialize 0001  
                     __end_ofi1_usonic_trigger 3256                                  ___rparam_used 000001  
                                   ___ftdiv@f1 010B                                     ___ftdiv@f2 010E  
                                   ___ftdiv@f3 0115                                _TMR5_WriteTimer 3B7E  
                          __size_ofi2___lwtoft 0024                                     ___ftneg@f1 011A  
                               i2___ftpack@arg 0001                                 i2___ftpack@exp 0004  
                            findClosest@a_2186 0118                                     ___ftmul@f1 010B  
                                   ___ftmul@f2 010E                                     ___fttol@f1 0129  
                               __pcstackCOMRAM 0001                            __size_ofi2_delayTmr 00D6  
                          ??_SYSTEM_Initialize 0105                                ??_buscarEnemigo 013F  
                                    ?_TMR5_ISR 0001                              ??_borde_detectado 0044  
                               i2___ftmul@cntr 0019                                 i2___ftmul@sign 001A  
       __end_of_IOCBF0_DefaultInterruptHandler 3EC4        __size_of_IOCBF0_DefaultInterruptHandler 0002  
               _IOCBF0_DefaultInterruptHandler 3EC2                          __end_of_TMR5_CallBack 3AF2  
                            i2_marcharAdelante 3D70               __size_ofi2_girarXgradosizquierda 0068  
                i2marcharAdelanteTiempo@tiempo 0040                __size_of_giroLeveDerechaAvanzar 003E  
                        _girarXgradosizquierda 3000                        __size_of_TMR0_ReadTimer 0020  
                             ?_TMR2_Initialize 0001                               ?_PWM4_Initialize 0001  
                       __end_of_PMD_Initialize 3C58                                 i2___fttol@exp1 0038  
                           __end_of_IOCBF0_ISR 3928                                     ___lwtoft@c 0108  
                               i2___fttol@lval 0034                             __end_of_IOCBF1_ISR 38FE  
                  PWM4_LoadDutyValue@dutyValue 0100                             __end_of_IOCBF2_ISR 38D4  
                           __end_of_IOCBF3_ISR 38AA                             ?i2_marcharAdelante 0001  
                                    ?i2___wmul 0001                              findClosest@target 010F  
                               _drv_cny70_init 335A                             __size_of_detenerse 000E  
                      __size_of_TMR1_ReadTimer 0020                             __size_of_borde_isr 0056  
                              i1___fttol@sign1 0083                    ?_IOCBF1_SetInterruptHandler 0100  
                          _girarXgradosderecha 2F90                                ??_buscar_t_init 0103  
       __end_of_IOCBF3_DefaultInterruptHandler 3ECA        __size_of_IOCBF3_DefaultInterruptHandler 0002  
               _IOCBF3_DefaultInterruptHandler 3EC8                            ??i2_marcharAdelante 0002  
                             ?_TMR0_StartTimer 0001                      __end_of_SYSTEM_Initialize 37FE  
                      __end_of_TMR3_WriteTimer 3C74                                     _acomodarse 28B4  
                                   __pbssBANK0 00AB                                     __pbssBANK1 014B  
                             ?_TMR3_Initialize 0001               ??_IOCBF1_DefaultInterruptHandler 0001  
              ?_IOCBF1_DefaultInterruptHandler 0001                        _IOCBF1_InterruptHandler 00E7  
                      __size_of_TMR3_ReadTimer 0020                           ?_girarXgradosderecha 013F  
               __size_of_marcharAdelanteTiempo 0026                               ?_tactica_default 0001  
                __end_of_marcharAdelanteTiempo 39EC                        __size_of_TMR0_StopTimer 0004  
                    __end_ofi2_marcharAdelante 3D82                                     _getClosest 3256  
                                      ?___wmul 0100                                __CFG_PPS1WAY$ON 000000  
                                 ?i2_detenerse 0001                                     ??_TMR5_ISR 0096  
                                      ?_atacar 0001                     i2_girarXgradosderecha$4084 0042  
                             ?_TMR0_WriteTimer 0138                           __end_of_marcharAtras 3D4C  
                           _dist_tacticas_back 00D7                             _dist_tacticas_left 00D6  
                             ?_tactica_front_1 0001                               ?_tactica_front_2 0001  
                       __end_of_drv_cny70_init 33AC                                      ?___ftpack 0100  
                        __end_of_elegirTactica 1CAE                                ?_PMD_Initialize 0001  
                             ?_tactica_right_1 0001                     ?_giroLeveDerechaRetroceder 013F  
                                    ?___lwtoft 0108                                   ?_usonic_init 0001  
                                 ?_usonic_tick 0001                                     ??i2___wmul 0005  
                    __size_of_computarMedicion 0246                              ??_marcharAdelante 0101  
                             _tomaRealizadaT1G 2CDC                               _tomaRealizadaT3G 2C36  
                                    ?_delayTmr 013A                                        _OSCCON1 000ED8  
                                      _OSCCON3 000EDA             __end_of_IOCBF2_SetInterruptHandler 3E00  
                   _IOCBF2_SetInterruptHandler 3DF2                      girarXgradosderecha@grados 013F  
                                      _OSCTUNE 000EDD                                        _PWM3DCH 000FA4  
                                      _PWM3DCL 000FA3                                        _PWM4DCH 000FA1  
                                      _PWM4DCL 000FA0                                        _PWM3CON 000FA5  
                                      _PWM4CON 000FA2                               i2_TMR0_StopTimer 3EB6  
                                  setPwmDe@pwm 0104                               ?_TMR1_WriteTimer 0001  
                      __end_of_TMR5_WriteTimer 3B9E                         _giroLeveDerechaAvanzar 3544  
                      _TMR0_HasOverflowOccured 3DC8                        _TMR3_HasOverflowOccured 3E2A  
                             ?_TMR5_Initialize 0001                    girarXgradosizquierda@grados 013F  
                     ?i2_marcharAdelanteTiempo 0040                                    setPwmIz@pwm 0104  
                  __size_of_marcharAtrasTiempo 0026                                 getClosest@val1 010B  
                               getClosest@val2 0100                              __end_of_detenerse 3DC8  
                                      __Hparam 0000                                      ?_setPwmDe 0001  
                                    ?_setPwmIz 0001                          ??_girarXgradosderecha 0141  
                                      __Lparam 0000                     ??_TMR5_SetInterruptHandler 0103  
                            __end_of_borde_isr 3306                           i2_marcharAtrasTiempo 3BDE  
                                 ??i1___ftpack 0065                                        ___awdiv 2E14  
                                      ___ftadd 1834                                        ___ftdiv 237E  
                       ?_girarXgradosizquierda 013F                                        ___ftneg 3A38  
                              __size_of___wmul 0028                                        ___ftmul 1FAA  
                                      ___fttol 1DBA                                        ___lwdiv 3306  
          __end_of_giroLeveIzquierdaRetroceder 3544                    _giroLeveIzquierdaRetroceder 3506  
                     __end_of_tactica_ejecutar 3ACE                                __size_of_atacar 0094  
                                 __psmallconst 0F00                           __size_of_motorDe_set 0030  
                         __size_of_TMR0_Reload 000C                                   ??i1___lwtoft 006B  
                         __size_of_TMR1_Reload 000E                                        __pcinit 39A0  
                                 ??i2___ftpack 0006                                     ??___ftpack 0105  
                              ?_drv_cny70_init 0001                               ??_tactica_back_1 0143  
                      i2___ftmul@f3_as_product 0016                                        __ramtop 0F00  
                     TMR1_ReadTimer@readValLow 0008                           __size_of_TMR3_Reload 000E  
                                      __ptext0 1CAE                                        __ptext1 27EC  
                                      __ptext2 319E                                        __ptext3 3E9E  
                                      __ptext4 3D82                                        __ptext5 3EA2  
                                      __ptext6 3D90                                        __ptext7 3856  
                                      __ptext8 3AAA                                        __ptext9 35C0  
                         __size_of_motorIz_set 0030                                   ??i2___lwtoft 000C  
                                   ??___lwtoft 010B                               ??_tactica_elegir 0103  
                    TMR1_ReadTimer@readValHigh 0007                                      _T1CONbits 000FCF  
                             ??_tactica_left_1 0143                          _OSCILLATOR_Initialize 3C90  
                                    _T2CONbits 000FBD                    marcharAdelanteTiempo@tiempo 013F  
                                    _T3CONbits 000FC9                       ??_PIN_MANAGER_Initialize 0103  
                                 ??i2_delayTmr 003D                                      _T2HLTbits 000FBE  
                                   ??_delayTmr 013C                                      _IOCBFbits 000F12  
                                    _T5CONbits 000FC3                         __size_of_tacticas_init 002A  
                                    _IOCBNbits 000F13                                      _IOCBPbits 000F14  
    getLowestDistanceOnSensors_func@distancias 0102                     __size_of_SYSTEM_Initialize 002E  
                               __pintcode_body 2970                         __size_ofi2_motorDe_set 002C  
                       __size_ofi2_TMR0_Reload 000C                           end_of_initialization 39BC  
                                  ?_acomodarse 0001                               ?_TMR3_WriteTimer 0001  
                                    _T2RSTbits 000FC0                             __end_ofi1___ftpack 2B88  
                       __size_ofi2_motorIz_set 002C             __size_of_TMR1G_SetInterruptHandler 000E  
                                      int_func 2970                            i2___wmul@multiplier 0001  
                   ?_TMR1G_SetInterruptHandler 0100                             __end_ofi1___lwtoft 3A84  
                           __end_ofi2___ftpack 2C36                                     ??_setPwmDe 0104  
                                   ??_setPwmIz 0104                             __end_ofi2___lwtoft 3B3A  
                   ??_giroLeveIzquierdaAvanzar 0141                 computarMedicion@distancia_2493 008E  
               computarMedicion@distancia_2494 0090                 computarMedicion@distancia_2495 0092  
                        TMR0_ReadTimer@readVal 0104                          TMR3_ReadTimer@readVal 0005  
                        ?i2_marcharAtrasTiempo 0040                     __size_ofi2_marcharAdelante 0012  
                                      postdec2 000FDD                                    ?_getClosest 0100  
                                      postinc0 000FEE                                        postinc2 000FDE  
                           __end_ofi2_delayTmr 27EC                        i2_girarXgradosizquierda 3070  
                  __size_of_PWM4_LoadDutyValue 0034                                 _TMR0_ReadTimer 3B5E  
                      ??i2_girarXgradosderecha 0042                                      _PORTBbits 000F8E  
                                    _PORTDbits 000F90                           __CFG_WDTCCS$HFINTOSC 000000  
                        _TMR5_InterruptHandler 00D8                                  ??_findClosest 0110  
                      _IOCBF2_InterruptHandler 00E4                                 _TMR1_ReadTimer 3BBE  
                    ??_TMR0_HasOverflowOccured 0100                      ??_TMR3_HasOverflowOccured 0060  
              __end_ofi2_marcharAdelanteTiempo 3C1E                   ??_IOCBF0_SetInterruptHandler 0103  
                                    i1___ftmul 20A0                                      i1___fttol 1EB2  
                 ??_IOCBF3_SetInterruptHandler 0103                                      i2___ftadd 19E2  
                                    i2___ftdiv 254C                                      i2___ftneg 3B3A  
                             __CFG_FEXTOSC$OFF 000000                                      i2___ftmul 228A  
                                    i2___fttol 2196                               ?_TMR5_WriteTimer 0060  
                   _getLowestDistanceOnSensors 00C9                        TMR5_WriteTimer@timerVal 0060  
                              _borde_detectado 2F1E                                    ___ftdiv@exp 0118  
            __end_of_TMR1G_SetInterruptHandler 3D9E                              ?i1_usonic_trigger 0001  
                              i2___ftpack@sign 0005                     __end_of_PWM3_LoadDutyValue 36D4  
                               _TMR3_ReadTimer 3B9E                          __size_of_marcharAtras 0012  
                      __size_of_usonic_trigger 005C                               _ultimoMovimiento 005E  
                                _tacticas_init 3856                                    ___ftmul@exp 0114  
                         _timer0ReloadVal16bit 00EF                                 _TMR0_StopTimer 3EA6  
                           ??i1_usonic_trigger 0060                         __end_of_TMR0_ReadTimer 3B7E  
                 __end_of_INTERRUPT_Initialize 3E2A                                  i2_motorDe_set 382A  
                                i2_TMR0_Reload 3E88     __end_ofi1_TMR3_StartSinglePulseAcquisition 3EB2  
  __size_ofi1_TMR3_StartSinglePulseAcquisition 0004       __end_of_TMR3_StartSinglePulseAcquisition 3EA2  
    __size_of_TMR3_StartSinglePulseAcquisition 0004            ?i1_TMR3_StartSinglePulseAcquisition 0001  
            ?_TMR3_StartSinglePulseAcquisition 0001           ??i1_TMR3_StartSinglePulseAcquisition 0060  
           ??_TMR3_StartSinglePulseAcquisition 0100             i1_TMR3_StartSinglePulseAcquisition 3EAE  
             _TMR3_StartSinglePulseAcquisition 3E9E                                 __end_of___wmul 3950  
                          __size_of_acomodarse 00BC                                 __end_of_atacar 2E14  
                                i2_motorIz_set 37FE                           __size_ofi2_detenerse 000E  
                            __size_of_TMR5_ISR 0016            __size_of_IOCBF0_SetInterruptHandler 000E  
                 __end_of_pulsoCapturadoTimer1 3D16                   __end_of_pulsoCapturadoTimer3 3D00  
          __size_of_IOCBF3_SetInterruptHandler 000E                         ?_OSCILLATOR_Initialize 0001  
                       __end_of_TMR1_ReadTimer 3BDE                       ?_TMR1_HasOverflowOccured 0001  
                             i2___wmul@product 0005                               _computarMedicion 13E2  
                          start_initialization 39A0                           __size_of_usonic_init 00C8  
                         __size_of_usonic_tick 0084                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 3EC2          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 3EC0                       __size_of_TMR0_Initialize 0034  
              __size_of_PIN_MANAGER_Initialize 00E4                         __size_of_TMR1_GATE_ISR 0028  
                                   ?i1___ftmul 006B                                     ?i1___fttol 007A  
                              i2___fttol@sign1 0033        __end_of_getLowestDistanceOnSensors_func 319E  
     __size_of_getLowestDistanceOnSensors_func 005E               ?_getLowestDistanceOnSensors_func 0001  
            ??_getLowestDistanceOnSensors_func 0100                _getLowestDistanceOnSensors_func 3140  
                                   ?i2___ftadd 001E                                     ?i2___ftdiv 000C  
                                   ?i2___ftneg 001B                               getClosest@target 0101  
                                   ?i2___ftmul 000C                                     ?i2___fttol 002A  
                          __size_of_getClosest 005A                            __end_of_findClosest 1834  
                                 _marcharAtras 3D3A                 _targetMapDetection_subArrayAvg 00CD  
                       __size_of_TMR3_GATE_ISR 0028                         __end_of_TMR3_ReadTimer 3BBE  
                      __size_ofi2_marcharAtras 0012                       __size_of_PIN_MANAGER_IOC 0024  
                       __end_of_TMR0_StopTimer 3EAA                                 ?_tacticas_init 0001  
                     __end_of_tomaRealizadaT1G 2D80                       __end_of_tomaRealizadaT3G 2CDC  
                       ??i2_marcharAtrasTiempo 0042                      ??i2_girarXgradosizquierda 0042  
                             __CFG_LPBOREN$OFF 000000                         i1usonic_trigger@sensor 0060  
                     __size_of_PWM3_Initialize 0016                       __size_of_TMR1_Initialize 0040  
                             ??_PMD_Initialize 0100                                ?_TMR0_ReadTimer 0100  
                              _marcharAdelante 3D4C                                 ?i2_motorDe_set 0001  
                               ?i2_TMR0_Reload 0001                                       ??___wmul 0104  
                     __end_ofi2_TMR0_StopTimer 3EBA                                    _CCPTMRSbits 000FAE  
                                     ??_atacar 0101                       _girarXgradosderecha$3907 0141  
                               ?i2_motorIz_set 0001                          __end_of_buscarEnemigo 13E2  
   __end_ofi1_TMR1_StartSinglePulseAcquisition 3EB6    __size_ofi1_TMR1_StartSinglePulseAcquisition 0004  
     __end_of_TMR1_StartSinglePulseAcquisition 3EA6      __size_of_TMR1_StartSinglePulseAcquisition 0004  
          ?i1_TMR1_StartSinglePulseAcquisition 0001              ?_TMR1_StartSinglePulseAcquisition 0001  
         ??i1_TMR1_StartSinglePulseAcquisition 0060             ??_TMR1_StartSinglePulseAcquisition 0100  
           i1_TMR1_StartSinglePulseAcquisition 3EB2               _TMR1_StartSinglePulseAcquisition 3EA2  
       __end_of_IOCBF1_DefaultInterruptHandler 3EC6        __size_of_IOCBF1_DefaultInterruptHandler 0002  
               _IOCBF1_DefaultInterruptHandler 3EC4                                ?_TMR1_ReadTimer 0001  
                  ??_giroLeveDerechaRetroceder 0141                              elegirTactica@lado 011D  
                            __size_of___ftpack 00B0                                    __pbssCOMRAM 005D  
                       i2delayTmr@miliSegundos 003B                              __size_of___lwtoft 0026  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                      ?_giroLeveDerechaAvanzar 013F                       __size_of_PWM4_Initialize 0016  
                     __size_of_TMR2_Initialize 001E                    ?_IOCBF2_SetInterruptHandler 0100  
                 i2_girarXgradosizquierda$4083 0042                        __end_of_borde_detectado 2F90  
                   i2marcharAtrasTiempo@tiempo 0040                  ?_TMR5_DefaultInterruptHandler 0001  
                            __size_of_delayTmr 00E6                          __end_of_buscar_t_init 373C  
                       __size_of_TMR5_CallBack 0024                                ?_TMR3_ReadTimer 0001  
                                    __pnvBANK0 00D8                                      __pnvBANK1 015B  
                     __size_of_TMR0_StartTimer 0004                                 findClosest@arr 010C  
                               findClosest@mid 011B                                ?_TMR0_StopTimer 0001  
                      _IOCBF3_InterruptHandler 00E1               __end_of_giroLeveIzquierdaAvanzar 3506  
                      ??_girarXgradosizquierda 0141                               ___lwdiv@dividend 0060  
                       _PIN_MANAGER_Initialize 2632               ??_IOCBF2_DefaultInterruptHandler 0001  
              ?_IOCBF2_DefaultInterruptHandler 0001                         _TMR3G_InterruptHandler 00DB  
                       tomaRealizadaT1G@mamado 0095                       __size_of_TMR3_Initialize 0040  
                             ??_drv_cny70_init 0103                                  _TMR1_GATE_ISR 3978  
                                    __pintcode 0008                           usonic_trigger@sensor 0100  
                            __size_of_setPwmDe 0012                              __size_of_setPwmIz 0012  
                                     ?___awdiv 0100                                      __ptext100 3978  
                                    __ptext101 3D00                                      __ptext110 32B0  
                                    __ptext102 3E54                                      __ptext111 3EC8  
                                    __ptext103 3C74                                      __ptext120 3D70  
                                    __ptext112 38AA                                      __ptext104 3BBE  
                                    __ptext121 3070                                      __ptext113 38D4  
                                    __ptext105 3AF2                                      __ptext130 3B3A  
                                    __ptext122 30D8                                      __ptext114 38FE  
                                    __ptext106 3880                                      __ptext131 254C  
                                    __ptext123 3E62                                      __ptext115 2F1E  
                                    __ptext107 3EC2                                      __ptext132 19E2  
                                    __ptext124 37FE                                      __ptext116 28B4  
                                    __ptext108 3EC4                                      __ptext133 3E94  
                                    __ptext125 382A                                      __ptext117 3BDE  
                                    __ptext109 3EC6                                       ?___ftadd 011D  
                                    __ptext134 3EB6                                      __ptext126 2716  
                                    __ptext118 3D5E                                      __ptext135 3EBA  
                                    __ptext127 3A84                                      __ptext119 3BFE  
                                    __ptext136 3E88                                      __ptext128 3B16  
                                    __ptext137 228A                                      __ptext129 2196  
                                    __ptext138 2B88                                      __ptext139 0000  
                                    _detenerse 3DBA                                       ?___ftdiv 010B  
                                     ?___ftneg 011A                                       ?___ftmul 010B  
                                     ?___fttol 0129                                       ?___lwdiv 0060  
                       tomaRealizadaT3G@mamado 0095                __end_of_TMR1_HasOverflowOccured 3E46  
             __size_ofi2_marcharAdelanteTiempo 0020                          _marcharAdelanteTiempo 39C6  
                            ?_tactica_ejecutar 0001                                      _borde_isr 32B0  
                                  __pintcodelo 0018                                  _TMR3_GATE_ISR 3950  
                           ??_tactica_ejecutar 0143                       __size_of_tactica_default 0002  
                                    _med_final 00CF                                    __smallconst 0F00  
                                    _med_front 0157                                      _med_right 014B  
               __end_of_giroLeveDerechaAvanzar 3582                                    _findClosest 1628  
                          _dist_tacticas_front 00D3                       __size_of_TMR0_WriteTimer 000C  
                          _dist_tacticas_right 00D5             __end_of_IOCBF0_SetInterruptHandler 3E1C  
                   _IOCBF0_SetInterruptHandler 3E0E             __end_of_IOCBF3_SetInterruptHandler 3DF2  
                   _IOCBF3_SetInterruptHandler 3DE4                       __size_of_tactica_front_1 0038  
                     __size_of_tactica_front_2 0038                                    ??i1___ftmul 0071  
                                  ??i1___fttol 007E                               ___lwdiv@quotient 0064  
                     __size_of_tactica_right_1 0038                                    ??i2___ftadd 0024  
                                  ??i2___ftdiv 0012                                    ??i2___ftneg 001E  
                                     _T2CLKCON 000FBF                                    ??i2___ftmul 0012  
                                  ??i2___fttol 002E                     _girarXgradosizquierda$3906 0141  
                                 ??_acomodarse 0044                           _INTERRUPT_Initialize 3E1C  
                   __end_of_marcharAtrasTiempo 3A12                    __end_of_girarXgradosderecha 3000  
                            ??_TMR0_Initialize 0100                      _giroLeveDerechaRetroceder 3582  
                               ___wmul@product 0104                                       _LATAbits 000F83  
                              ??_tacticas_init 0103                                       _LATDbits 000F86  
                      __end_of_marcharAdelante 3D5E                                       _LATEbits 000F87  
                         _pulsoCapturadoTimer1 3D00                           _pulsoCapturadoTimer3 3CEA  
                  ??_TMR1G_SetInterruptHandler 0103                         __size_of_elegirTactica 0120  
                                     _IPR0bits 000EBA                                       _PIE0bits 000EC2  
                                     _IPR4bits 000EBE                                       _IPR5bits 000EBF  
                                     _PIE4bits 000EC6                                       _PIE5bits 000EC7  
                          __CFG_BORV$VBOR_2P45 000000                                 _usonic_trigger 319E  
                            i2_TMR0_StartTimer 3EBA                                       i1u500_20 2F02  
                                     i1u501_20 2F0A                                       i1u501_26 2F0C  
                                    _posInicio 00CB                       __size_of_TMR1_WriteTimer 001C  
                                     i1u361_20 2B68                                       i1u453_20 3E42  
                                     i1u357_20 2AEA                                ??i2_motorDe_set 0001  
                                     i1u455_20 3E34                                       i1u464_20 2D68  
                              ??i2_TMR0_Reload 0001                                       i2u320_40 1A26  
                                     i1u464_26 2D6A                                       i1u393_20 1EFE  
                                     i2u313_40 2C16                                       i1u393_25 1EF6  
                                     i2u330_40 1ACC                                       i1u379_20 332A  
                                     i2u323_40 1A50                                       i1u468_20 2CC2  
                                     i1u468_26 2CC4                                       i1u397_20 1F82  
                                     i1u493_20 2EB0                                       i2u309_40 2B98  
                                     i2u333_40 1B00                                       i2u326_40 1A8E  
                                     i1u495_20 2ECE                                       i2u502_45 32C8  
                                     i2u502_47 32CA                                       i2u351_40 2798  
                                     _PIR0bits 000ECA                                       i2u503_45 32D2  
                                     i2u503_47 32D4                                       i2u352_40 27A6  
                                     i2u351_48 279A                                       i1u497_20 2EE0  
                                     i2u504_45 32DC                                       i2u504_47 32DE  
                                     i2u345_40 21E0                                       i2u353_40 27C0  
                                     i2u352_48 27A8                                       i2u505_40 32E6  
                               ?_TMR1_GATE_ISR 0001                                       i1u498_20 2EE8  
                                     i2u345_45 21D8                                       i2u505_46 32E8  
                                     i2u353_48 27C2                                       i1u498_26 2EEA  
                                     i2u349_40 2262                                       i2u470_40 2F36  
                                     i2u471_40 2F4E                                       i2u470_48 2F38  
                                     _PIR4bits 000ECE                                       i1u855_28 3ADE  
                                     i2u472_40 2F62                                       i2u471_48 2F50  
                                     i2u472_48 2F64                                       _PIR5bits 000ECF  
                                     i1u890_27 3220                                       i1u891_27 322E  
                                     i2u469_40 2F28                                       i2u469_48 2F2A  
                                     i1u888_27 3204                                  ??_motorDe_set 0100  
                                     i1u889_27 3212                                  ??_TMR0_Reload 0100  
                                     i2u851_48 38BA                                       i2u851_49 38CE  
                                     i2u853_48 3890                                       i2u861_48 3964  
                                     i2u853_49 38A4                                       i2u847_48 390E  
                                     i2u863_48 398C                                       i2u847_49 3922  
                                     i2u849_48 38E4                                       i2u849_49 38F8  
                          buscar_t_init@sensID 0102                                       i2u892_47 32B6  
                     __size_of_TMR5_Initialize 0050                                  ??_TMR1_Reload 0003  
                           ?i2_TMR0_StartTimer 0001                                   ??_getClosest 0102  
                              ??i2_motorIz_set 0001                      computarMedicion@distancia 008C  
                         __CFG_WDTCPS$WDTCPS_0 000000                                     ?_detenerse 0001  
                                ??_TMR3_Reload 0003                                       _TMR5_ISR 3CD4  
                                ??_motorIz_set 0100                              ??_PIN_MANAGER_IOC 004B  
                                   ?_borde_isr 0001                                 ?_TMR3_GATE_ISR 0001  
                     TMR0_ReadTimer@readValLow 0106                                  _TMR5_CallBack 3ACE  
                            ??_TMR1_Initialize 0100                              ??_PWM3_Initialize 0100  
                           __end_of_acomodarse 2970                       TMR3_ReadTimer@readValLow 0008  
                          ??i2_TMR0_StartTimer 0001                              ___wmul@multiplier 0100  
               __size_ofi2_girarXgradosderecha 0068                                       i2___wmul 3A84  
                __end_ofi2_girarXgradosderecha 3140              __size_of_TMR5_SetInterruptHandler 000E  
                            i2_TMR0_WriteTimer 3E94                      ?_TMR5_SetInterruptHandler 0100  
                             ?_borde_detectado 0001                             ?i2_TMR0_WriteTimer 0039  
                        ?_INTERRUPT_Initialize 0001                             __end_of_getClosest 32B0  
                            ??_TMR2_Initialize 0100                              ??_PWM4_Initialize 0100  
                       __end_of_usonic_trigger 31FA                          ?_pulsoCapturadoTimer1 0001  
                        ?_pulsoCapturadoTimer3 0001             __size_of_TMR3G_SetInterruptHandler 000E  
                    __end_ofi2_TMR0_StartTimer 3EBE                 ??_TMR5_DefaultInterruptHandler 0060  
                               i2_marcharAtras 3D5E                            ??i2_TMR0_WriteTimer 003B  
                   ?_TMR3G_SetInterruptHandler 0100                       __end_of_computarMedicion 1628  
                                     __Hrparam 0000                       __size_of_TMR3_WriteTimer 001C  
                   __end_of_PWM4_LoadDutyValue 3708                                       __Lrparam 0000  
                        TMR1_ReadTimer@readVal 0005                     buscarEnemigo@current_milis 0147  
                       ?_marcharAdelanteTiempo 013F                        ??_OSCILLATOR_Initialize 0100  
                            ??_TMR0_StartTimer 0100                               __size_of___awdiv 0086  
                             __size_of___ftadd 01AE                               __size_of___ftdiv 00E8  
                             __size_of___ftneg 0026                          i2___wmul@multiplicand 0003  
                               ?_TMR5_CallBack 0001                               __size_of___ftmul 00F6  
                             __size_of___fttol 00F8                               __size_of___lwdiv 0054  
                                     ___ftpack 2A28                              ??_TMR3_Initialize 0100  
                          __end_of_motorDe_set 37D0                            __end_of_TMR0_Reload 3E88  
                    _TMR1G_SetInterruptHandler 3D90                             _PWM3_LoadDutyValue 36A0  
                          __end_of_TMR1_Reload 3E62                                       ___lwtoft 3A12  
                                _elegirTactica 1B8E                      __end_ofi2_TMR0_WriteTimer 3E9E  
                    __size_ofi1_usonic_trigger 005C                            __end_of_TMR3_Reload 3E54  
                          __end_of_motorIz_set 37A0                                     _T0CON0bits 000FD5  
              ??_INTERRUPT_InterruptManagerLow 0096              __size_of_giroLeveIzquierdaAvanzar 003E  
                  i2girarXgradosderecha@grados 0040                                       _delayTmr 2466  
                    ?_giroLeveIzquierdaAvanzar 013F                                ___lwdiv@divisor 0062  
                              ___lwdiv@counter 0066                                       __ptext10 35F8  
                                     __ptext11 3630                                       __ptext20 36A0  
                                     __ptext12 33FC                                       __ptext21 3D28  
                                     __ptext13 3EBE                                     _T1GCONbits 000FD0  
                                     __ptext30 3D9E                                       __ptext22 36D4  
                                     __ptext14 3668                                       __ptext31 1628  
                                     __ptext23 39C6                                       __ptext15 34C8  
                                     __ptext40 3A12                                       __ptext32 3256  
                                     __ptext24 2F90                                       __ptext16 3506  
                                     __ptext41 1DBA                                       __ptext33 2E14  
                                     __ptext25 39EC                                       __ptext17 3544  
                                     __ptext50 3708                                       __ptext42 3A38  
                                     __ptext34 335A                                       __ptext26 3D3A  
                                     __ptext18 3582                                       __ptext51 3B5E  
                                     __ptext43 237E                                       __ptext35 3DAC  
                                     __ptext27 3000                                       __ptext19 3D16  
                                     __ptext60 3DD6                                       __ptext52 2D80  
                                     __ptext44 1834                                       __ptext36 3140  
                                     __ptext28 1FAA                                       __ptext61 3448  
                                     __ptext53 3D4C                                       __ptext45 2A28  
                                     __ptext37 0F3C                                       __ptext29 1B8E  
                                     __ptext70 3DF2                                       __ptext62 3C1E  
                                     __ptext54 3DBA                                       __ptext46 3E70  
                                     __ptext38 2466                                       __ptext71 3E00  
                                     __ptext63 3488                                       __ptext55 3770  
                                     __ptext47 3EA6                                       __ptext39 3928  
                                     __ptext80 2E9A                                       __ptext72 3E0E  
                                     __ptext64 373C                                       __ptext56 37A0  
                                     __ptext48 3EAA                                       __ptext81 2C36  
                                     __ptext73 3C90                                       __ptext65 3CA8  
                                     __ptext57 3DC8                                       __ptext49 3E7C  
                                     __ptext90 2AD8                                       __ptext82 3EAE  
                                     __ptext74 3E1C                                       __ptext66 3CBE  
                                     __ptext58 37D0                            ?_PWM3_LoadDutyValue 0100  
                                     __ptext91 3306                                       __ptext83 2CDC  
                                     __ptext67 3C3C                                       __ptext59 33AC  
                                     __ptext92 3E2A                                       __ptext84 31FA  
                                     __ptext76 3CD4                                       __ptext68 2632  
                                     __ptext93 3E38                                       __ptext85 3EB2  
                                     __ptext77 3B7E                                       __ptext69 3DE4  
                                     __ptext86 13E2                                       __ptext78 3ACE  
                                     __ptext95 3950                                       __ptext87 3A5E  
                                     __ptext79 3EC0                                       __ptext96 3CEA  
                                     __ptext88 1EB2                                       __ptext97 3E46  
                                     __ptext89 20A0                                       __ptext98 3C58  
                                     __ptext99 3B9E                   ??_IOCBF1_SetInterruptHandler 0103  
                            atacar@pararAtaque 0104                              ??_tactica_default 0100  
                      __size_of_tactica_back_1 004C                                       _med_back 0153  
               giroLeveIzquierdaAvanzar@tiempo 013F                                     _IOCBF0_ISR 38FE  
                                   _IOCBF1_ISR 38D4                                     _IOCBF2_ISR 38AA  
                                     _med_left 014F                                     _IOCBF3_ISR 3880  
                      TMR0_WriteTimer@timerVal 0138                                     _T3GCONbits 000FCA  
                       __end_ofi2_marcharAtras 3D70                              ??_TMR0_WriteTimer 013A  
                      __size_of_tactica_elegir 000E                        TMR3_WriteTimer@timerVal 0001  
                      __size_of_tactica_left_1 0038               __size_of_TMR1_HasOverflowOccured 000E  
                            ??_tactica_front_1 0143                              ??_tactica_front_2 0143  
                                   _T1GPPSbits 000EA6                                  __size_of_main 010C  
                              ?_usonic_trigger 0001                                     _T5GCONbits 000FC4  
                                  _modoNonStop 00CE                               ??_TMR0_ReadTimer 0102  
                             ?_marcharAdelante 0001                              ??_tactica_right_1 0143  
                              ??_TMR1_GATE_ISR 0009                           __CFG_WDTCWS$WDTCWS_0 000000  
            __end_of_TMR3G_SetInterruptHandler 3D90                                     _T3GPPSbits 000EA8  
                                     _setPwmDe 3D28                                       _setPwmIz 3D16  
                     __size_of_TMR5_WriteTimer 0020                              ?_tomaRealizadaT1G 0001  
                            ?_tomaRealizadaT3G 0001                           ??_PWM3_LoadDutyValue 0102  
                                ??i2_detenerse 0002                        i2_marcharAdelanteTiempo 3BFE  
                             ??_TMR1_ReadTimer 0003                                       int$flags 005F  
                                  ??_detenerse 0101                             ??_tomaRealizadaT1G 0094  
                           ??_tomaRealizadaT3G 0094                                ??_TMR3_GATE_ISR 0009  
                               buscarEnemigo@i 0149                              ?i2_TMR0_StopTimer 0001  
                                  ??_borde_isr 004A                              ??_TMR1_WriteTimer 0003  
                                 motorDe_set@a 0100                             ??i2_TMR0_StopTimer 0001  
          __size_of_IOCBF1_SetInterruptHandler 000E                                 ?_elegirTactica 011C  
                            ??_TMR5_Initialize 0103                                  ??_usonic_init 0103  
                                ??_usonic_tick 0096                                       exp@coeff 0F01  
                                     log@coeff 0F1F                       ?_TMR0_HasOverflowOccured 0001  
                     ?_TMR3_HasOverflowOccured 0001                                     _INTCONbits 000FF2  
                       computarMedicion@sensor 008B                         ??_INTERRUPT_Initialize 0100  
                     marcharAtrasTiempo@tiempo 013F                               ??_TMR3_ReadTimer 0003  
                                     intlevel1 0000                                       intlevel2 0000  
                             ??_TMR0_StopTimer 0100                                ?i2_marcharAtras 0001  
                       ??_pulsoCapturadoTimer1 0009                         ??_pulsoCapturadoTimer3 0009  
                                 motorIz_set@a 0100                                   findClosest@a 0117  
                                 findClosest@i 0119                                   findClosest@j 011A  
                                 findClosest@n 010E                        ?_PIN_MANAGER_Initialize 0001  
                   __size_ofi2_TMR0_StartTimer 0004                                _interrupt_flags 00C2  
                            __CFG_CLKOUTEN$OFF 000000                 __size_of_girarXgradosizquierda 0070  
                                  _motorDe_set 37A0                                    _TMR0_Reload 3E7C  
                __end_of_girarXgradosizquierda 3070                  __size_ofi2_marcharAtrasTiempo 0020  
                              ??_TMR5_CallBack 0096                                    _TMR1_Reload 3E54  
           __size_of_giroLeveDerechaRetroceder 003E                                    _TMR3_Reload 3E46  
                  PWM3_LoadDutyValue@dutyValue 0100                                    _motorIz_set 3770  
                 ?_giroLeveIzquierdaRetroceder 013F                              ??_TMR3_WriteTimer 0003  
       __end_of_INTERRUPT_InterruptManagerHigh 2A28        __size_of_INTERRUPT_InterruptManagerHigh 2A20  
               _INTERRUPT_InterruptManagerHigh 0008                     __size_ofi2_TMR0_WriteTimer 000A  
                          __end_ofi2_detenerse 3E70                                   ?_findClosest 010C  
       __end_of_IOCBF2_DefaultInterruptHandler 3EC8        __size_of_IOCBF2_DefaultInterruptHandler 0002  
               _IOCBF2_DefaultInterruptHandler 3EC6                                _TMR0_Initialize 373C  
                             buscar_t_init@med 0100                giroLeveDerechaRetroceder@tiempo 013F  
                  ?_IOCBF0_SetInterruptHandler 0100                   giroLeveDerechaAvanzar@tiempo 013F  
                  ?_IOCBF3_SetInterruptHandler 0100                            __end_of_usonic_init 28B4  
                          __end_of_usonic_tick 2F1E  getLowestDistanceOnSensors_func@smallest_value 0106  
                    __size_of_tactica_ejecutar 0024          __end_of_INTERRUPT_InterruptManagerLow 00D2  
       __size_of_INTERRUPT_InterruptManagerLow 00BA                  _INTERRUPT_InterruptManagerLow 0018  
                                  ?_IOCBF0_ISR 0001                                    ?_IOCBF1_ISR 0001  
                                  ?_IOCBF2_ISR 0001                                    ?_IOCBF3_ISR 0001  
               __end_of_PIN_MANAGER_Initialize 2716               ??_IOCBF0_DefaultInterruptHandler 0001  
              ?_IOCBF0_DefaultInterruptHandler 0001                       ?i2_girarXgradosizquierda 0040  
                       __size_of_buscarEnemigo 04A6                                _PIN_MANAGER_IOC 3AF2  
                              _TMR1_Initialize 3488                                _PWM3_Initialize 3CBE  
                    ??i2_marcharAdelanteTiempo 0042                           elegirTactica@certeza 011E  
                       _TMR1G_InterruptHandler 00DE  
